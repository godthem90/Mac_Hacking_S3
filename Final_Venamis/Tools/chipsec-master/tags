!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-objs	source/drivers/linux/Makefile	/^	chipsec$(VERSION)-objs := chipsec_km.o amd64\/cpu.o$/;"	m
-objs	source/drivers/linux/Makefile	/^	chipsec$(VERSION)-objs := chipsec_km.o i386\/cpu.o$/;"	m
ACPI	source/tool/chipsec/hal/acpi.py	/^class ACPI:$/;"	c
ACPI_RSDP_SIG	source/tool/chipsec/hal/acpi.py	/^ACPI_RSDP_SIG = 'RSD PTR '$/;"	v
ACPI_RSDP_SIZE	source/tool/chipsec/hal/acpi.py	/^ACPI_RSDP_SIZE   = struct.calcsize(ACPI_RSDP_FORMAT)$/;"	v
ACPI_TABLES	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLES = {$/;"	v
ACPI_TABLE_APIC_GICC_CPU	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_GICC_CPU(namedtuple('ACPI_TABLE_APIC_GICC_CPU', 'Type Length Reserved CPUIntNumber ACPIProcUID Flags ParkingProtocolVersion PerformanceInterruptGSIV ParkedAddress PhysicalAddress GICV GICH VGICMaintenanceINterrupt GICRBaseAddress MPIDR')):$/;"	c
ACPI_TABLE_APIC_GIC_DISTRIBUTOR	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_GIC_DISTRIBUTOR(namedtuple('ACPI_TABLE_APIC_GIC_DISTRIBUTOR', 'Type Length Reserved GICID PhysicalBaseAddress SystemVectorBase Reserved2 ')):$/;"	c
ACPI_TABLE_APIC_GIC_MSI	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_GIC_MSI(namedtuple('ACPI_TABLE_APIC_GIC_MSI', 'Type Length Reserved GICMSIFrameID PhysicalBaseAddress Flags SPICount SPIBase')):$/;"	c
ACPI_TABLE_APIC_GIC_REDISTRIBUTOR	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_GIC_REDISTRIBUTOR(namedtuple('ACPI_TABLE_APIC_GIC_REDISTRIBUTOR', 'Type Length Reserved DiscoverRangeBaseAdd DiscoverRangeLength')):$/;"	c
ACPI_TABLE_APIC_INTERRUPT_SOURSE_OVERRIDE	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_INTERRUPT_SOURSE_OVERRIDE(namedtuple('ACPI_TABLE_APIC_INTERRUPT_SOURSE_OVERRIDE', 'Type Length Bus Source GlobalSysIntBase Flags')):$/;"	c
ACPI_TABLE_APIC_IOAPIC	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_IOAPIC(namedtuple('ACPI_TABLE_APIC_IOAPIC', 'Type Length IOAPICID Reserved IOAPICAddr GlobalSysIntBase')):$/;"	c
ACPI_TABLE_APIC_IOSAPIC	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_IOSAPIC(namedtuple('ACPI_TABLE_APIC_IOSAPIC', 'Type Length IOAPICID Reserved GlobalSysIntBase IOSAPICAddress')):$/;"	c
ACPI_TABLE_APIC_LAPIC_ADDRESS_OVERRIDE	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_LAPIC_ADDRESS_OVERRIDE(namedtuple('ACPI_TABLE_APIC_LAPIC_ADDRESS_OVERRIDE', 'Type Length Reserved LocalAPICAddress')):$/;"	c
ACPI_TABLE_APIC_LAPIC_NMI	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_LAPIC_NMI(namedtuple('ACPI_TABLE_APIC_LAPIC_NMI', 'Type Length ACPIProcessorID Flags LocalAPICLINT')):$/;"	c
ACPI_TABLE_APIC_Lx2APIC_NMI	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_Lx2APIC_NMI(namedtuple('ACPI_TABLE_APIC_Lx2APIC_NMI', 'Type Length Flags ACPIProcUID Localx2APICLINT Reserved')):$/;"	c
ACPI_TABLE_APIC_NMI_SOURCE	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_NMI_SOURCE(namedtuple('ACPI_TABLE_APIC_NMI_SOURCE', 'Type Length Flags GlobalSysIntBase')):$/;"	c
ACPI_TABLE_APIC_PLATFORM_INTERRUPT_SOURCES	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_PLATFORM_INTERRUPT_SOURCES(namedtuple('ACPI_TABLE_APIC_PLATFORM_INTERRUPT_SOURCES', 'Type Length Flags InterruptType ProcID ProcEID IOSAPICVector GlobalSystemInterrupt PlatIntSourceFlags')):$/;"	c
ACPI_TABLE_APIC_PROCESSOR_LAPIC	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_PROCESSOR_LAPIC(namedtuple('ACPI_TABLE_APIC_PROCESSOR_LAPIC', 'Type Length ACPIProcID APICID Flags')):$/;"	c
ACPI_TABLE_APIC_PROCESSOR_LSAPIC	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_PROCESSOR_LSAPIC(namedtuple('ACPI_TABLE_APIC_PROCESSOR_LSAPIC', 'Type Length ACPIProcID LocalSAPICID LocalSAPICEID Reserved Flags ACPIProcUIDValue ACPIProcUIDString'), ):$/;"	c
ACPI_TABLE_APIC_PROCESSOR_Lx2APIC	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_APIC_PROCESSOR_Lx2APIC(namedtuple('ACPI_TABLE_APIC_PROCESSOR_Lx2APIC', 'Type Length Reserved x2APICID Flags ACPIProcUID')):$/;"	c
ACPI_TABLE_DMAR_ANDD	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_ANDD( namedtuple('ACPI_TABLE_DMAR_ANDD', 'Type Length Reserved ACPIDevNum ACPIObjectName') ):$/;"	c
ACPI_TABLE_DMAR_ANDD_SIZE	source/tool/chipsec/hal/acpi_tables.py	/^ACPI_TABLE_DMAR_ANDD_SIZE   = struct.calcsize(ACPI_TABLE_DMAR_ANDD_FORMAT)$/;"	v
ACPI_TABLE_DMAR_ATSR	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_ATSR( namedtuple('ACPI_TABLE_DMAR_ATSR', 'Type Length Flags Reserved SegmentNumber DeviceScope') ):$/;"	c
ACPI_TABLE_DMAR_DRHD	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_DRHD( namedtuple('ACPI_TABLE_DMAR_DRHD', 'Type Length Flags Reserved SegmentNumber RegisterBaseAddr DeviceScope') ):$/;"	c
ACPI_TABLE_DMAR_DeviceScope	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_DeviceScope( namedtuple('ACPI_TABLE_DMAR_DeviceScope', 'Type Length Reserved EnumerationID StartBusNum Path DMAR_DS_TYPE') ):$/;"	c
ACPI_TABLE_DMAR_RHSA	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_RHSA( namedtuple('ACPI_TABLE_DMAR_RHSA', 'Type Length Reserved RegisterBaseAddr ProximityDomain') ):$/;"	c
ACPI_TABLE_DMAR_RMRR	source/tool/chipsec/hal/acpi_tables.py	/^class ACPI_TABLE_DMAR_RMRR( namedtuple('ACPI_TABLE_DMAR_RMRR', 'Type Length Reserved SegmentNumber RMRBaseAddr RMRLimitAddr DeviceScope') ):$/;"	c
ACPI_TABLE_HEADER	source/tool/chipsec/hal/acpi.py	/^class ACPI_TABLE_HEADER( namedtuple('ACPI_TABLE_HEADER', 'Signature Length Revision Checksum OEMID OEMTableID OEMRevision CreatorID CreatorRevision') ):$/;"	c
ACPI_TABLE_HEADER_SIZE	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_HEADER_SIZE   = struct.calcsize(ACPI_TABLE_HEADER_FORMAT) # 36$/;"	v
ACPI_TABLE_SIG_APIC	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_APIC = 'APIC'$/;"	v
ACPI_TABLE_SIG_ASF	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_ASF  = 'ASF!'$/;"	v
ACPI_TABLE_SIG_BATB	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_BATB = 'BATB'$/;"	v
ACPI_TABLE_SIG_BGRT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_BGRT = 'BGRT'$/;"	v
ACPI_TABLE_SIG_BOOT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_BOOT = 'BOOT'$/;"	v
ACPI_TABLE_SIG_CPEP	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_CPEP = 'CPEP'$/;"	v
ACPI_TABLE_SIG_DBGP	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_DBGP = 'DBGP'$/;"	v
ACPI_TABLE_SIG_DMAR	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_DMAR = 'DMAR'$/;"	v
ACPI_TABLE_SIG_DSDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_DSDT = 'DSDT'$/;"	v
ACPI_TABLE_SIG_ECDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_ECDT = 'ECDT'$/;"	v
ACPI_TABLE_SIG_ETDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_ETDT = 'ETDT'$/;"	v
ACPI_TABLE_SIG_FACP	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_FACP = 'FACP'$/;"	v
ACPI_TABLE_SIG_FACS	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_FACS = 'FACS'$/;"	v
ACPI_TABLE_SIG_FPDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_FPDT = 'FPDT'$/;"	v
ACPI_TABLE_SIG_HPET	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_HPET = 'HPET'$/;"	v
ACPI_TABLE_SIG_MCFG	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_MCFG = 'MCFG'$/;"	v
ACPI_TABLE_SIG_MSDM	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_MSDM = 'MSDM'$/;"	v
ACPI_TABLE_SIG_MSEG	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_MSEG = 'MSEG'$/;"	v
ACPI_TABLE_SIG_PCCT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_PCCT = 'PCCT'$/;"	v
ACPI_TABLE_SIG_PSDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_PSDT = 'PSDT'$/;"	v
ACPI_TABLE_SIG_ROOT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_ROOT = 'ROOT' $/;"	v
ACPI_TABLE_SIG_RSDP	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_RSDP = 'RSDP'$/;"	v
ACPI_TABLE_SIG_RSDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_RSDT = 'RSDT'$/;"	v
ACPI_TABLE_SIG_SBST	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SBST = 'SBST'$/;"	v
ACPI_TABLE_SIG_SIZE	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SIZE = 0x4$/;"	v
ACPI_TABLE_SIG_SLIC	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SLIC = 'SLIC'$/;"	v
ACPI_TABLE_SIG_SLIT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SLIT = 'SLIT'$/;"	v
ACPI_TABLE_SIG_SPCR	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SPCR = 'SPCR'$/;"	v
ACPI_TABLE_SIG_SPMI	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SPMI = 'SPMI'$/;"	v
ACPI_TABLE_SIG_SRAT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SRAT = 'SRAT'$/;"	v
ACPI_TABLE_SIG_SSDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_SSDT = 'SSDT'$/;"	v
ACPI_TABLE_SIG_TCPA	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_TCPA = 'TCPA'$/;"	v
ACPI_TABLE_SIG_UEFI	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_UEFI = 'UEFI'$/;"	v
ACPI_TABLE_SIG_WDAT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_WDAT = 'WDAT'$/;"	v
ACPI_TABLE_SIG_WDDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_WDDT = 'WDDT'$/;"	v
ACPI_TABLE_SIG_WDRT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_WDRT = 'WDRT'$/;"	v
ACPI_TABLE_SIG_WSPT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_WSPT = 'WSPT'$/;"	v
ACPI_TABLE_SIG_XSDT	source/tool/chipsec/hal/acpi.py	/^ACPI_TABLE_SIG_XSDT = 'XSDT'$/;"	v
ACPI_TABLE_SIZE_APIC	source/tool/chipsec/hal/acpi_tables.py	/^ACPI_TABLE_SIZE_APIC   = struct.calcsize(ACPI_TABLE_FORMAT_APIC)$/;"	v
ACPI_TABLE_SIZE_DMAR	source/tool/chipsec/hal/acpi_tables.py	/^ACPI_TABLE_SIZE_DMAR   = struct.calcsize(ACPI_TABLE_FORMAT_DMAR)$/;"	v
ACPI_VARIABLE_SET_STRUCT_SIZE	source/tool/chipsec/hal/uefi_common.py	/^ACPI_VARIABLE_SET_STRUCT_SIZE    = 0x48$/;"	v
ADDITIONAL_NV_STORE_GUID	source/tool/chipsec/hal/uefi_platform.py	/^ADDITIONAL_NV_STORE_GUID = '00504624-8A59-4EEB-BD0F-6B36E96128E0'$/;"	v
ALIGNED_128MB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_128MB = 0x7FFFFFF$/;"	v	class:Cfg
ALIGNED_1MB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_1MB   = 0xFFFFF$/;"	v	class:Cfg
ALIGNED_256MB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_256MB = 0xFFFFFFF$/;"	v	class:Cfg
ALIGNED_4KB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_4KB   = 0xFFF$/;"	v	class:Cfg
ALIGNED_64MB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_64MB  = 0x3FFFFFF$/;"	v	class:Cfg
ALIGNED_8MB	source/tool/chipsec/cfg/common.py	/^    ALIGNED_8MB   = 0x7FFFFF$/;"	v	class:Cfg
ALIGNED_8MB	source/tool/chipsec/modules/smm_dma.py	/^ALIGNED_8MB   = 0x7FFFFF$/;"	v
APIC	source/tool/chipsec/hal/acpi_tables.py	/^class APIC():$/;"	c
ATIME	tools/edk2/PythonEFI/edk2module.c	1365;"	d	file:
ATIME	tools/edk2/PythonEFI/edk2module.c	1428;"	d	file:
AUTHENTICATED_VARIABLES	source/tool/chipsec/hal/uefi.py	/^AUTHENTICATED_VARIABLES    = ('AuthVarKeyDatabase', 'certdb') + SECURE_BOOT_KEY_VARIABLES$/;"	v
AcpiRuntimeError	source/tool/chipsec/hal/acpi.py	/^class AcpiRuntimeError (RuntimeError):$/;"	c
BIOS	source/tool/chipsec/hal/spi.py	/^BIOS              = 1$/;"	v
BIT0	source/tool/chipsec/cfg/common.py	/^    BIT0 = 0x0001$/;"	v	class:Cfg
BIT1	source/tool/chipsec/cfg/common.py	/^    BIT1 = 0x0002$/;"	v	class:Cfg
BIT10	source/tool/chipsec/cfg/common.py	/^    BIT10 = 0x0400$/;"	v	class:Cfg
BIT11	source/tool/chipsec/cfg/common.py	/^    BIT11 = 0x0800$/;"	v	class:Cfg
BIT12	source/tool/chipsec/cfg/common.py	/^    BIT12 = 0x1000$/;"	v	class:Cfg
BIT13	source/tool/chipsec/cfg/common.py	/^    BIT13 = 0x2000$/;"	v	class:Cfg
BIT14	source/tool/chipsec/cfg/common.py	/^    BIT14 = 0x4000$/;"	v	class:Cfg
BIT15	source/tool/chipsec/cfg/common.py	/^    BIT15 = 0x8000$/;"	v	class:Cfg
BIT16	source/tool/chipsec/cfg/common.py	/^    BIT16 = 0x00010000$/;"	v	class:Cfg
BIT17	source/tool/chipsec/cfg/common.py	/^    BIT17 = 0x00020000$/;"	v	class:Cfg
BIT18	source/tool/chipsec/cfg/common.py	/^    BIT18 = 0x00040000$/;"	v	class:Cfg
BIT19	source/tool/chipsec/cfg/common.py	/^    BIT19 = 0x00080000$/;"	v	class:Cfg
BIT2	source/tool/chipsec/cfg/common.py	/^    BIT2 = 0x0004$/;"	v	class:Cfg
BIT20	source/tool/chipsec/cfg/common.py	/^    BIT20 = 0x00100000$/;"	v	class:Cfg
BIT21	source/tool/chipsec/cfg/common.py	/^    BIT21 = 0x00200000$/;"	v	class:Cfg
BIT22	source/tool/chipsec/cfg/common.py	/^    BIT22 = 0x00400000$/;"	v	class:Cfg
BIT23	source/tool/chipsec/cfg/common.py	/^    BIT23 = 0x00800000$/;"	v	class:Cfg
BIT24	source/tool/chipsec/cfg/common.py	/^    BIT24 = 0x01000000$/;"	v	class:Cfg
BIT25	source/tool/chipsec/cfg/common.py	/^    BIT25 = 0x02000000$/;"	v	class:Cfg
BIT26	source/tool/chipsec/cfg/common.py	/^    BIT26 = 0x04000000$/;"	v	class:Cfg
BIT27	source/tool/chipsec/cfg/common.py	/^    BIT27 = 0x08000000$/;"	v	class:Cfg
BIT28	source/tool/chipsec/cfg/common.py	/^    BIT28 = 0x10000000$/;"	v	class:Cfg
BIT29	source/tool/chipsec/cfg/common.py	/^    BIT29 = 0x20000000$/;"	v	class:Cfg
BIT3	source/tool/chipsec/cfg/common.py	/^    BIT3 = 0x0008$/;"	v	class:Cfg
BIT30	source/tool/chipsec/cfg/common.py	/^    BIT30 = 0x40000000$/;"	v	class:Cfg
BIT31	source/tool/chipsec/cfg/common.py	/^    BIT31 = 0x80000000$/;"	v	class:Cfg
BIT32	source/tool/chipsec/cfg/common.py	/^    BIT32 = 0x100000000$/;"	v	class:Cfg
BIT33	source/tool/chipsec/cfg/common.py	/^    BIT33 = 0x200000000$/;"	v	class:Cfg
BIT34	source/tool/chipsec/cfg/common.py	/^    BIT34 = 0x400000000$/;"	v	class:Cfg
BIT35	source/tool/chipsec/cfg/common.py	/^    BIT35 = 0x800000000$/;"	v	class:Cfg
BIT36	source/tool/chipsec/cfg/common.py	/^    BIT36 = 0x1000000000$/;"	v	class:Cfg
BIT37	source/tool/chipsec/cfg/common.py	/^    BIT37 = 0x2000000000$/;"	v	class:Cfg
BIT38	source/tool/chipsec/cfg/common.py	/^    BIT38 = 0x4000000000$/;"	v	class:Cfg
BIT39	source/tool/chipsec/cfg/common.py	/^    BIT39 = 0x8000000000$/;"	v	class:Cfg
BIT4	source/tool/chipsec/cfg/common.py	/^    BIT4 = 0x0010$/;"	v	class:Cfg
BIT40	source/tool/chipsec/cfg/common.py	/^    BIT40 = 0x10000000000$/;"	v	class:Cfg
BIT41	source/tool/chipsec/cfg/common.py	/^    BIT41 = 0x20000000000$/;"	v	class:Cfg
BIT42	source/tool/chipsec/cfg/common.py	/^    BIT42 = 0x40000000000$/;"	v	class:Cfg
BIT43	source/tool/chipsec/cfg/common.py	/^    BIT43 = 0x80000000000$/;"	v	class:Cfg
BIT44	source/tool/chipsec/cfg/common.py	/^    BIT44 = 0x100000000000$/;"	v	class:Cfg
BIT45	source/tool/chipsec/cfg/common.py	/^    BIT45 = 0x200000000000$/;"	v	class:Cfg
BIT46	source/tool/chipsec/cfg/common.py	/^    BIT46 = 0x400000000000$/;"	v	class:Cfg
BIT47	source/tool/chipsec/cfg/common.py	/^    BIT47 = 0x800000000000$/;"	v	class:Cfg
BIT48	source/tool/chipsec/cfg/common.py	/^    BIT48 = 0x1000000000000$/;"	v	class:Cfg
BIT49	source/tool/chipsec/cfg/common.py	/^    BIT49 = 0x2000000000000$/;"	v	class:Cfg
BIT5	source/tool/chipsec/cfg/common.py	/^    BIT5 = 0x0020$/;"	v	class:Cfg
BIT50	source/tool/chipsec/cfg/common.py	/^    BIT50 = 0x4000000000000$/;"	v	class:Cfg
BIT51	source/tool/chipsec/cfg/common.py	/^    BIT51 = 0x8000000000000$/;"	v	class:Cfg
BIT52	source/tool/chipsec/cfg/common.py	/^    BIT52 = 0x10000000000000$/;"	v	class:Cfg
BIT53	source/tool/chipsec/cfg/common.py	/^    BIT53 = 0x20000000000000$/;"	v	class:Cfg
BIT54	source/tool/chipsec/cfg/common.py	/^    BIT54 = 0x40000000000000$/;"	v	class:Cfg
BIT55	source/tool/chipsec/cfg/common.py	/^    BIT55 = 0x80000000000000$/;"	v	class:Cfg
BIT56	source/tool/chipsec/cfg/common.py	/^    BIT56 = 0x100000000000000$/;"	v	class:Cfg
BIT57	source/tool/chipsec/cfg/common.py	/^    BIT57 = 0x200000000000000$/;"	v	class:Cfg
BIT58	source/tool/chipsec/cfg/common.py	/^    BIT58 = 0x400000000000000$/;"	v	class:Cfg
BIT59	source/tool/chipsec/cfg/common.py	/^    BIT59 = 0x800000000000000$/;"	v	class:Cfg
BIT6	source/tool/chipsec/cfg/common.py	/^    BIT6 = 0x0040$/;"	v	class:Cfg
BIT60	source/tool/chipsec/cfg/common.py	/^    BIT60 = 0x1000000000000000$/;"	v	class:Cfg
BIT61	source/tool/chipsec/cfg/common.py	/^    BIT61 = 0x2000000000000000$/;"	v	class:Cfg
BIT62	source/tool/chipsec/cfg/common.py	/^    BIT62 = 0x4000000000000000$/;"	v	class:Cfg
BIT63	source/tool/chipsec/cfg/common.py	/^    BIT63 = 0x8000000000000000$/;"	v	class:Cfg
BIT7	source/tool/chipsec/cfg/common.py	/^    BIT7 = 0x0080$/;"	v	class:Cfg
BIT8	source/tool/chipsec/cfg/common.py	/^    BIT8 = 0x0100$/;"	v	class:Cfg
BIT9	source/tool/chipsec/cfg/common.py	/^    BIT9 = 0x0200$/;"	v	class:Cfg
BLACK	source/tool/chipsec/logger.py	/^BLACK     =0$/;"	v
BLINK	source/tool/chipsec/logger.py	/^BLINK     =4$/;"	v
BLUE	source/tool/chipsec/logger.py	/^BLUE      =4$/;"	v
BOOTSCRIPT_TABLE_OFFSET	source/tool/chipsec/hal/uefi_common.py	/^BOOTSCRIPT_TABLE_OFFSET          = 24$/;"	v
BOUNDARY_128MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_128MB = 0x8000000$/;"	v	class:Cfg
BOUNDARY_1GB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_1GB   = 0x40000000$/;"	v	class:Cfg
BOUNDARY_1MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_1MB   = 0x100000$/;"	v	class:Cfg
BOUNDARY_256MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_256MB = 0x10000000$/;"	v	class:Cfg
BOUNDARY_2GB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_2GB   = 0x80000000$/;"	v	class:Cfg
BOUNDARY_4GB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_4GB   = 0x100000000$/;"	v	class:Cfg
BOUNDARY_4KB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_4KB   = 0x1000$/;"	v	class:Cfg
BOUNDARY_512MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_512MB = 0x20000000$/;"	v	class:Cfg
BOUNDARY_64MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_64MB  = 0x4000000$/;"	v	class:Cfg
BOUNDARY_8MB	source/tool/chipsec/cfg/common.py	/^    BOUNDARY_8MB   = 0x800000$/;"	v	class:Cfg
BRIGHT	source/tool/chipsec/logger.py	/^BRIGHT    =1$/;"	v
BUF_LEN	source/tool/chipsec/helper/linux/cores.c	16;"	d	file:
BWBR_PROCESS_CALL	source/tool/chipsec/hal/uefi_common.py	/^  BWBR_PROCESS_CALL = 0x0B$/;"	v	class:S3BootScriptSmbusOperation
BadSMIDetected	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^class BadSMIDetected (RuntimeError):$/;"	c
BaseModule	source/tool/chipsec/module_common.py	/^class BaseModule( object ):$/;"	c
CFG_REG_PCH_LPC_ACTL	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_LPC_ACTL   = 0x44 # ACPI Control  (ACTL)$/;"	v	class:Cfg
CFG_REG_PCH_LPC_GBA	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_LPC_GBA    = 0x48 # GPIO I\/O Base (GBA)$/;"	v	class:Cfg
CFG_REG_PCH_LPC_GC	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_LPC_GC     = 0x4C # GPIO Control  (GC)$/;"	v	class:Cfg
CFG_REG_PCH_LPC_PMBASE	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_LPC_PMBASE = 0x40 # ACPI I\/O Base (PMBASE\/ABASE)$/;"	v	class:Cfg
CFG_REG_PCH_LPC_PMBASE_MASK	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_LPC_PMBASE_MASK = ~0x1$/;"	v	class:Cfg
CFG_REG_PCH_SMB_CMD	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_CMD  = 0x04                    # D31:F3 Command$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG = 0x40                    # D31:F3 Host Configuration$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG_HST_EN	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG_HST_EN           = BIT0   # SMBus Host Enable$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG_I2C_EN	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG_I2C_EN           = BIT2   # I2C Enable$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG_SMB_SMI_EN	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG_SMB_SMI_EN       = BIT1   # SMBus SMI Enable$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG_SPD_WD	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG_SPD_WD           = BIT4   # SPD_WD$/;"	v	class:Cfg
CFG_REG_PCH_SMB_HCFG_SSRESET	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_HCFG_SSRESET          = BIT3   # Soft SMBus Reset$/;"	v	class:Cfg
CFG_REG_PCH_SMB_SBA	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_SBA  = 0x20                    # SMBus Base Address$/;"	v	class:Cfg
CFG_REG_PCH_SMB_SBA_BASE_ADDRESS_MASK	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_SBA_BASE_ADDRESS_MASK = 0xFFE0 # Base Address$/;"	v	class:Cfg
CFG_REG_PCH_SMB_SBA_IO	source/tool/chipsec/cfg/common.py	/^    CFG_REG_PCH_SMB_SBA_IO                = BIT0   # I\/O Space Indicator$/;"	v	class:Cfg
CHIPSEC	tools/edk2/PythonEFI/edk2module.c	44;"	d	file:
CHIPSEC_CTL_ACCESS	source/drivers/win7/include/chipsec.h	15;"	d
CHIPSEC_CTL_ACCESS	source/tool/chipsec/helper/win/win32helper.py	/^CHIPSEC_CTL_ACCESS = (FILE_READ_ACCESS | FILE_WRITE_ACCESS)$/;"	v
CHIPSEC_H	source/drivers/linux/include/chipsec.h	2;"	d
CHIPSEC_H	source/drivers/win7/include/chipsec.h	2;"	d
CHIPSEC_INSTALL_PATH	source/tool/chipsec/helper/win/win32helper.py	/^CHIPSEC_INSTALL_PATH = os.path.join(sys.prefix, "Lib\\site-packages\\chipsec")$/;"	v
CHIPSEC_VER_	source/drivers/linux/chipsec_km.c	37;"	d	file:
CHIPSEC_VER_MINOR	source/drivers/linux/chipsec_km.c	38;"	d	file:
CHIPSET_CODE_AVN	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_AVN     = 'AVN'$/;"	v
CHIPSET_CODE_BDW	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_BDW     = 'BDW'$/;"	v
CHIPSET_CODE_BYT	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_BYT     = 'BYT'$/;"	v
CHIPSET_CODE_COMMON	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_COMMON  = 'COMMON'$/;"	v
CHIPSET_CODE_HSW	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_HSW     = 'HSW'$/;"	v
CHIPSET_CODE_HSX	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_HSX     = 'HSX'$/;"	v
CHIPSET_CODE_IVB	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_IVB     = 'IVB'$/;"	v
CHIPSET_CODE_IVT	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_IVT     = 'IVT'$/;"	v
CHIPSET_CODE_JKT	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_JKT     = 'JKT'$/;"	v
CHIPSET_CODE_QRK	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_QRK     = 'QRK'$/;"	v
CHIPSET_CODE_SNB	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_SNB     = 'SNB'$/;"	v
CHIPSET_CODE_UNKNOWN	source/tool/chipsec/chipset.py	/^CHIPSET_CODE_UNKNOWN = ''$/;"	v
CHIPSET_FAMILY_ATOM	source/tool/chipsec/chipset.py	/^CHIPSET_FAMILY_ATOM  = [CHIPSET_ID_BYT,CHIPSET_ID_AVN]$/;"	v
CHIPSET_FAMILY_CORE	source/tool/chipsec/chipset.py	/^CHIPSET_FAMILY_CORE  = [CHIPSET_ID_SNB,CHIPSET_ID_IVB,CHIPSET_ID_HSW,CHIPSET_ID_BDW]$/;"	v
CHIPSET_FAMILY_QUARK	source/tool/chipsec/chipset.py	/^CHIPSET_FAMILY_QUARK = [CHIPSET_ID_QRK]$/;"	v
CHIPSET_FAMILY_XEON	source/tool/chipsec/chipset.py	/^CHIPSET_FAMILY_XEON  = [CHIPSET_ID_JKT,CHIPSET_ID_IVT,CHIPSET_ID_HSX]$/;"	v
CHIPSET_ID_AVN	source/tool/chipsec/chipset.py	/^CHIPSET_ID_AVN     = 9$/;"	v
CHIPSET_ID_BDW	source/tool/chipsec/chipset.py	/^CHIPSET_ID_BDW     = 7$/;"	v
CHIPSET_ID_BYT	source/tool/chipsec/chipset.py	/^CHIPSET_ID_BYT     = 6$/;"	v
CHIPSET_ID_COMMON	source/tool/chipsec/chipset.py	/^CHIPSET_ID_COMMON  = -1$/;"	v
CHIPSET_ID_HSW	source/tool/chipsec/chipset.py	/^CHIPSET_ID_HSW     = 5$/;"	v
CHIPSET_ID_HSX	source/tool/chipsec/chipset.py	/^CHIPSET_ID_HSX     = 10$/;"	v
CHIPSET_ID_IVB	source/tool/chipsec/chipset.py	/^CHIPSET_ID_IVB     = 3$/;"	v
CHIPSET_ID_IVT	source/tool/chipsec/chipset.py	/^CHIPSET_ID_IVT     = 4$/;"	v
CHIPSET_ID_JKT	source/tool/chipsec/chipset.py	/^CHIPSET_ID_JKT     = 2$/;"	v
CHIPSET_ID_QRK	source/tool/chipsec/chipset.py	/^CHIPSET_ID_QRK     = 8$/;"	v
CHIPSET_ID_SNB	source/tool/chipsec/chipset.py	/^CHIPSET_ID_SNB     = 1$/;"	v
CHIPSET_ID_UNKNOWN	source/tool/chipsec/chipset.py	/^CHIPSET_ID_UNKNOWN = 0$/;"	v
CLOSE_DRIVER	source/drivers/win7/include/chipsec.h	17;"	d
CLOSE_DRIVER	source/tool/chipsec/helper/win/win32helper.py	/^CLOSE_DRIVER                   = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
CMD_OPTS_WIDTH	source/tool/chipsec_util.py	/^CMD_OPTS_WIDTH = [ 'byte', 'word', 'dword' ]$/;"	v
CMOS	source/tool/chipsec/hal/cmos.py	/^class CMOS(HALBase):$/;"	c
CMOS_ADDR_PORT_HIGH	source/tool/chipsec/hal/cmos.py	/^CMOS_ADDR_PORT_HIGH = 0x72$/;"	v
CMOS_ADDR_PORT_LOW	source/tool/chipsec/hal/cmos.py	/^CMOS_ADDR_PORT_LOW  = 0x70$/;"	v
CMOS_DATA_PORT_HIGH	source/tool/chipsec/hal/cmos.py	/^CMOS_DATA_PORT_HIGH = 0x73$/;"	v
CMOS_DATA_PORT_LOW	source/tool/chipsec/hal/cmos.py	/^CMOS_DATA_PORT_LOW  = 0x71$/;"	v
COLOR_ID	source/tool/chipsec/logger.py	/^        COLOR_ID = {$/;"	v
COMMON_FILL_PTRN	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^COMMON_FILL_PTRN = "".join( ['%c' % chr(x + 0x1E) for x in range(32)] )$/;"	v
COMPRESSION_TYPES	source/tool/chipsec/hal/uefi_common.py	/^COMPRESSION_TYPES = [COMPRESSION_TYPE_TIANO, COMPRESSION_TYPE_LZMA]$/;"	v
COMPRESSION_TYPE_LZMA	source/tool/chipsec/hal/uefi_common.py	/^COMPRESSION_TYPE_LZMA  = 2$/;"	v
COMPRESSION_TYPE_TIANO	source/tool/chipsec/hal/uefi_common.py	/^COMPRESSION_TYPE_TIANO = 1$/;"	v
CONTEXT	source/drivers/linux/chipsec_km.c	/^} CONTEXT, *PCONTEXT;$/;"	t	typeref:struct:tagCONTEXT	file:
CPUID_CTX	source/drivers/linux/chipsec_km.c	/^typedef CONTEXT CPUID_CTX, *PCPUID_CTX;$/;"	t	file:
CPU_DT_CODE_GDTR	source/drivers/linux/include/chipsec.h	/^  CPU_DT_CODE_GDTR = 0x1,$/;"	e	enum:__anon2
CPU_DT_CODE_GDTR	source/drivers/win7/include/cpu.h	/^  CPU_DT_CODE_GDTR = 0x1,$/;"	e	enum:__anon5
CPU_DT_CODE_IDTR	source/drivers/linux/include/chipsec.h	/^  CPU_DT_CODE_IDTR = 0x0,$/;"	e	enum:__anon2
CPU_DT_CODE_IDTR	source/drivers/win7/include/cpu.h	/^  CPU_DT_CODE_IDTR = 0x0,$/;"	e	enum:__anon5
CPU_DT_CODE_LDTR	source/drivers/linux/include/chipsec.h	/^  CPU_DT_CODE_LDTR = 0x2,$/;"	e	enum:__anon2
CPU_DT_CODE_LDTR	source/drivers/win7/include/cpu.h	/^  CPU_DT_CODE_LDTR = 0x2,$/;"	e	enum:__anon5
CPU_H	source/drivers/win7/include/cpu.h	2;"	d
CPU_REG_TYPE	source/drivers/win7/include/cpu.h	/^typedef UINT32 CPU_REG_TYPE;$/;"	t
CPU_REG_TYPE	source/drivers/win7/include/cpu.h	/^typedef UINT64 CPU_REG_TYPE;$/;"	t
CTL_CODE	source/tool/chipsec/helper/win/win32helper.py	/^def CTL_CODE( DeviceType, Function, Method, Access ):$/;"	f
CYAN	source/tool/chipsec/logger.py	/^CYAN      =6$/;"	v
Cfg	source/tool/chipsec/cfg/common.py	/^class Cfg:$/;"	c
ChipsecMain	source/tool/chipsec_main.py	/^class ChipsecMain:$/;"	c
ChipsecUtil	source/tool/chipsec_util.py	/^class ChipsecUtil:$/;"	c
Chipset	source/tool/chipsec/chipset.py	/^class Chipset:$/;"	c
Chipset_Code	source/tool/chipsec/chipset.py	/^Chipset_Code = dict( [(Chipset_Dictionary[ _did ]['code'], _did) for _did in Chipset_Dictionary] )$/;"	v
Chipset_Dictionary	source/tool/chipsec/chipset.py	/^Chipset_Dictionary = {$/;"	v
CmosAccessError	source/tool/chipsec/hal/cmos.py	/^class CmosAccessError (RuntimeError):$/;"	c
CmosRuntimeError	source/tool/chipsec/hal/cmos.py	/^class CmosRuntimeError (RuntimeError):$/;"	c
CpuID	source/tool/chipsec/hal/cpuid.py	/^class CpuID:$/;"	c
CpuIDRuntimeError	source/tool/chipsec/hal/cpuid.py	/^class CpuIDRuntimeError (RuntimeError):$/;"	c
CrRegs	source/tool/chipsec/hal/cr.py	/^class CrRegs:$/;"	c
DEBUG	source/drivers/linux/debug.h	11;"	d
DEBUG	source/drivers/linux/include/chipsec.h	28;"	d
DEBUG	source/tool/chipsec/logger.py	/^    DEBUG      = False$/;"	v	class:Logger
DEFAULT_CONFIG_FILE_PATH	source/tool/chipsec/modules/tools/secureboot/te.py	/^DEFAULT_CONFIG_FILE_PATH = 'chipsec\/modules\/tools\/secureboot\/te.cfg'$/;"	v
DEFAULT_MMIO_BAR_SIZE	source/tool/chipsec/hal/mmio.py	/^DEFAULT_MMIO_BAR_SIZE = 0x1000$/;"	v
DEFAULT_PE_FILE_PATH	source/tool/chipsec/modules/tools/secureboot/te.py	/^DEFAULT_PE_FILE_PATH     = "chipsec\/modules\/tools\/secureboot\/Shell.efi"$/;"	v
DEPRECATED	source/tool/chipsec/module_common.py	/^    DEPRECATED = 4$/;"	v	class:ModuleResult
DEPRECATED	source/tool/chipsec_main.py	/^    DEPRECATED = 4$/;"	v	class:ExitCode
DESCRIPTOR_TABLE_CODE_GDTR	source/tool/chipsec/hal/msr.py	/^DESCRIPTOR_TABLE_CODE_GDTR = 1$/;"	v
DESCRIPTOR_TABLE_CODE_IDTR	source/tool/chipsec/hal/msr.py	/^DESCRIPTOR_TABLE_CODE_IDTR = 0$/;"	v
DESCRIPTOR_TABLE_CODE_LDTR	source/tool/chipsec/hal/msr.py	/^DESCRIPTOR_TABLE_CODE_LDTR = 2$/;"	v
DESCRIPTOR_TABLE_RECORD	source/drivers/linux/include/chipsec.h	/^} DESCRIPTOR_TABLE_RECORD, *PDESCRIPTOR_TABLE_RECORD;$/;"	t	typeref:struct:_DESCRIPTOR_TABLE_RECORD
DESCRIPTOR_TABLE_RECORD	source/drivers/win7/include/cpu.h	/^} DESCRIPTOR_TABLE_RECORD, *PDESCRIPTOR_TABLE_RECORD;$/;"	t	typeref:struct:_DESCRIPTOR_TABLE_RECORD
DEVICES	source/tool/chipsec/hal/pcidb.py	/^DEVICES = {$/;"	v
DEVICE_FILE	source/tool/chipsec/helper/win/win32helper.py	/^DEVICE_FILE      = "\\\\\\\\.\\\\chipsec_hlpr"$/;"	v
DEVICE_NAME_DOS	source/drivers/win7/include/chipsec.h	6;"	d
DEVICE_NAME_U	source/drivers/win7/include/chipsec.h	5;"	d
DEV_PTY_FILE	tools/edk2/PythonEFI/edk2module.c	2214;"	d	file:
DEV_PTY_FILE	tools/edk2/PythonEFI/edk2module.c	2217;"	d	file:
DIFF	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^def DIFF( s, t, sz ):$/;"	f
DIM	source/tool/chipsec/logger.py	/^DIM       =2$/;"	v
DISPLAY_NAME	source/tool/chipsec/helper/win/win32helper.py	/^DISPLAY_NAME     = "CHIPSEC Service"$/;"	v
DMAR	source/tool/chipsec/hal/acpi_tables.py	/^class DMAR():$/;"	c
DRAM_DEVICE_TYPE	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE = {$/;"	v
DRAM_DEVICE_TYPE_DDR	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_DDR             = 0x7$/;"	v
DRAM_DEVICE_TYPE_DDR2	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_DDR2            = 0x8$/;"	v
DRAM_DEVICE_TYPE_DDR3	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_DDR3            = 0x0B$/;"	v
DRAM_DEVICE_TYPE_DDR4	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_DDR4            = 0x0C$/;"	v
DRAM_DEVICE_TYPE_EDO	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_EDO             = 0x2$/;"	v
DRAM_DEVICE_TYPE_FPM_DRAM	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_FPM_DRAM        = 0x1$/;"	v
DRAM_DEVICE_TYPE_MULTIPLEXED_ROM	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_MULTIPLEXED_ROM = 0x5$/;"	v
DRAM_DEVICE_TYPE_PIPELINED_NIBBLE	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_PIPELINED_NIBBLE= 0x3$/;"	v
DRAM_DEVICE_TYPE_SDR	source/tool/chipsec/hal/spd.py	/^DRAM_DEVICE_TYPE_SDR             = 0x4$/;"	v
DRIVER_FILE_NAME	source/tool/chipsec/helper/win/win32helper.py	/^DRIVER_FILE_NAME = "chipsec_hlpr.sys"$/;"	v
DRIVER_H	source/drivers/win7/driver.h	2;"	d
DTR_CODE	source/drivers/linux/include/chipsec.h	/^} DTR_CODE;$/;"	t	typeref:enum:__anon2
DTR_CODE	source/drivers/win7/include/cpu.h	/^} DTR_CODE;$/;"	t	typeref:enum:__anon5
DUMP_GPRS_EVERY_SMI	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^DUMP_GPRS_EVERY_SMI    = True$/;"	v
DUMP_MEMORY_ON_DETECT	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^DUMP_MEMORY_ON_DETECT  = False$/;"	v
DecodeSection	source/tool/chipsec/hal/uefi_common.py	/^def DecodeSection(SecType, SecBody, SecHeaderSize):$/;"	f
DeviceNotFoundError	source/tool/chipsec/chipset.py	/^class DeviceNotFoundError (RuntimeError):$/;"	c
DisableInterrupts	source/drivers/linux/amd64/cpu.asm	/^DisableInterrupts:$/;"	l
DisableInterrupts	source/drivers/win7/amd64/cpu.asm	/^DisableInterrupts PROC$/;"	l
DisableInterrupts	tools/edk2/PythonEFI/cpu.asm	/^DisableInterrupts PROC$/;"	l
DriverClose	source/drivers/win7/driver.c	/^DriverClose($/;"	f
DriverDeviceControl	source/drivers/win7/driver.c	/^DriverDeviceControl($/;"	f
DriverEntry	source/drivers/win7/driver.c	/^DriverEntry($/;"	f
DriverOpen	source/drivers/win7/driver.c	/^DriverOpen($/;"	f
DriverUnload	source/drivers/win7/driver.c	/^DriverUnload($/;"	f
EFIVARS_get_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def EFIVARS_get_EFI_variable( self, name, guid ):$/;"	m	class:LinuxHelper
EFIVARS_get_efivar_from_sys	source/tool/chipsec/helper/linux/helper.py	/^    def EFIVARS_get_efivar_from_sys( self, filename ):$/;"	m	class:LinuxHelper
EFIVARS_list_EFI_variables	source/tool/chipsec/helper/linux/helper.py	/^    def EFIVARS_list_EFI_variables ( self, infcls=2 ):$/;"	m	class:LinuxHelper
EFIVARS_set_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def EFIVARS_set_EFI_variable(self, name, guid, value, attrs=None):$/;"	m	class:LinuxHelper
EFI_1_02_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_1_02_SYSTEM_TABLE_REVISION = ((1 << 16) | (02))$/;"	v
EFI_1_10_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_1_10_SYSTEM_TABLE_REVISION = ((1 << 16) | (10))$/;"	v
EFI_2_00_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_00_SYSTEM_TABLE_REVISION = ((2 << 16) | (00))$/;"	v
EFI_2_10_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_10_SYSTEM_TABLE_REVISION = ((2 << 16) | (10))$/;"	v
EFI_2_20_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_20_SYSTEM_TABLE_REVISION = ((2 << 16) | (20))$/;"	v
EFI_2_30_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_30_SYSTEM_TABLE_REVISION = ((2 << 16) | (30))$/;"	v
EFI_2_31_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_31_SYSTEM_TABLE_REVISION = ((2 << 16) | (31))$/;"	v
EFI_2_40_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_40_SYSTEM_TABLE_REVISION = ((2 << 16) | (40))$/;"	v
EFI_2_50_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_2_50_SYSTEM_TABLE_REVISION = ((2 << 16) | (50))$/;"	v
EFI_BAD_BUFFER_SIZE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BAD_BUFFER_SIZE    = 4$/;"	v	class:StatusCode
EFI_BOOT_SCRIPT_DISPATCH_2_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_DISPATCH_2_OPCODE             = 0x09$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_DISPATCH_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_DISPATCH_OPCODE               = 0x08$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_INFORMATION_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_INFORMATION_OPCODE            = 0x0A$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_IO_POLL_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_IO_POLL_OPCODE                = 0x0D$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_IO_READ_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_IO_READ_WRITE_OPCODE          = 0x01$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_IO_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_IO_WRITE_OPCODE               = 0x00$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_MEM_POLL_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_MEM_POLL_OPCODE               = 0x0E$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_MEM_READ_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_MEM_READ_WRITE_OPCODE         = 0x03$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_MEM_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_MEM_WRITE_OPCODE              = 0x02$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG2_POLL_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG2_POLL_OPCODE       = 0x10$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG2_READ_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG2_READ_WRITE_OPCODE = 0x0C$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG2_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG2_WRITE_OPCODE      = 0x0B$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG_POLL_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG_POLL_OPCODE        = 0x0F$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG_READ_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG_READ_WRITE_OPCODE  = 0x05$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_PCI_CONFIG_WRITE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_PCI_CONFIG_WRITE_OPCODE       = 0x04$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_SMBUS_EXECUTE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_SMBUS_EXECUTE_OPCODE          = 0x06$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_STALL_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_STALL_OPCODE                  = 0x07$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_TABLE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_TABLE_OPCODE                  = 0xAA$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_TERMINATE_OPCODE	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_TERMINATE_OPCODE              = 0xFF$/;"	v	class:S3BootScriptOpcode
EFI_BOOT_SCRIPT_TYPE_AA	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_BOOT_SCRIPT_TYPE_AA      = 0xAA$/;"	v	class:S3BootScriptType
EFI_BOOT_SCRIPT_TYPE_DEFAULT	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_BOOT_SCRIPT_TYPE_DEFAULT = 0x00$/;"	v	class:S3BootScriptType
EFI_BOOT_SCRIPT_WIDTH_UINT16	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_WIDTH_UINT16 = 0x01$/;"	v	class:S3BootScriptWidth
EFI_BOOT_SCRIPT_WIDTH_UINT32	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_WIDTH_UINT32 = 0x02$/;"	v	class:S3BootScriptWidth
EFI_BOOT_SCRIPT_WIDTH_UINT64	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_WIDTH_UINT64 = 0x03$/;"	v	class:S3BootScriptWidth
EFI_BOOT_SCRIPT_WIDTH_UINT8	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BOOT_SCRIPT_WIDTH_UINT8  = 0x00$/;"	v	class:S3BootScriptWidth
EFI_BOOT_SERVICES_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_BOOT_SERVICES_REVISION  = EFI_2_31_SYSTEM_TABLE_REVISION$/;"	v
EFI_BOOT_SERVICES_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_BOOT_SERVICES_SIGNATURE = 'BOOTSERV'$/;"	v
EFI_BOOT_SERVICES_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_BOOT_SERVICES_TABLE( namedtuple('EFI_BOOT_SERVICES_TABLE', 'RaiseTPL RestoreTPL AllocatePages FreePages GetMemoryMap AllocatePool FreePool CreateEvent SetTimer WaitForEvent SignalEvent CloseEvent CheckEvent InstallProtocolInterface ReinstallProtocolInterface UninstallProtocolInterface HandleProtocol Reserved RegisterProtocolNotify LocateHandle LocateDevicePath InstallConfigurationTable LoadImage StartImage Exit UnloadImage ExitBootServices GetNextMonotonicCount Stall SetWatchdogTimer ConnectController DisconnectController OpenProtocol CloseProtocol OpenProtocolInformation ProtocolsPerHandle LocateHandleBuffer LocateProtocol InstallMultipleProtocolInterfaces UninstallMultipleProtocolInterfaces CalculateCrc32 CopyMem SetMem CreateEventEx') ):$/;"	c
EFI_BUFFER_TOO_SMALL	source/tool/chipsec/hal/uefi_common.py	/^  EFI_BUFFER_TOO_SMALL   = 5$/;"	v	class:StatusCode
EFI_COMMON_SECTION_HEADER	source/tool/chipsec/hal/uefi_common.py	/^EFI_COMMON_SECTION_HEADER = "<3sB"$/;"	v
EFI_COMMON_SECTION_HEADER_size	source/tool/chipsec/hal/uefi_common.py	/^EFI_COMMON_SECTION_HEADER_size = struct.calcsize(EFI_COMMON_SECTION_HEADER)$/;"	v
EFI_COMPRESSION_SECTION	source/tool/chipsec/hal/uefi_common.py	/^EFI_COMPRESSION_SECTION = "<IB"$/;"	v
EFI_COMPRESSION_SECTION_size	source/tool/chipsec/hal/uefi_common.py	/^EFI_COMPRESSION_SECTION_size = struct.calcsize(EFI_COMPRESSION_SECTION)$/;"	v
EFI_CONFIGURATION_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_CONFIGURATION_TABLE():$/;"	c
EFI_CRC32_GUIDED_SECTION_EXTRACTION_PROTOCOL_GUID	source/tool/chipsec/hal/uefi_common.py	/^EFI_CRC32_GUIDED_SECTION_EXTRACTION_PROTOCOL_GUID = "FC1BCDB0-7D31-49AA-936A-A4600D9DD083"$/;"	v
EFI_DEVICE_ERROR	source/tool/chipsec/hal/uefi_common.py	/^  EFI_DEVICE_ERROR       = 7$/;"	v	class:StatusCode
EFI_DXE_SERVICES_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_DXE_SERVICES_TABLE( namedtuple('EFI_DXE_SERVICES_TABLE', 'AddMemorySpace AllocateMemorySpace FreeMemorySpace RemoveMemorySpace GetMemorySpaceDescriptor SetMemorySpaceAttributes GetMemorySpaceMap AddIoSpace AllocateIoSpace FreeIoSpace RemoveIoSpace GetIoSpaceDescriptor GetIoSpaceMap Dispatch Schedule Trust ProcessFirmwareVolume') ):$/;"	c
EFI_DXE_SERVICES_TABLE_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_DXE_SERVICES_TABLE_SIGNATURE  = 'DXE_SERV' # 0x565245535f455844$/;"	v
EFI_FILE_DATA_VALID	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_DATA_VALID           = 0x04$/;"	v
EFI_FILE_DELETED	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_DELETED              = 0x10$/;"	v
EFI_FILE_HEADER_CONSTRUCTION	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_HEADER_CONSTRUCTION  = 0x01$/;"	v
EFI_FILE_HEADER_INVALID	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_HEADER_INVALID       = 0x20$/;"	v
EFI_FILE_HEADER_VALID	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_HEADER_VALID         = 0x02$/;"	v
EFI_FILE_MARKED_FOR_UPDATE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FILE_MARKED_FOR_UPDATE    = 0x08$/;"	v
EFI_FIRMWARE_FILE_SYSTEM2_GUID	source/tool/chipsec/hal/uefi_common.py	/^EFI_FIRMWARE_FILE_SYSTEM2_GUID = "8C8CE578-8A3D-4F1C-9935-896185C32DD3"$/;"	v
EFI_FIRMWARE_FILE_SYSTEM_GUID	source/tool/chipsec/hal/uefi_common.py	/^EFI_FIRMWARE_FILE_SYSTEM_GUID  = "7A9354D9-0468-444A-81CE-0BF617D890DF"$/;"	v
EFI_FRAMEWORK_PEI_SERVICES_TABLE_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FRAMEWORK_PEI_SERVICES_TABLE_SIGNATURE = 0x5652455320494550$/;"	v
EFI_FVB2_ERASE_POLARITY	source/tool/chipsec/hal/uefi_common.py	/^EFI_FVB2_ERASE_POLARITY       = 0x00000800$/;"	v
EFI_FV_FILETYPE_ALL	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_ALL                     = 0x00$/;"	v
EFI_FV_FILETYPE_APPLICATION	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_APPLICATION             = 0x09$/;"	v
EFI_FV_FILETYPE_COMBINED_PEIM_DRIVER	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_COMBINED_PEIM_DRIVER    = 0x08$/;"	v
EFI_FV_FILETYPE_DRIVER	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_DRIVER                  = 0x07$/;"	v
EFI_FV_FILETYPE_DXE_CORE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_DXE_CORE                = 0x05$/;"	v
EFI_FV_FILETYPE_FFS_PAD	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_FFS_PAD                 = 0xf0$/;"	v
EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE   = 0x0b$/;"	v
EFI_FV_FILETYPE_FREEFORM	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_FREEFORM                = 0x02$/;"	v
EFI_FV_FILETYPE_PEIM	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_PEIM                    = 0x06$/;"	v
EFI_FV_FILETYPE_PEI_CORE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_PEI_CORE                = 0x04$/;"	v
EFI_FV_FILETYPE_RAW	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_RAW                     = 0x01$/;"	v
EFI_FV_FILETYPE_SECURITY_CORE	source/tool/chipsec/hal/uefi_common.py	/^EFI_FV_FILETYPE_SECURITY_CORE           = 0x03$/;"	v
EFI_FW_TYPE_EVSA	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_FW_TYPE_EVSA     = 'evsa'    # 'EVSA' NVRAM format$/;"	v	class:FWType
EFI_FW_TYPE_NVAR	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_FW_TYPE_NVAR     = 'nvar'    # 'NVAR' NVRAM format$/;"	v	class:FWType
EFI_FW_TYPE_UEFI	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_FW_TYPE_UEFI     = 'uefi'$/;"	v	class:FWType
EFI_FW_TYPE_VSS	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_FW_TYPE_VSS      = 'vss'     # NVRAM using format with '$VSS' signature$/;"	v	class:FWType
EFI_FW_TYPE_VSS_NEW	source/tool/chipsec/hal/uefi_platform.py	/^    EFI_FW_TYPE_VSS_NEW  = 'vss_new' # NVRAM using format with '$VSS' signature (Newer one?)$/;"	v	class:FWType
EFI_GLOBAL_VARIABLE_GUID	source/tool/chipsec/hal/uefi.py	/^EFI_GLOBAL_VARIABLE_GUID         = '8BE4DF61-93CA-11D2-AA0D-00E098032B8C'$/;"	v
EFI_GUID	source/tool/chipsec/hal/uefi_common.py	/^def EFI_GUID( guid0, guid1, guid2, guid3 ):$/;"	f
EFI_GUID_DEFINED_SECTION	source/tool/chipsec/hal/uefi_common.py	/^EFI_GUID_DEFINED_SECTION = "<IHH8sHH"$/;"	v
EFI_GUID_DEFINED_SECTION_size	source/tool/chipsec/hal/uefi_common.py	/^EFI_GUID_DEFINED_SECTION_size = struct.calcsize(EFI_GUID_DEFINED_SECTION)$/;"	v
EFI_GUID_FMT	source/tool/chipsec/hal/uefi_common.py	/^EFI_GUID_FMT = "IHH8s"$/;"	v
EFI_HDR_NVAR1	source/tool/chipsec/hal/uefi_platform.py	/^class EFI_HDR_NVAR1( namedtuple('EFI_HDR_NVAR1', 'StartId TotalSize Reserved1 Reserved2 Reserved3 Attributes State') ):$/;"	c
EFI_HDR_VSS	source/tool/chipsec/hal/uefi_platform.py	/^class EFI_HDR_VSS( namedtuple('EFI_HDR_VSS', 'StartId State Reserved Attributes NameSize DataSize guid0 guid1 guid2 guid3') ):$/;"	c
EFI_HDR_VSS_NEW	source/tool/chipsec/hal/uefi_platform.py	/^class EFI_HDR_VSS_NEW( namedtuple('EFI_HDR_VSS_NEW', 'StartId State Reserved Attributes wtf1 wtf2 wtf3 wtf4 NameSize DataSize guid0 guid1 guid2 guid3') ):$/;"	c
EFI_HDR_WIN	source/tool/chipsec/helper/win/win32helper.py	/^class EFI_HDR_WIN( namedtuple('EFI_HDR_WIN', 'Size DataOffset DataSize Attributes guid0 guid1 guid2 guid3') ):$/;"	c
EFI_IMAGE_DIRECTORY_ENTRY_BASERELOC	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_BASERELOC   = 5$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_COPYRIGHT	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_COPYRIGHT   = 7$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_DEBUG	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_DEBUG       = 6$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_EXCEPTION	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_EXCEPTION   = 3$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_EXPORT	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_EXPORT      = 0$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_GLOBALPTR	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_GLOBALPTR   = 8$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_IMPORT	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_IMPORT      = 1$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG =10$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_RESOURCE	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_RESOURCE    = 2$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_SECURITY	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_SECURITY    = 4$/;"	v
EFI_IMAGE_DIRECTORY_ENTRY_TLS	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_IMAGE_DIRECTORY_ENTRY_TLS         = 9$/;"	v
EFI_IMAGE_SECURITY_DATABASE_GUID	source/tool/chipsec/hal/uefi.py	/^EFI_IMAGE_SECURITY_DATABASE_GUID = 'D719B2CB-3D3A-4596-A3BC-DAD00E67656F'$/;"	v
EFI_INVALID_PARAMETER	source/tool/chipsec/hal/uefi_common.py	/^  EFI_INVALID_PARAMETER  = 2$/;"	v	class:StatusCode
EFI_LOAD_ERROR	source/tool/chipsec/hal/uefi_common.py	/^  EFI_LOAD_ERROR         = 1$/;"	v	class:StatusCode
EFI_NOT_FOUND	source/tool/chipsec/hal/uefi_common.py	/^  EFI_NOT_FOUND          = 14$/;"	v	class:StatusCode
EFI_NOT_READY	source/tool/chipsec/hal/uefi_common.py	/^  EFI_NOT_READY          = 6$/;"	v	class:StatusCode
EFI_OUT_OF_RESOURCES	source/tool/chipsec/hal/uefi_common.py	/^  EFI_OUT_OF_RESOURCES   = 9$/;"	v	class:StatusCode
EFI_REVISIONS	source/tool/chipsec/hal/uefi_common.py	/^EFI_REVISIONS = [EFI_2_50_SYSTEM_TABLE_REVISION, EFI_2_40_SYSTEM_TABLE_REVISION, EFI_2_31_SYSTEM_TABLE_REVISION, EFI_2_30_SYSTEM_TABLE_REVISION, EFI_2_20_SYSTEM_TABLE_REVISION, EFI_2_10_SYSTEM_TABLE_REVISION, EFI_2_00_SYSTEM_TABLE_REVISION, EFI_1_10_SYSTEM_TABLE_REVISION, EFI_1_02_SYSTEM_TABLE_REVISION ]$/;"	v
EFI_RUNTIME_SERVICES_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_RUNTIME_SERVICES_REVISION   = EFI_2_31_SYSTEM_TABLE_REVISION$/;"	v
EFI_RUNTIME_SERVICES_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_RUNTIME_SERVICES_SIGNATURE  = 'RUNTSERV'$/;"	v
EFI_RUNTIME_SERVICES_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_RUNTIME_SERVICES_TABLE( namedtuple('EFI_RUNTIME_SERVICES_TABLE', 'GetTime SetTime GetWakeupTime SetWakeupTime SetVirtualAddressMap ConvertPointer GetVariable GetNextVariableName SetVariable GetNextHighMonotonicCount ResetSystem UpdateCapsule QueryCapsuleCapabilities QueryVariableInfo') ):$/;"	c
EFI_SECTION_ALL	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_ALL                   = 0x00$/;"	v
EFI_SECTION_COMPATIBILITY16	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_COMPATIBILITY16       = 0x16$/;"	v
EFI_SECTION_COMPRESSION	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_COMPRESSION           = 0x01$/;"	v
EFI_SECTION_DXE_DEPEX	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_DXE_DEPEX             = 0x13$/;"	v
EFI_SECTION_FIRMWARE_VOLUME_IMAGE	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_FIRMWARE_VOLUME_IMAGE = 0x17$/;"	v
EFI_SECTION_FREEFORM_SUBTYPE_GUID	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_FREEFORM_SUBTYPE_GUID = 0x18$/;"	v
EFI_SECTION_GUID_DEFINED	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_GUID_DEFINED          = 0x02$/;"	v
EFI_SECTION_PE32	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_PE32                  = 0x10$/;"	v
EFI_SECTION_PEI_DEPEX	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_PEI_DEPEX             = 0x1B$/;"	v
EFI_SECTION_PIC	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_PIC                   = 0x11$/;"	v
EFI_SECTION_RAW	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_RAW                   = 0x19$/;"	v
EFI_SECTION_SMM_DEPEX	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_SMM_DEPEX             = 0x1C$/;"	v
EFI_SECTION_TE	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_TE                    = 0x12$/;"	v
EFI_SECTION_USER_INTERFACE	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_USER_INTERFACE        = 0x15$/;"	v
EFI_SECTION_VERSION	source/tool/chipsec/hal/uefi_common.py	/^EFI_SECTION_VERSION               = 0x14$/;"	v
EFI_SECURITY_VIOLATION	source/tool/chipsec/hal/uefi_common.py	/^  EFI_SECURITY_VIOLATION = 26$/;"	v	class:StatusCode
EFI_SMM_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^EFI_SMM_SYSTEM_TABLE_REVISION = (0 << 16) | (0x09)$/;"	v
EFI_SMM_SYSTEM_TABLE_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_SMM_SYSTEM_TABLE_SIGNATURE = 'SMST'$/;"	v
EFI_STATUS_DICT	source/tool/chipsec/hal/uefi_common.py	/^EFI_STATUS_DICT = { $/;"	v
EFI_SUCCESS	source/tool/chipsec/hal/uefi_common.py	/^  EFI_SUCCESS            = 0$/;"	v	class:StatusCode
EFI_SYSTEM_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_SYSTEM_TABLE( namedtuple('EFI_SYSTEM_TABLE', 'FirmwareVendor FirmwareRevision ConsoleInHandle ConIn ConsoleOutHandle ConOut StandardErrorHandle StdErr RuntimeServices BootServices NumberOfTableEntries ConfigurationTable') ):$/;"	c
EFI_SYSTEM_TABLE_REVISION	source/tool/chipsec/hal/uefi_common.py	/^def EFI_SYSTEM_TABLE_REVISION(revision):$/;"	f
EFI_SYSTEM_TABLE_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^EFI_SYSTEM_TABLE_SIGNATURE     = 'IBI SYST'$/;"	v
EFI_TABLES	source/tool/chipsec/hal/uefi_common.py	/^EFI_TABLES = {$/;"	v
EFI_TABLE_HEADER	source/tool/chipsec/hal/uefi_common.py	/^class EFI_TABLE_HEADER( namedtuple('EFI_TABLE_HEADER', 'Signature Revision HeaderSize CRC32 Reserved') ):$/;"	c
EFI_TABLE_HEADER_SIZE	source/tool/chipsec/hal/uefi_common.py	/^EFI_TABLE_HEADER_SIZE = 0x18$/;"	v
EFI_TE_IMAGE_DIRECTORY_ENTRY_BASERELOC	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_TE_IMAGE_DIRECTORY_ENTRY_BASERELOC = 0$/;"	v
EFI_TE_IMAGE_DIRECTORY_ENTRY_DEBUG	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_TE_IMAGE_DIRECTORY_ENTRY_DEBUG     = 1$/;"	v
EFI_TE_IMAGE_HEADER	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_TE_IMAGE_HEADER = "<HHBBHIIQ"$/;"	v
EFI_TE_IMAGE_HEADER_SIGNATURE	source/tool/chipsec/modules/tools/secureboot/te.py	/^EFI_TE_IMAGE_HEADER_SIGNATURE = 0x5A56$/;"	v
EFI_UNSUPPORTED	source/tool/chipsec/hal/uefi_common.py	/^  EFI_UNSUPPORTED        = 3$/;"	v	class:StatusCode
EFI_VARIABLE_APPEND_WRITE	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_APPEND_WRITE                          = 0x00000040 # Variable allows append$/;"	v
EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS            = 0x00000010 # Variable is authenticated$/;"	v
EFI_VARIABLE_BOOTSERVICE_ACCESS	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_BOOTSERVICE_ACCESS                    = 0x00000002 # Variable is boot time accessible$/;"	v
EFI_VARIABLE_DICT	source/tool/chipsec/hal/uefi.py	/^EFI_VARIABLE_DICT = {$/;"	v
EFI_VARIABLE_HARDWARE_ERROR_RECORD	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_HARDWARE_ERROR_RECORD                 = 0x00000008 #$/;"	v
EFI_VARIABLE_HEADER	source/tool/chipsec/hal/uefi_platform.py	/^EFI_VARIABLE_HEADER = "<HBBI28sIIIHH8s"$/;"	v
EFI_VARIABLE_HEADER_SIZE	source/tool/chipsec/hal/uefi_platform.py	/^EFI_VARIABLE_HEADER_SIZE = struct.calcsize(EFI_VARIABLE_HEADER)$/;"	v
EFI_VARIABLE_NON_VOLATILE	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_NON_VOLATILE                          = 0x00000001 # Variable is non volatile$/;"	v
EFI_VARIABLE_RUNTIME_ACCESS	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_RUNTIME_ACCESS                        = 0x00000004 # Variable is run-time accessible$/;"	v
EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS	source/tool/chipsec/hal/uefi_common.py	/^EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS = 0x00000020 # Variable is time based authenticated$/;"	v
EFI_VAR_DICT	source/tool/chipsec/hal/uefi_platform.py	/^EFI_VAR_DICT = {$/;"	v
EFI_VAR_MAX_BUFFER_SIZE	source/tool/chipsec/helper/win/win32helper.py	/^EFI_VAR_MAX_BUFFER_SIZE = 1024*1024$/;"	v
EFI_VAR_NAME_CustomMode	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_CustomMode       = 'CustomMode'$/;"	v
EFI_VAR_NAME_KEK	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_KEK              = 'KEK'$/;"	v
EFI_VAR_NAME_PK	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_PK               = 'PK'$/;"	v
EFI_VAR_NAME_SecureBoot	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_SecureBoot       = 'SecureBoot'$/;"	v
EFI_VAR_NAME_SetupMode	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_SetupMode        = 'SetupMode'$/;"	v
EFI_VAR_NAME_SignatureSupport	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_SignatureSupport = 'SignatureSupport'$/;"	v
EFI_VAR_NAME_db	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_db               = 'db'$/;"	v
EFI_VAR_NAME_dbx	source/tool/chipsec/hal/uefi.py	/^EFI_VAR_NAME_dbx              = 'dbx'$/;"	v
EFI_VENDOR_TABLE	source/tool/chipsec/hal/uefi_common.py	/^class EFI_VENDOR_TABLE( namedtuple('EFI_VENDOR_TABLE', 'VendorGuid0 VendorGuid1 VendorGuid2 VendorGuid3 VendorTable') ):$/;"	c
EFI_VENDOR_TABLE_FORMAT	source/tool/chipsec/hal/uefi_common.py	/^EFI_VENDOR_TABLE_FORMAT = '<' + EFI_GUID_FMT + 'Q'$/;"	v
EFI_VENDOR_TABLE_SIZE	source/tool/chipsec/hal/uefi_common.py	/^EFI_VENDOR_TABLE_SIZE   = struct.calcsize(EFI_VENDOR_TABLE_FORMAT)$/;"	v
EFI_WRITE_PROTECTED	source/tool/chipsec/hal/uefi_common.py	/^  EFI_WRITE_PROTECTED    = 8$/;"	v	class:StatusCode
EFI_supported	source/tool/chipsec/helper/efi/efihelper.py	/^    def EFI_supported( self ):$/;"	m	class:EfiHelper
EFI_supported	source/tool/chipsec/helper/linux/helper.py	/^    def EFI_supported( self):$/;"	m	class:LinuxHelper
EFI_supported	source/tool/chipsec/helper/oshelper.py	/^    def EFI_supported(self):$/;"	m	class:OsHelper
EFI_supported	source/tool/chipsec/helper/win/win32helper.py	/^    def EFI_supported( self):$/;"	m	class:Win32Helper
EFIvar_EVSA	source/tool/chipsec/hal/uefi_platform.py	/^def EFIvar_EVSA(nvram_buf):$/;"	f
ERROR	source/tool/chipsec/module_common.py	/^    ERROR   = -1$/;"	v	class:ModuleResult
ERROR	source/tool/chipsec/xmlout.py	/^    ERROR   = 2$/;"	v	class:testCaseType
ERROR	source/tool/chipsec_main.py	/^    ERROR      = 16$/;"	v	class:ExitCode
EXCEPTION	source/tool/chipsec_main.py	/^    EXCEPTION  = 32$/;"	v	class:ExitCode
EXTRA_CFLAGS	source/drivers/linux/Makefile	/^EXTRA_CFLAGS = $/;"	m
E_MAGIC	source/tool/chipsec/modules/tools/secureboot/te.py	/^E_MAGIC = 0x5A4D$/;"	v
E_MAGIC_STR	source/tool/chipsec/modules/tools/secureboot/te.py	/^E_MAGIC_STR = "MZ"$/;"	v
EfiGuidType	tools/edk2/PythonEFI/edk2module.c	/^  PyTypeObject EfiGuidType;$/;"	v
EfiHelper	source/tool/chipsec/helper/efi/efihelper.py	/^class EfiHelper:$/;"	c
EfiHelperError	source/tool/chipsec/helper/efi/efihelper.py	/^class EfiHelperError (RuntimeError):$/;"	c
ExitCode	source/tool/chipsec_main.py	/^class ExitCode:$/;"	c
FAIL	source/tool/chipsec_main.py	/^    FAIL       = 8$/;"	v	class:ExitCode
FAILED	source/tool/chipsec/module_common.py	/^    FAILED  = 0$/;"	v	class:ModuleResult
FAILURE	source/tool/chipsec/xmlout.py	/^    FAILURE = 1$/;"	v	class:testCaseType
FFS_ATTRIB_CHECKSUM	source/tool/chipsec/hal/uefi_common.py	/^FFS_ATTRIB_CHECKSUM           = 0x40$/;"	v
FFS_ATTRIB_DATA_ALIGNMENT	source/tool/chipsec/hal/uefi_common.py	/^FFS_ATTRIB_DATA_ALIGNMENT     = 0x38$/;"	v
FFS_ATTRIB_FIXED	source/tool/chipsec/hal/uefi_common.py	/^FFS_ATTRIB_FIXED              = 0x04$/;"	v
FFS_FIXED_CHECKSUM	source/tool/chipsec/hal/uefi_common.py	/^FFS_FIXED_CHECKSUM            = 0xAA$/;"	v
FILE_ANY_ACCESS	source/tool/chipsec/helper/win/win32helper.py	/^FILE_ANY_ACCESS     = 0$/;"	v
FILE_DEVICE_UNKNOWN	source/tool/chipsec/helper/win/win32helper.py	/^FILE_DEVICE_UNKNOWN = 0x00000022$/;"	v
FILE_READ_ACCESS	source/tool/chipsec/helper/win/win32helper.py	/^FILE_READ_ACCESS    = ( 0x0001 )$/;"	v
FILE_SPECIAL_ACCESS	source/tool/chipsec/helper/win/win32helper.py	/^FILE_SPECIAL_ACCESS = (FILE_ANY_ACCESS)$/;"	v
FILE_TYPE_NAMES	source/tool/chipsec/hal/uefi_common.py	/^FILE_TYPE_NAMES = {0x00: 'FV_ALL', 0x01: 'FV_RAW', 0x02: 'FV_FREEFORM', 0x03: 'FV_SECURITY_CORE', 0x04: 'FV_PEI_CORE', 0x05: 'FV_DXE_CORE', 0x06: 'FV_PEIM', 0x07: 'FV_DRIVER', 0x08: 'FV_COMBINED_PEIM_DRIVER', 0x09: 'FV_APPLICATION', 0x0B: 'FV_FVIMAGE', 0x0F: 'FV_FFS_PAD'}$/;"	v
FILE_WRITE_ACCESS	source/tool/chipsec/helper/win/win32helper.py	/^FILE_WRITE_ACCESS   = ( 0x0002 )$/;"	v
FILL_BUFFER	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^def FILL_BUFFER( _fill_byte, _fill_size, _ptr_in_buffer, _ptr, _ptr_offset, _sig, _sig_offset ):$/;"	f
FLASH_DESCRIPTOR	source/tool/chipsec/hal/spi.py	/^FLASH_DESCRIPTOR  = 0$/;"	v
FLUSH_OUTPUT_AFTER_SMI	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^FLUSH_OUTPUT_AFTER_SMI = True$/;"	v
FLUSH_OUTPUT_ALWAYS	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^FLUSH_OUTPUT_ALWAYS    = False$/;"	v
FRAMEWORK_PEI_SERVICES_REVISION	source/tool/chipsec/hal/uefi_common.py	/^FRAMEWORK_PEI_SERVICES_REVISION            = ((FRAMEWORK_PEI_SPECIFICATION_MAJOR_REVISION<<16) | (FRAMEWORK_PEI_SPECIFICATION_MINOR_REVISION))$/;"	v
FRAMEWORK_PEI_SPECIFICATION_MAJOR_REVISION	source/tool/chipsec/hal/uefi_common.py	/^FRAMEWORK_PEI_SPECIFICATION_MAJOR_REVISION = 0$/;"	v
FRAMEWORK_PEI_SPECIFICATION_MINOR_REVISION	source/tool/chipsec/hal/uefi_common.py	/^FRAMEWORK_PEI_SPECIFICATION_MINOR_REVISION = 91$/;"	v
FREG5	source/tool/chipsec/hal/spi.py	/^FREG5             = 5$/;"	v
FREG6	source/tool/chipsec/hal/spi.py	/^FREG6             = 6$/;"	v
FSTAT	tools/edk2/PythonEFI/edk2module.c	190;"	d	file:
FSTAT	tools/edk2/PythonEFI/edk2module.c	193;"	d	file:
FUZZ_BAIL_ON_1ST_DETECT	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^FUZZ_BAIL_ON_1ST_DETECT   = True$/;"	v
FWType	source/tool/chipsec/hal/uefi_platform.py	/^class FWType:$/;"	c
F_OK	tools/edk2/PythonEFI/edk2module.c	659;"	d	file:
FirmwareTableID_RSDT	source/tool/chipsec/helper/win/win32helper.py	/^FirmwareTableID_RSDT = 0x54445352$/;"	v
FirmwareTableID_XSDT	source/tool/chipsec/helper/win/win32helper.py	/^FirmwareTableID_XSDT = 0x54445358$/;"	v
FirmwareTableProviderSignature_ACPI	source/tool/chipsec/helper/win/win32helper.py	/^FirmwareTableProviderSignature_ACPI = 0x41435049 # 'ACPI' - The ACPI firmware table provider$/;"	v
FirmwareTableProviderSignature_FIRM	source/tool/chipsec/helper/win/win32helper.py	/^FirmwareTableProviderSignature_FIRM = 0x4649524D # 'FIRM' - The raw firmware table provider$/;"	v
FirmwareTableProviderSignature_RSMB	source/tool/chipsec/helper/win/win32helper.py	/^FirmwareTableProviderSignature_RSMB = 0x52534D42 # 'RSMB' - The raw SMBIOS firmware table provider$/;"	v
FvChecksum16	source/tool/chipsec/hal/uefi_common.py	/^def FvChecksum16(buffer):$/;"	f
FvChecksum8	source/tool/chipsec/hal/uefi_common.py	/^def FvChecksum8(buffer):$/;"	f
FvSum16	source/tool/chipsec/hal/uefi_common.py	/^def FvSum16(buffer):$/;"	f
FvSum8	source/tool/chipsec/hal/uefi_common.py	/^def FvSum8(buffer):$/;"	f
GBE	source/tool/chipsec/hal/spi.py	/^GBE               = 3$/;"	v
GDT	source/tool/chipsec/hal/msr.py	/^    def GDT( self, cpu_thread_id, num_entries=None ):$/;"	m	class:Msr
GDT_all	source/tool/chipsec/hal/msr.py	/^    def GDT_all( self, num_entries=None ):$/;"	m	class:Msr
GENERIC_READ	source/tool/chipsec/helper/win/win32helper.py	/^GENERIC_READ    = 0x80000000$/;"	v
GENERIC_WRITE	source/tool/chipsec/helper/win/win32helper.py	/^GENERIC_WRITE   = 0x40000000$/;"	v
GEN_PMCON	source/tool/chipsec/cfg/common.py	/^    GEN_PMCON = 0xA0$/;"	v	class:Cfg
GET_CPU_DESCRIPTOR_TABLE	source/drivers/win7/include/chipsec.h	43;"	d
GPR_2ADDR	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^GPR_2ADDR = False$/;"	v
GREEN	source/tool/chipsec/logger.py	/^GREEN     =2$/;"	v
GUID	source/tool/chipsec/hal/uefi_common.py	/^GUID = "<IHH8s"$/;"	v
HAL	source/tool/chipsec/logger.py	/^    HAL        = False$/;"	v	class:Logger
HALBase	source/tool/chipsec/hal/hal_base.py	/^class HALBase( object ):$/;"	c
HAVE_DEV_PTMX	tools/edk2/PythonEFI/edk2module.c	2215;"	d	file:
HAVE_UTIME_H	tools/edk2/PythonEFI/edk2module.c	118;"	d	file:
HDR_FMT_VSS	source/tool/chipsec/hal/uefi_platform.py	/^HDR_FMT_VSS                   = '<HBBIIIIHH8s'$/;"	v
HDR_FMT_VSS_NEW	source/tool/chipsec/hal/uefi_platform.py	/^HDR_FMT_VSS_NEW  = '<HBBIQQQIIIIHH8s'$/;"	v
HEX_STRING	source/tool/chipsec/hal/acpi_tables.py	/^    def HEX_STRING(self, _str):$/;"	f
HIDDEN	source/tool/chipsec/logger.py	/^HIDDEN    =8$/;"	v
HSFCTL_ERASE_CYCLE	source/tool/chipsec/hal/spi.py	/^HSFCTL_ERASE_CYCLE = ( (Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_ERASE<<1) | Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_FGO)$/;"	v
HSFCTL_READ_CYCLE	source/tool/chipsec/hal/spi.py	/^HSFCTL_READ_CYCLE = ( (Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_READ<<1) | Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_FGO)$/;"	v
HSFCTL_WRITE_CYCLE	source/tool/chipsec/hal/spi.py	/^HSFCTL_WRITE_CYCLE = ( (Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_WRITE<<1) | Cfg.PCH_RCBA_SPI_HSFCTL_FCYCLE_FGO)$/;"	v
HSFSTS_CLEAR	source/tool/chipsec/hal/spi.py	/^HSFSTS_CLEAR = (Cfg.PCH_RCBA_SPI_HSFSTS_AEL | Cfg.PCH_RCBA_SPI_HSFSTS_FCERR | Cfg.PCH_RCBA_SPI_HSFSTS_FDONE)$/;"	v
HWAccessViolationError	source/tool/chipsec/helper/oshelper.py	/^class HWAccessViolationError (OsHelperError):$/;"	c
IA32_FEATURE_CONTROL_MSR	source/tool/chipsec/cfg/common.py	/^    IA32_FEATURE_CONTROL_MSR    = 0x3A$/;"	v	class:Cfg
IA32_FEATURE_CTRL_LOCK_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_FEATURE_CTRL_LOCK_MASK = 0x1$/;"	v	class:Cfg
IA32_MSR_BIOS_SIGN_ID	source/tool/chipsec/hal/ucode.py	/^IA32_MSR_BIOS_SIGN_ID        = 0x8B$/;"	v
IA32_MSR_BIOS_SIGN_ID_STATUS	source/tool/chipsec/hal/ucode.py	/^IA32_MSR_BIOS_SIGN_ID_STATUS = 0x1$/;"	v
IA32_MSR_BIOS_UPDT_TRIG	source/tool/chipsec/hal/ucode.py	/^IA32_MSR_BIOS_UPDT_TRIG      = 0x79$/;"	v
IA32_MSR_CORE_THREAD_COUNT	source/tool/chipsec/cfg/common.py	/^    IA32_MSR_CORE_THREAD_COUNT                   = 0x35$/;"	v	class:Cfg
IA32_MSR_CORE_THREAD_COUNT_CORECOUNT_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_MSR_CORE_THREAD_COUNT_CORECOUNT_MASK    = 0xFFFF0000$/;"	v	class:Cfg
IA32_MSR_CORE_THREAD_COUNT_THREADCOUNT_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_MSR_CORE_THREAD_COUNT_THREADCOUNT_MASK  = 0xFFFF$/;"	v	class:Cfg
IA32_MTRRCAP_MSR	source/tool/chipsec/cfg/common.py	/^    IA32_MTRRCAP_MSR            = 0xFE$/;"	v	class:Cfg
IA32_MTRRCAP_SMRR_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_MTRRCAP_SMRR_MASK      = 0x800$/;"	v	class:Cfg
IA32_SMRR_BASE_BASE_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_BASE_BASE_MASK    = 0xFFFFF000$/;"	v	class:Cfg
IA32_SMRR_BASE_MEMTYPE_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_BASE_MEMTYPE_MASK = 0x7$/;"	v	class:Cfg
IA32_SMRR_BASE_MSR	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_BASE_MSR          = 0x1F2$/;"	v	class:Cfg
IA32_SMRR_MASK_MASK_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_MASK_MASK_MASK    = 0xFFFFF000$/;"	v	class:Cfg
IA32_SMRR_MASK_MSR	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_MASK_MSR          = 0x1F3$/;"	v	class:Cfg
IA32_SMRR_MASK_VLD_MASK	source/tool/chipsec/cfg/common.py	/^    IA32_SMRR_MASK_VLD_MASK     = 0x800$/;"	v	class:Cfg
IDT	source/tool/chipsec/hal/msr.py	/^    def IDT( self, cpu_thread_id, num_entries=None ):$/;"	m	class:Msr
IDT_all	source/tool/chipsec/hal/msr.py	/^    def IDT_all( self, num_entries=None ):$/;"	m	class:Msr
IMAGE_DATA_DIRECTORY	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_DATA_DIRECTORY = "<II"$/;"	v
IMAGE_DATA_DIRECTORY_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_DATA_DIRECTORY_size = struct.calcsize(IMAGE_DATA_DIRECTORY)$/;"	v
IMAGE_DOS_HEADER	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_DOS_HEADER = "<14H4HHH10Hi"$/;"	v
IMAGE_DOS_HEADER_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_DOS_HEADER_size = struct.calcsize(IMAGE_DOS_HEADER)$/;"	v
IMAGE_FILE_HEADER	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_FILE_HEADER = "<2H3I2H"$/;"	v
IMAGE_FILE_HEADER_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_FILE_HEADER_size = struct.calcsize(IMAGE_FILE_HEADER)$/;"	v
IMAGE_NT_HEADERS_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_NT_HEADERS_size = (4 + IMAGE_FILE_HEADER_size + IMAGE_OPTIONAL_HEADER_size + IMAGE_NUMBEROF_DIRECTORY_ENTRIES * IMAGE_DATA_DIRECTORY_size)$/;"	v
IMAGE_NT_OPTIONAL_HDR32_MAGIC	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b$/;"	v
IMAGE_NT_OPTIONAL_HDR64_MAGIC	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b$/;"	v
IMAGE_NT_SIGNATURE	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_NT_SIGNATURE = 0x00004550$/;"	v
IMAGE_NUMBEROF_DIRECTORY_ENTRIES	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16$/;"	v
IMAGE_OPTIONAL_HEADER	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_OPTIONAL_HEADER = "<HBB9I6H4I2H6I"$/;"	v
IMAGE_OPTIONAL_HEADER64	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_OPTIONAL_HEADER64 = "<HBBIIIIIQIIHHHHHHIIIIHHQQQQII"$/;"	v
IMAGE_OPTIONAL_HEADER64_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_OPTIONAL_HEADER64_size = struct.calcsize(IMAGE_OPTIONAL_HEADER64)$/;"	v
IMAGE_OPTIONAL_HEADER_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_OPTIONAL_HEADER_size = struct.calcsize(IMAGE_OPTIONAL_HEADER)$/;"	v
IMAGE_SECTION_HEADER	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_SECTION_HEADER = "<8s6I2HI"$/;"	v
IMAGE_SECTION_HEADER_size	source/tool/chipsec/modules/tools/secureboot/te.py	/^IMAGE_SECTION_HEADER_size = struct.calcsize(IMAGE_SECTION_HEADER)$/;"	v
INC	source/tool/chipsec/helper/linux/Makefile	/^INC ?= -I\/usr\/include\/python2.7$/;"	m
INITFUNC	tools/edk2/PythonEFI/edk2module.c	/^INITFUNC(void)$/;"	f
INITFUNC	tools/edk2/PythonEFI/edk2module.c	7832;"	d	file:
IOBAR	source/tool/chipsec/chipset.py	/^    IOBAR  = 'iobar'$/;"	v	class:RegisterType
IOBARNotFoundError	source/tool/chipsec/hal/iobar.py	/^class IOBARNotFoundError (RuntimeError):$/;"	c
IOBARRuntimeError	source/tool/chipsec/hal/iobar.py	/^class IOBARRuntimeError (RuntimeError):$/;"	c
IOCTL_ALLOC_PHYSMEM	source/drivers/linux/include/chipsec.h	18;"	d
IOCTL_ALLOC_PHYSMEM	source/drivers/win7/include/chipsec.h	27;"	d
IOCTL_ALLOC_PHYSMEM	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_ALLOC_PHYSMEM(): return _IOCTL_BASE + 0xC$/;"	f
IOCTL_ALLOC_PHYSMEM	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_ALLOC_PHYSMEM            = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x812, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_BASE	source/drivers/linux/include/chipsec.h	7;"	d
IOCTL_BASE	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_BASE():       return 0x0$/;"	f
IOCTL_CPUID	source/drivers/linux/include/chipsec.h	14;"	d
IOCTL_CPUID	source/drivers/win7/include/chipsec.h	47;"	d
IOCTL_CPUID	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_CPUID():      return _IOCTL_BASE + 0x7$/;"	f
IOCTL_CPUID	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_CPUID                    = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x813, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_FREE_PHYSMEM	source/drivers/win7/include/chipsec.h	29;"	d
IOCTL_GET_CPU_DESCRIPTOR_TABLE	source/drivers/linux/include/chipsec.h	15;"	d
IOCTL_GET_CPU_DESCRIPTOR_TABLE	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_GET_CPU_DESCRIPTOR_TABLE():   return _IOCTL_BASE + 0x8$/;"	f
IOCTL_GET_CPU_DESCRIPTOR_TABLE	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_GET_CPU_DESCRIPTOR_TABLE = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x810, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_GET_EFIVAR	source/drivers/linux/include/chipsec.h	19;"	d
IOCTL_GET_EFIVAR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_GET_EFIVAR(): return _IOCTL_BASE + 0xD$/;"	f
IOCTL_GET_PHYSADDR	source/drivers/win7/include/chipsec.h	31;"	d
IOCTL_GET_PHYSADDR	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_GET_PHYSADDR             = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x815, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_HYPERCALL	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_HYPERCALL():  return _IOCTL_BASE + 0x9$/;"	f
IOCTL_LOAD_UCODE_PATCH	source/drivers/linux/include/chipsec.h	17;"	d
IOCTL_LOAD_UCODE_PATCH	source/drivers/win7/include/chipsec.h	33;"	d
IOCTL_LOAD_UCODE_PATCH	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_LOAD_UCODE_PATCH():   return _IOCTL_BASE + 0xB$/;"	f
IOCTL_LOAD_UCODE_PATCH	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_LOAD_UCODE_PATCH         = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80b, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_RDCR	source/drivers/linux/include/chipsec.h	21;"	d
IOCTL_RDCR	source/drivers/win7/include/chipsec.h	51;"	d
IOCTL_RDCR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_RDCR():	return _IOCTL_BASE + 0x10$/;"	f
IOCTL_RDCR	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_RDCR                     = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x819, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_RDIO	source/drivers/linux/include/chipsec.h	8;"	d
IOCTL_RDIO	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_RDIO():       return _IOCTL_BASE + 0x1$/;"	f
IOCTL_RDMMIO	source/drivers/linux/include/chipsec.h	23;"	d
IOCTL_RDMMIO	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_RDMMIO():       return _IOCTL_BASE + 0x12$/;"	f
IOCTL_RDMSR	source/drivers/linux/include/chipsec.h	12;"	d
IOCTL_RDMSR	source/drivers/win7/include/chipsec.h	37;"	d
IOCTL_RDMSR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_RDMSR():      return _IOCTL_BASE + 0x5$/;"	f
IOCTL_RDMSR	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_RDMSR                    = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80d, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_RDPCI	source/drivers/linux/include/chipsec.h	10;"	d
IOCTL_RDPCI	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_RDPCI():      return _IOCTL_BASE + 0x3$/;"	f
IOCTL_READ_IO_PORT	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_READ_IO_PORT             = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80e, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_READ_PHYSMEM	source/drivers/win7/include/chipsec.h	23;"	d
IOCTL_READ_PHYSMEM	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_READ_PHYSMEM             = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x809, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_SET_EFIVAR	source/drivers/linux/include/chipsec.h	20;"	d
IOCTL_SET_EFIVAR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_SET_EFIVAR(): return _IOCTL_BASE + 0xE$/;"	f
IOCTL_SWSMI	source/drivers/linux/include/chipsec.h	16;"	d
IOCTL_SWSMI	source/drivers/win7/include/chipsec.h	45;"	d
IOCTL_SWSMI	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_SWSMI():      return _IOCTL_BASE + 0xA$/;"	f
IOCTL_SWSMI	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_SWSMI                    = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x811, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_VA2PA	source/drivers/linux/include/chipsec.h	25;"	d
IOCTL_VA2PA	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_VA2PA():      return _IOCTL_BASE + 0x14$/;"	f
IOCTL_WRCR	source/drivers/linux/include/chipsec.h	22;"	d
IOCTL_WRCR	source/drivers/win7/include/chipsec.h	49;"	d
IOCTL_WRCR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_WRCR():	return _IOCTL_BASE + 0x11$/;"	f
IOCTL_WRCR	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_WRCR                     = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x818, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_WRIO	source/drivers/linux/include/chipsec.h	9;"	d
IOCTL_WRIO	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_WRIO():       return _IOCTL_BASE + 0x2$/;"	f
IOCTL_WRITE_IO_PORT	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_WRITE_IO_PORT            = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80f, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_WRITE_PHYSMEM	source/drivers/win7/include/chipsec.h	25;"	d
IOCTL_WRITE_PHYSMEM	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_WRITE_PHYSMEM            = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80a, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_WRMMIO	source/drivers/linux/include/chipsec.h	24;"	d
IOCTL_WRMMIO	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_WRMMIO():       return _IOCTL_BASE + 0x13$/;"	f
IOCTL_WRMSR	source/drivers/linux/include/chipsec.h	13;"	d
IOCTL_WRMSR	source/drivers/win7/include/chipsec.h	35;"	d
IOCTL_WRMSR	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_WRMSR():      return _IOCTL_BASE + 0x6$/;"	f
IOCTL_WRMSR	source/tool/chipsec/helper/win/win32helper.py	/^IOCTL_WRMSR                    = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80c, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
IOCTL_WRPCI	source/drivers/linux/include/chipsec.h	11;"	d
IOCTL_WRPCI	source/tool/chipsec/helper/linux/helper.py	/^def IOCTL_WRPCI():      return _IOCTL_BASE + 0x4$/;"	f
IS_EFI_VARIABLE_AUTHENTICATED	source/tool/chipsec/hal/uefi_common.py	/^def IS_EFI_VARIABLE_AUTHENTICATED( attr ):$/;"	f
IS_VARIABLE_ATTRIBUTE	source/tool/chipsec/hal/uefi_common.py	/^def IS_VARIABLE_ATTRIBUTE(_c, _Mask):$/;"	f
IS_VARIABLE_STATE	source/tool/chipsec/hal/uefi_platform.py	/^def IS_VARIABLE_STATE(_c, _Mask):$/;"	f
Interrupts	source/tool/chipsec/hal/interrupts.py	/^class Interrupts:$/;"	c
IsValidPEHeader	source/tool/chipsec/modules/tools/secureboot/te.py	/^def IsValidPEHeader(data):$/;"	f
KERNEL_SRC_DIR	source/drivers/linux/Makefile	/^KERNEL_SRC_DIR = \/lib\/modules\/`uname -r`\/build $/;"	m
LOG_FILE_NAME	source/tool/chipsec/logger.py	/^    LOG_FILE_NAME        = ""$/;"	v	class:Logger
LOG_PATH	source/tool/chipsec/logger.py	/^LOG_PATH                = os.path.join( os.getcwd(), "logs" )$/;"	v
LOG_STATUS_FILE_NAME	source/tool/chipsec/logger.py	/^    LOG_STATUS_FILE_NAME = ""$/;"	v	class:Logger
LOG_TO_FILE	source/tool/chipsec/logger.py	/^    LOG_TO_FILE          = False$/;"	v	class:Logger
LOG_TO_STATUS_FILE	source/tool/chipsec/logger.py	/^    LOG_TO_STATUS_FILE   = False$/;"	v	class:Logger
LPC_BC_REG	source/tool/chipsec/cfg/common.py	/^    class LPC_BC_REG( namedtuple('LPC_BC_REG', 'value SMM_BWP TSS SRC BLE BIOSWE') ):$/;"	c	class:Cfg
LPC_BC_REG_OFF	source/tool/chipsec/cfg/common.py	/^    LPC_BC_REG_OFF        = 0xDC #  BIOS Control (BC)$/;"	v	class:Cfg
LPC_RCBA_REG_OFFSET	source/tool/chipsec/cfg/common.py	/^    LPC_RCBA_REG_OFFSET   = 0xF0$/;"	v	class:Cfg
LZMA_CUSTOM_DECOMPRESS_GUID	source/tool/chipsec/hal/uefi_common.py	/^LZMA_CUSTOM_DECOMPRESS_GUID = "EE4E5898-3914-4259-9D6E-DC7BD79403CF"$/;"	v
LinuxHelper	source/tool/chipsec/helper/linux/helper.py	/^class LinuxHelper:$/;"	c
Logger	source/tool/chipsec/logger.py	/^class Logger:$/;"	c
LoggerError	source/tool/chipsec/logger.py	/^class LoggerError (RuntimeWarning):$/;"	c
MAGENTA	source/tool/chipsec/logger.py	/^MAGENTA   =5$/;"	v
MASTER_GBE	source/tool/chipsec/hal/spi.py	/^MASTER_GBE              = 2$/;"	v
MASTER_HOST_CPU_BIOS	source/tool/chipsec/hal/spi.py	/^MASTER_HOST_CPU_BIOS    = 0$/;"	v
MASTER_ME	source/tool/chipsec/hal/spi.py	/^MASTER_ME               = 1$/;"	v
MAXPATHLEN	tools/edk2/PythonEFI/edk2module.c	152;"	d	file:
MAXPATHLEN	tools/edk2/PythonEFI/edk2module.c	154;"	d	file:
MAX_DIMM_SPD_COUNT	source/tool/chipsec/hal/spd.py	/^MAX_DIMM_SPD_COUNT = 8$/;"	v
MAX_EFI_TABLE_SIZE	source/tool/chipsec/hal/uefi_common.py	/^MAX_EFI_TABLE_SIZE = 0x1000$/;"	v
MAX_GROUPS	tools/edk2/PythonEFI/edk2module.c	2398;"	d	file:
MAX_NVRAM_SIZE	source/tool/chipsec/hal/uefi_common.py	/^MAX_NVRAM_SIZE    = 1024*1024$/;"	v
MAX_PTR_OFFSET_IN_BUFFER	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^MAX_PTR_OFFSET_IN_BUFFER  = 0x20$/;"	v
MAX_S3_BOOTSCRIPT_ENTRY_LENGTH	source/tool/chipsec/hal/uefi_common.py	/^MAX_S3_BOOTSCRIPT_ENTRY_LENGTH   = 0x200$/;"	v
MAX_VARIABLE_SIZE	source/tool/chipsec/hal/uefi_common.py	/^MAX_VARIABLE_SIZE = 1024$/;"	v
ME	source/tool/chipsec/hal/spi.py	/^ME                = 2$/;"	v
METHOD_BUFFERED	source/tool/chipsec/helper/win/win32helper.py	/^METHOD_BUFFERED   = 0$/;"	v
METHOD_IN_DIRECT	source/tool/chipsec/helper/win/win32helper.py	/^METHOD_IN_DIRECT  = 1$/;"	v
METHOD_NEITHER	source/tool/chipsec/helper/win/win32helper.py	/^METHOD_NEITHER    = 3$/;"	v
METHOD_OUT_DIRECT	source/tool/chipsec/helper/win/win32helper.py	/^METHOD_OUT_DIRECT = 2$/;"	v
MMCFG	source/tool/chipsec/chipset.py	/^    MMCFG  = 'mmcfg'$/;"	v	class:RegisterType
MMIO	source/tool/chipsec/chipset.py	/^    MMIO   = 'mmio'$/;"	v	class:RegisterType
MMIO_BAR_DMIBAR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_DMIBAR      = 2   # DMIBAR$/;"	v
MMIO_BAR_GMADR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_GMADR       = 11  # GFx Aperture$/;"	v
MMIO_BAR_GTTMMADR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_GTTMMADR    = 10  # GFx MMIO$/;"	v
MMIO_BAR_HDABAR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_HDABAR      = 20  # HD Audio MMIO BAR$/;"	v
MMIO_BAR_LPCRCBA	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_LPCRCBA     = 100 # ICH LPC Interface Root Complex (RCBA)$/;"	v
MMIO_BAR_LPCRCBA_SPI	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_LPCRCBA_SPI = 101 # RCBA SPIBASE$/;"	v
MMIO_BAR_MCHBAR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_MCHBAR      = 1   # MCHBAR$/;"	v
MMIO_BAR_PCIEXBAR	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_PCIEXBAR    = 3   # PCIEXBAR$/;"	v
MMIO_BAR_base	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_base = {$/;"	v
MMIO_BAR_name	source/tool/chipsec/hal/mmio.py	/^MMIO_BAR_name = {$/;"	v
MODNAME	tools/edk2/PythonEFI/edk2module.c	7833;"	d	file:
MODPATH_RE	source/tool/chipsec/module.py	/^MODPATH_RE      = re.compile("^\\w+(\\.\\w+)*$")$/;"	v
MODULE_TAGS	source/tool/chipsec/module_common.py	/^MODULE_TAGS = dict( [(_tag, []) for _tag in MTAG_METAS])$/;"	v
MODULE_TYPE	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE = {$/;"	v
MODULE_TYPE_LRDIMM	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE_LRDIMM          = 0x4$/;"	v
MODULE_TYPE_RDIMM	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE_RDIMM           = 0x1$/;"	v
MODULE_TYPE_SODIMM	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE_SODIMM          = 0x3$/;"	v
MODULE_TYPE_UDIMM	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE_UDIMM           = 0x2$/;"	v
MODULE_TYPE_UNDEFINED	source/tool/chipsec/hal/spd.py	/^MODULE_TYPE_UNDEFINED       = 0x0$/;"	v
MSR	source/tool/chipsec/chipset.py	/^    MSR    = 'msr'$/;"	v	class:RegisterType
MSR_IA32_BIOS_SIGN_ID	source/drivers/linux/include/chipsec.h	5;"	d
MSR_IA32_BIOS_SIGN_ID	source/drivers/win7/include/cpu.h	71;"	d
MSR_IA32_BIOS_UPDT_TRIG	source/drivers/linux/include/chipsec.h	4;"	d
MSR_IA32_BIOS_UPDT_TRIG	source/drivers/win7/include/cpu.h	70;"	d
MSR_PLATFORM_INFO	source/tool/chipsec/cfg/common.py	/^    MSR_PLATFORM_INFO      = 0xCE$/;"	v	class:Cfg
MTAG_BIOS	source/tool/chipsec/module_common.py	/^MTAG_BIOS       = "BIOS"$/;"	v
MTAG_HWCONFIG	source/tool/chipsec/module_common.py	/^MTAG_HWCONFIG   = "HWCONFIG"$/;"	v
MTAG_METAS	source/tool/chipsec/module_common.py	/^MTAG_METAS = {$/;"	v
MTAG_SECUREBOOT	source/tool/chipsec/module_common.py	/^MTAG_SECUREBOOT = "SECUREBOOT"$/;"	v
MTAG_SMM	source/tool/chipsec/module_common.py	/^MTAG_SMM        = "SMM"$/;"	v
MTIME	tools/edk2/PythonEFI/edk2module.c	1366;"	d	file:
MTIME	tools/edk2/PythonEFI/edk2module.c	1429;"	d	file:
MTRR_MEMTYPE_UC	source/tool/chipsec/cfg/common.py	/^    MTRR_MEMTYPE_UC = 0x0$/;"	v	class:Cfg
MTRR_MEMTYPE_WB	source/tool/chipsec/cfg/common.py	/^    MTRR_MEMTYPE_WB = 0x6$/;"	v	class:Cfg
MTRR_MEMTYPE_WC	source/tool/chipsec/cfg/common.py	/^    MTRR_MEMTYPE_WC = 0x1$/;"	v	class:Cfg
MTRR_MEMTYPE_WP	source/tool/chipsec/cfg/common.py	/^    MTRR_MEMTYPE_WP = 0x5$/;"	v	class:Cfg
MTRR_MEMTYPE_WT	source/tool/chipsec/cfg/common.py	/^    MTRR_MEMTYPE_WT = 0x4$/;"	v	class:Cfg
MemType	source/tool/chipsec/cfg/common.py	/^    MemType = {$/;"	v	class:Cfg
Memory	source/tool/chipsec/hal/physmem.py	/^class Memory:$/;"	c
MemoryAccessError	source/tool/chipsec/hal/physmem.py	/^class MemoryAccessError (RuntimeError):$/;"	c
MemoryRuntimeError	source/tool/chipsec/hal/physmem.py	/^class MemoryRuntimeError (RuntimeError):$/;"	c
MiscRT_GetNextVariableName	tools/edk2/PythonEFI/edk2module.c	/^MiscRT_GetNextVariableName(PyObject *self, PyObject *args)$/;"	f	file:
MiscRT_GetVariable	tools/edk2/PythonEFI/edk2module.c	/^MiscRT_GetVariable(PyObject *self, PyObject *args)$/;"	f	file:
MiscRT_SetVariable	tools/edk2/PythonEFI/edk2module.c	/^MiscRT_SetVariable(PyObject *self, PyObject *args)$/;"	f	file:
Module	source/tool/chipsec/module.py	/^class Module():$/;"	c
ModuleResult	source/tool/chipsec/module_common.py	/^class ModuleResult:$/;"	c
Msr	source/tool/chipsec/hal/msr.py	/^class Msr:$/;"	c
MsrRuntimeError	source/tool/chipsec/hal/msr.py	/^class MsrRuntimeError (RuntimeError):$/;"	c
NAMLEN	tools/edk2/PythonEFI/edk2module.c	135;"	d	file:
NAMLEN	tools/edk2/PythonEFI/edk2module.c	138;"	d	file:
NEED_TICKS_PER_SECOND	tools/edk2/PythonEFI/edk2module.c	4683;"	d	file:
NMI_NOW	source/tool/chipsec/hal/interrupts.py	/^NMI_NOW      = 0x1$/;"	v
NMI_TCO1_CTL	source/tool/chipsec/hal/interrupts.py	/^NMI_TCO1_CTL = 0x8 # NMI_NOW is bit [8] in TCO1_CTL (or bit [1] in TCO1_CTL + 1)$/;"	v
NVAR_EFIvar_signature	source/tool/chipsec/hal/uefi_platform.py	/^NVAR_EFIvar_signature   = 'NVAR'$/;"	v
NVAR_HDR_SIZE	source/tool/chipsec/hal/uefi_platform.py	/^NVAR_HDR_SIZE         = struct.calcsize( NVAR_HDR_FMT )$/;"	v
NVAR_NVRAM_FS_FILE	source/tool/chipsec/hal/uefi_platform.py	/^NVAR_NVRAM_FS_FILE      = "CEF5B9A3-476D-497F-9FDC-E98143E0422C"$/;"	v
NVRAM_ATTR_AUTHWR	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_AUTHWR     = 0x40$/;"	v
NVRAM_ATTR_DATA	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_DATA       = 8$/;"	v
NVRAM_ATTR_DESC_ASCII	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_DESC_ASCII = 2$/;"	v
NVRAM_ATTR_EXTHDR	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_EXTHDR     = 0x10$/;"	v
NVRAM_ATTR_GUID	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_GUID       = 4$/;"	v
NVRAM_ATTR_HER	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_HER        = 0x20$/;"	v
NVRAM_ATTR_RT	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_RT         = 1$/;"	v
NVRAM_ATTR_VLD	source/tool/chipsec/hal/uefi_platform.py	/^NVRAM_ATTR_VLD        = 0x80$/;"	v
NextFwFile	source/tool/chipsec/hal/uefi_common.py	/^def NextFwFile(FvImage, FvLength, fof, polarity):$/;"	f
NextFwFileSection	source/tool/chipsec/hal/uefi_common.py	/^def NextFwFileSection(sections, ssize, sof, polarity):$/;"	f
NextFwVolume	source/tool/chipsec/hal/uefi_common.py	/^def NextFwVolume(buffer, off = 0):$/;"	f
OK	source/tool/chipsec_main.py	/^    OK         = 0$/;"	v	class:ExitCode
OPEN_EXISTING	source/tool/chipsec/helper/win/win32helper.py	/^OPEN_EXISTING   = 0x3$/;"	v
OPT_MODIFY	source/tool/chipsec/module_common.py	/^OPT_MODIFY = 'modify'$/;"	v
OsHelper	source/tool/chipsec/helper/oshelper.py	/^class OsHelper:$/;"	c
OsHelperError	source/tool/chipsec/helper/oshelper.py	/^class OsHelperError (RuntimeError):$/;"	c
PARSE_PID	tools/edk2/PythonEFI/edk2module.c	163;"	d	file:
PARSE_PID	tools/edk2/PythonEFI/edk2module.c	167;"	d	file:
PARSE_PID	tools/edk2/PythonEFI/edk2module.c	171;"	d	file:
PASS	source/tool/chipsec/xmlout.py	/^    PASS    = 4$/;"	v	class:testCaseType
PASSED	source/tool/chipsec/module_common.py	/^    PASSED  = 1$/;"	v	class:ModuleResult
PCH_RCBA_SPI_BFPR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_BFPR                  = 0x00  # BIOS Flash Primary Region Register (= FREG1)$/;"	v	class:Cfg
PCH_RCBA_SPI_FADDR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FADDR               = 0x08  # SPI Flash Address$/;"	v	class:Cfg
PCH_RCBA_SPI_FADDR_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FADDR_MASK          = 0x07FFFFFF                      # SPI Flash Address Mask [0:26]$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA00	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA00             = 0x10  # SPI Data 00 (32 bits)$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA01	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA01             = 0x14$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA02	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA02             = 0x18$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA03	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA03             = 0x1C$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA04	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA04             = 0x20$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA05	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA05             = 0x24$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA06	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA06             = 0x28$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA07	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA07             = 0x2C$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA08	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA08             = 0x30$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA09	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA09             = 0x34$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA10	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA10             = 0x38$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA11	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA11             = 0x3C$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA12	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA12             = 0x40$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA13	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA13             = 0x44$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA14	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA14             = 0x48$/;"	v	class:Cfg
PCH_RCBA_SPI_FDATA15	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDATA15             = 0x4C$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC                = 0xB0  # Flash Descriptor Observability Control Register$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSI_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSI_MASK      = 0x0FFC                        # Flash Descriptor Section Index$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSS_COMP	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSS_COMP      = 0x1000                        # Component$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSS_FSDM	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSS_FSDM      = 0x0000                        # Flash Signature and Descriptor Map$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSS_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSS_MASK      = (BIT14 | BIT13 | BIT12)       # Flash Descriptor Section Select$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSS_MSTR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSS_MSTR      = 0x3000                        # Master$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOC_FDSS_REGN	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOC_FDSS_REGN      = 0x2000                        # Region$/;"	v	class:Cfg
PCH_RCBA_SPI_FDOD	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FDOD                = 0xB4  # Flash Descriptor Observability Data Register$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG0_FLASHD	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG0_FLASHD           = 0x54  # Flash Region 0 (Flash Descriptor)$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG1_BIOS	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG1_BIOS             = 0x58  # Flash Region 1 (BIOS)$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG2_ME	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG2_ME               = 0x5C  # Flash Region 2 (ME)$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG3_GBE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG3_GBE              = 0x60  # Flash Region 3 (GbE)$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG4_PLATFORM_DATA	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG4_PLATFORM_DATA    = 0x64  # Flash Region 4 (Platform Data)$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG5	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG5                  = 0x68  # Flash Region 5$/;"	v	class:Cfg
PCH_RCBA_SPI_FREG6	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREG6                  = 0x6C  # Flash Region 6$/;"	v	class:Cfg
PCH_RCBA_SPI_FREGx_BASE_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREGx_BASE_MASK     = 0x00007FFF                    # Base$/;"	v	class:Cfg
PCH_RCBA_SPI_FREGx_LIMIT_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_FREGx_LIMIT_MASK    = 0x7FFF0000                    # Size$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL                = 0x06  # Hardware Sequencing Flash Control Register$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FCYCLE_ERASE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FCYCLE_ERASE   = 3                             # Flash Cycle Block Erase$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FCYCLE_FGO	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FCYCLE_FGO     = BIT0                          # Flash Cycle GO$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FCYCLE_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FCYCLE_MASK    = 0x0006                        # Flash Cycle$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FCYCLE_READ	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FCYCLE_READ    = 0                             # Flash Cycle Read$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FCYCLE_WRITE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FCYCLE_WRITE   = 2                             # Flash Cycle Write$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FDBC_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FDBC_MASK      = 0x3F00                        # Flash Data Byte Count, Count = FDBC + 1.$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFCTL_FSMIE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFCTL_FSMIE          = BIT15                         # Flash SPI SMI Enable$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS                = 0x04  # Hardware Sequencing Flash Status Register$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_AEL	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_AEL            = BIT2                          # Access Error Log$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_BERASE_256B	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_BERASE_256B    = 0x00                          # Block\/Sector = 256 Bytes$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_BERASE_4K	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_BERASE_4K      = 0x01                          # Block\/Sector = 4K Bytes$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_BERASE_64K	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_BERASE_64K     = 0x11                          # Block\/Sector = 64K Bytes$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_BERASE_8K	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_BERASE_8K      = 0x10                          # Block\/Sector = 8K Bytes$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_BERASE_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_BERASE_MASK    = (BIT4 | BIT3)                 # Block\/Sector Erase Size$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_FCERR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_FCERR          = BIT1                          # Flash Cycle Error$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_FDONE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_FDONE          = BIT0                          # Flash Cycle Done$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_FDOPSS	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_FDOPSS         = BIT13                         # Flash Descriptor Override Pin-Strap Status$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_FDV	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_FDV            = BIT14                         # Flash Descriptor Valid$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_FLOCKDN	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_FLOCKDN        = BIT15                         # Flash Configuration Lock-Down$/;"	v	class:Cfg
PCH_RCBA_SPI_HSFSTS_SCIP	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_HSFSTS_SCIP           = BIT5                          # SPI cycle in progress$/;"	v	class:Cfg
PCH_RCBA_SPI_OPMENU	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPMENU              = 0x98  # Opcode Menu Configuration$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE              = 0x96  # Opcode Type Configuration$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE0_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE0_MASK        = (BIT1 | BIT0)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE1_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE1_MASK        = (BIT3 | BIT2)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE2_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE2_MASK        = (BIT5 | BIT4)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE3_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE3_MASK        = (BIT7 | BIT6)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE4_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE4_MASK        = (BIT9 | BIT8)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE5_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE5_MASK        = (BIT11 | BIT10)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE6_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE6_MASK        = (BIT13 | BIT12)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE7_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE7_MASK        = (BIT15 | BIT14)$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE_RDADDR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE_RDADDR       = 0x02$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE_RDNOADDR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE_RDNOADDR     = 0x00$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE_WRADDR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE_WRADDR       = 0x03$/;"	v	class:Cfg
PCH_RCBA_SPI_OPTYPE_WRNOADDR	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_OPTYPE_WRNOADDR     = 0x01$/;"	v	class:Cfg
PCH_RCBA_SPI_PR0	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR0                 = 0x74  # Protected Region 0 Register$/;"	v	class:Cfg
PCH_RCBA_SPI_PR0_PRB_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR0_PRB_MASK        = 0x00007FFF                    # Protected Range Base Mask$/;"	v	class:Cfg
PCH_RCBA_SPI_PR0_PRL_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR0_PRL_MASK        = 0x7FFF0000                    # Protected Range Limit Mask$/;"	v	class:Cfg
PCH_RCBA_SPI_PR0_RPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR0_RPE             = BIT15                         # Read Protection Enable$/;"	v	class:Cfg
PCH_RCBA_SPI_PR0_WPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR0_WPE             = BIT31                         # Write Protection Enable$/;"	v	class:Cfg
PCH_RCBA_SPI_PR1	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR1                 = 0x78$/;"	v	class:Cfg
PCH_RCBA_SPI_PR1_PRB_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR1_PRB_MASK        = 0x00007FFF$/;"	v	class:Cfg
PCH_RCBA_SPI_PR1_PRL_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR1_PRL_MASK        = 0x7FFF0000$/;"	v	class:Cfg
PCH_RCBA_SPI_PR1_RPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR1_RPE             = BIT15$/;"	v	class:Cfg
PCH_RCBA_SPI_PR1_WPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR1_WPE             = BIT31$/;"	v	class:Cfg
PCH_RCBA_SPI_PR2	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR2                 = 0x7C$/;"	v	class:Cfg
PCH_RCBA_SPI_PR2_PRB_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR2_PRB_MASK        = 0x00007FFF$/;"	v	class:Cfg
PCH_RCBA_SPI_PR2_PRL_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR2_PRL_MASK        = 0x7FFF0000$/;"	v	class:Cfg
PCH_RCBA_SPI_PR2_RPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR2_RPE             = BIT15$/;"	v	class:Cfg
PCH_RCBA_SPI_PR2_WPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR2_WPE             = BIT31$/;"	v	class:Cfg
PCH_RCBA_SPI_PR3	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR3                 = 0x80$/;"	v	class:Cfg
PCH_RCBA_SPI_PR3_PRB_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR3_PRB_MASK        = 0x00007FFF$/;"	v	class:Cfg
PCH_RCBA_SPI_PR3_PRL_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR3_PRL_MASK        = 0x7FFF0000$/;"	v	class:Cfg
PCH_RCBA_SPI_PR3_RPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR3_RPE             = BIT15$/;"	v	class:Cfg
PCH_RCBA_SPI_PR3_WPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR3_WPE             = BIT31$/;"	v	class:Cfg
PCH_RCBA_SPI_PR4	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR4                 = 0x84$/;"	v	class:Cfg
PCH_RCBA_SPI_PR4_PRB_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR4_PRB_MASK        = 0x00007FFF$/;"	v	class:Cfg
PCH_RCBA_SPI_PR4_PRL_MASK	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR4_PRL_MASK        = 0x7FFF0000$/;"	v	class:Cfg
PCH_RCBA_SPI_PR4_RPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR4_RPE             = BIT15$/;"	v	class:Cfg
PCH_RCBA_SPI_PR4_WPE	source/tool/chipsec/cfg/common.py	/^    PCH_RCBA_SPI_PR4_WPE             = BIT31$/;"	v	class:Cfg
PCICFG	source/tool/chipsec/chipset.py	/^    PCICFG = 'pcicfg'$/;"	v	class:RegisterType
PCI_B0D31F0_LPC_DEV	source/tool/chipsec/cfg/common.py	/^    PCI_B0D31F0_LPC_DEV = 31$/;"	v	class:Cfg
PCI_B0D31F0_LPC_FUN	source/tool/chipsec/cfg/common.py	/^    PCI_B0D31F0_LPC_FUN = 0$/;"	v	class:Cfg
PCI_B0D31F3_SMBUS_CTRLR_DEV	source/tool/chipsec/cfg/common.py	/^    PCI_B0D31F3_SMBUS_CTRLR_DEV = 31$/;"	v	class:Cfg
PCI_B0D31F3_SMBUS_CTRLR_DID	source/tool/chipsec/cfg/common.py	/^    PCI_B0D31F3_SMBUS_CTRLR_DID = 0x1C22$/;"	v	class:Cfg
PCI_B0D31F3_SMBUS_CTRLR_FUN	source/tool/chipsec/cfg/common.py	/^    PCI_B0D31F3_SMBUS_CTRLR_FUN = 0x3$/;"	v	class:Cfg
PCI_BDF	source/tool/chipsec/helper/win/win32helper.py	/^class PCI_BDF(Structure):$/;"	c
PCI_BUS0	source/tool/chipsec/cfg/common.py	/^    PCI_BUS0 = 0x0$/;"	v	class:Cfg
PCI_DMIBAR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_DMIBAR_REG_OFF            = 0x68$/;"	v	class:Cfg
PCI_GMADR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_GMADR_REG_OFF             = 0x18$/;"	v	class:Cfg
PCI_GTDE_DEV	source/tool/chipsec/cfg/common.py	/^    PCI_GTDE_DEV                  = 2$/;"	v	class:Cfg
PCI_GTTMMADR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_GTTMMADR_REG_OFF          = 0x10$/;"	v	class:Cfg
PCI_HDAUDIOBAR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_HDAUDIOBAR_REG_OFF        = 0x10$/;"	v	class:Cfg
PCI_HDA_DEV	source/tool/chipsec/cfg/common.py	/^    PCI_HDA_DEV                   = 0x3$/;"	v	class:Cfg
PCI_HDA_MMAH_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_HDA_MMAH_REG_OFF          = 0x68$/;"	v	class:Cfg
PCI_HDA_MMAL_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_HDA_MMAL_REG_OFF          = 0x64$/;"	v	class:Cfg
PCI_HDA_MMC_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_HDA_MMC_REG_OFF           = 0x62$/;"	v	class:Cfg
PCI_HDA_MMD_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_HDA_MMD_REG_OFF           = 0x6C$/;"	v	class:Cfg
PCI_MCHBAR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_MCHBAR_REG_OFF            = 0x48$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_ADMSK128	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_ADMSK128     = (1 << 27)$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_ADMSK256	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_ADMSK256     = 0xF0000000$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_ADMSK64	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_ADMSK64      = (1 << 26)$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_LENGTH_128MB	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_LENGTH_128MB = 0x1$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_LENGTH_256MB	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_LENGTH_256MB = 0x0$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_LENGTH_64MB	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_LENGTH_64MB  = 0x2$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_LENGTH_MASK	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_LENGTH_MASK  = (0x3 << 1)$/;"	v	class:Cfg
PCI_PCIEXBAR_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_PCIEXBAR_REG_OFF          = 0x60$/;"	v	class:Cfg
PCI_SMRAMC_BUS	source/tool/chipsec/cfg/common.py	/^    PCI_SMRAMC_BUS                = 0$/;"	v	class:Cfg
PCI_SMRAMC_DEV	source/tool/chipsec/cfg/common.py	/^    PCI_SMRAMC_DEV                = 0$/;"	v	class:Cfg
PCI_SMRAMC_FUN	source/tool/chipsec/cfg/common.py	/^    PCI_SMRAMC_FUN                = 0$/;"	v	class:Cfg
PCI_SMRAMC_REG_OFF	source/tool/chipsec/cfg/common.py	/^    PCI_SMRAMC_REG_OFF            = 0x88 # 0x9D before Sandy Bridge$/;"	v	class:Cfg
PCONTEXT	source/drivers/linux/chipsec_km.c	/^} CONTEXT, *PCONTEXT;$/;"	t	typeref:struct:tagCONTEXT	file:
PCPUID_CTX	source/drivers/linux/chipsec_km.c	/^typedef CONTEXT CPUID_CTX, *PCPUID_CTX;$/;"	t	file:
PDESCRIPTOR_TABLE_RECORD	source/drivers/linux/include/chipsec.h	/^} DESCRIPTOR_TABLE_RECORD, *PDESCRIPTOR_TABLE_RECORD;$/;"	t	typeref:struct:_DESCRIPTOR_TABLE_RECORD
PDESCRIPTOR_TABLE_RECORD	source/drivers/win7/include/cpu.h	/^} DESCRIPTOR_TABLE_RECORD, *PDESCRIPTOR_TABLE_RECORD;$/;"	t	typeref:struct:_DESCRIPTOR_TABLE_RECORD
PHYSICAL_ADDRESS	source/drivers/linux/include/chipsec.h	/^} PHYSICAL_ADDRESS;$/;"	t	typeref:union:__anon3
PLATFORM_DATA	source/tool/chipsec/hal/spi.py	/^PLATFORM_DATA     = 4$/;"	v
PMBASE_SMI_EN	source/tool/chipsec/cfg/common.py	/^    PMBASE_SMI_EN         = 0x30 # SMI_EN offset in PMBASE (ABASE)$/;"	v	class:Cfg
POPEN_1	tools/edk2/PythonEFI/edk2module.c	2823;"	d	file:
POPEN_1	tools/edk2/PythonEFI/edk2module.c	3384;"	d	file:
POPEN_2	tools/edk2/PythonEFI/edk2module.c	2824;"	d	file:
POPEN_2	tools/edk2/PythonEFI/edk2module.c	3385;"	d	file:
POPEN_3	tools/edk2/PythonEFI/edk2module.c	2825;"	d	file:
POPEN_3	tools/edk2/PythonEFI/edk2module.c	3386;"	d	file:
POPEN_4	tools/edk2/PythonEFI/edk2module.c	2826;"	d	file:
POPEN_4	tools/edk2/PythonEFI/edk2module.c	3387;"	d	file:
PORTIO	source/tool/chipsec/chipset.py	/^    PORTIO = 'io'$/;"	v	class:RegisterType
PROCESS_CALL	source/tool/chipsec/hal/uefi_common.py	/^  PROCESS_CALL      = 0x0A$/;"	v	class:S3BootScriptSmbusOperation
PSMI_CTX	source/drivers/linux/chipsec_km.c	/^typedef SMI_CONTEXT SMI_CTX, *PSMI_CTX; $/;"	t	file:
PTR_IN_ALL_GPRS	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^PTR_IN_ALL_GPRS           = False$/;"	v
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC DisableInterrupts$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadCR0$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadCR2$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadCR3$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadCR4$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadCR8$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPCIByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPCIDword$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPCIWord$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPortByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPortDword$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC ReadPortWord$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC SendAPMSMI$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteCR0$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteCR2$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteCR3$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteCR4$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteCR8$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteHighCMOSByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WriteLowCMOSByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePCIByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePCIDword$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePCIWord$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePortByte$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePortDword$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC WritePortWord$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC _load_gdt$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC _rdmsr$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC _rflags$/;"	l
PUBLIC	source/drivers/win7/amd64/cpu.asm	/^PUBLIC _wrmsr$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC DisableInterrupts$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPCIByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPCIDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPCIWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPortByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPortDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC ReadPortWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC SendAPMSMI$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WriteHighCMOSByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WriteLowCMOSByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePCIByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePCIDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePCIWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePortByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePortDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC WritePortWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC _load_gdt$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC _rdmsr$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC _rflags$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC _swsmi$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu.asm	/^PUBLIC _wrmsr$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPCIByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPCIDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPCIWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPortByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPortDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC ReadPortWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC SendAPMSMI$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WriteHighCMOSByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WriteLowCMOSByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePCIByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePCIDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePCIWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePortByte$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePortDword$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC WritePortWord$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC _rdmsr$/;"	l
PUBLIC	tools/edk2/PythonEFI/cpu_ia32.asm	/^PUBLIC _wrmsr$/;"	l
PY_SSIZE_T_CLEAN	tools/edk2/PythonEFI/edk2module.c	16;"	d	file:
Pci	source/tool/chipsec/hal/pci.py	/^class Pci:$/;"	c
PciDeviceNotFoundError	source/tool/chipsec/hal/pci.py	/^class PciDeviceNotFoundError (RuntimeError):$/;"	c
PciRuntimeError	source/tool/chipsec/hal/pci.py	/^class PciRuntimeError (RuntimeError):$/;"	c
PortIO	source/tool/chipsec/hal/io.py	/^class PortIO:$/;"	c
PortIORuntimeError	source/tool/chipsec/hal/io.py	/^class PortIORuntimeError (RuntimeError):$/;"	c
PyLong_AsByteArray	source/tool/chipsec/helper/win/win32helper.py	/^PyLong_AsByteArray = pythonapi._PyLong_AsByteArray$/;"	v
PyLong_AsPid	tools/edk2/PythonEFI/edk2module.c	165;"	d	file:
PyLong_AsPid	tools/edk2/PythonEFI/edk2module.c	169;"	d	file:
PyLong_AsPid	tools/edk2/PythonEFI/edk2module.c	173;"	d	file:
PyLong_FromPid	tools/edk2/PythonEFI/edk2module.c	164;"	d	file:
PyLong_FromPid	tools/edk2/PythonEFI/edk2module.c	168;"	d	file:
PyLong_FromPid	tools/edk2/PythonEFI/edk2module.c	172;"	d	file:
Py_UNICODE	tools/edk2/PythonEFI/edk2module.c	77;"	d	file:
QUICK_READ	source/tool/chipsec/hal/uefi_common.py	/^  QUICK_READ        = 0x00$/;"	v	class:S3BootScriptSmbusOperation
QUICK_WRITE	source/tool/chipsec/hal/uefi_common.py	/^  QUICK_WRITE       = 0x01$/;"	v	class:S3BootScriptSmbusOperation
RCBA_BASE_ADDR_SHIFT	source/tool/chipsec/cfg/common.py	/^    RCBA_BASE_ADDR_SHIFT  = 14$/;"	v	class:Cfg
RCBA_GC_BUC_REG_OFFSET	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_BUC_REG_OFFSET     = 0x14    # Backup Control (BUC) register$/;"	v	class:Cfg
RCBA_GC_BUC_REG_TS_MASK	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_BUC_REG_TS_MASK    = 0x1     # Top-Swap strap (TS)$/;"	v	class:Cfg
RCBA_GC_GCS_REG_BBS_MASK	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_GCS_REG_BBS_MASK   = 0xC00   # Boot BIOS Straps (BBS) - PCI\/SPI\/LPC$/;"	v	class:Cfg
RCBA_GC_GCS_REG_BILD_MASK	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_GCS_REG_BILD_MASK  = 0x1     # BIOS Interface Lock-Down (BILD)$/;"	v	class:Cfg
RCBA_GC_GCS_REG_OFFSET	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_GCS_REG_OFFSET     = 0x10    # General Control and Status (GCS) register$/;"	v	class:Cfg
RCBA_GC_RC_REG_OFFSET	source/tool/chipsec/cfg/common.py	/^    RCBA_GC_RC_REG_OFFSET      = 0x0     # RTC Configuration (RC) register$/;"	v	class:Cfg
RCBA_GENERAL_CONFIG_OFFSET	source/tool/chipsec/cfg/common.py	/^    RCBA_GENERAL_CONFIG_OFFSET = 0x3400  # Offset of BIOS General Configuration memory mapped registers base in RCBA$/;"	v	class:Cfg
RDWRPCI_DEVICE_NAME_WIN32	source/drivers/win7/include/chipsec.h	8;"	d
READ_BLOCK	source/tool/chipsec/hal/uefi_common.py	/^  READ_BLOCK        = 0x08$/;"	v	class:S3BootScriptSmbusOperation
READ_BYTE	source/tool/chipsec/hal/uefi_common.py	/^  READ_BYTE         = 0x04$/;"	v	class:S3BootScriptSmbusOperation
READ_IO_PORT	source/drivers/win7/include/chipsec.h	39;"	d
READ_PCI_CFG_REGISTER	source/drivers/win7/include/chipsec.h	19;"	d
READ_PCI_CFG_REGISTER	source/tool/chipsec/helper/win/win32helper.py	/^READ_PCI_CFG_REGISTER          = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
READ_WORD	source/tool/chipsec/hal/uefi_common.py	/^  READ_WORD         = 0x06$/;"	v	class:S3BootScriptSmbusOperation
RECEIVE_BYTE	source/tool/chipsec/hal/uefi_common.py	/^  RECEIVE_BYTE      = 0x02$/;"	v	class:S3BootScriptSmbusOperation
RED	source/tool/chipsec/logger.py	/^RED       =1$/;"	v
RESET	source/tool/chipsec/logger.py	/^RESET     =0$/;"	v
REVERSE	source/tool/chipsec/logger.py	/^REVERSE   =7$/;"	v
RSDP	source/tool/chipsec/hal/acpi_tables.py	/^class RSDP():$/;"	c
RSDP_GUID_ACPI1_0	source/tool/chipsec/hal/acpi.py	/^RSDP_GUID_ACPI1_0 = 'EB9D2D31-2D88-11D3-9A16-0090273FC14D'$/;"	v
RSDP_GUID_ACPI2_0	source/tool/chipsec/hal/acpi.py	/^RSDP_GUID_ACPI2_0 = '8868E871-E4F1-11D3-BC22-0080C73C8881'$/;"	v
RSDT	source/tool/chipsec/hal/acpi_tables.py	/^class RSDT():$/;"	c
RUNTIME_SCRIPT_TABLE_BASE_OFFSET	source/tool/chipsec/hal/uefi_common.py	/^RUNTIME_SCRIPT_TABLE_BASE_OFFSET = 32$/;"	v
R_OK	tools/edk2/PythonEFI/edk2module.c	662;"	d	file:
ReadCR0	source/drivers/linux/amd64/cpu.asm	/^ReadCR0:$/;"	l
ReadCR0	source/drivers/linux/i386/cpu.asm	/^ ReadCR0:$/;"	l
ReadCR0	source/drivers/win7/amd64/cpu.asm	/^ReadCR0 PROC$/;"	l
ReadCR2	source/drivers/linux/amd64/cpu.asm	/^ReadCR2:$/;"	l
ReadCR2	source/drivers/linux/i386/cpu.asm	/^ ReadCR2:$/;"	l
ReadCR2	source/drivers/win7/amd64/cpu.asm	/^ReadCR2 PROC$/;"	l
ReadCR3	source/drivers/linux/amd64/cpu.asm	/^ReadCR3:$/;"	l
ReadCR3	source/drivers/linux/i386/cpu.asm	/^ ReadCR3:$/;"	l
ReadCR3	source/drivers/win7/amd64/cpu.asm	/^ReadCR3 PROC$/;"	l
ReadCR4	source/drivers/linux/amd64/cpu.asm	/^ReadCR4:$/;"	l
ReadCR4	source/drivers/linux/i386/cpu.asm	/^ ReadCR4:$/;"	l
ReadCR4	source/drivers/win7/amd64/cpu.asm	/^ReadCR4 PROC$/;"	l
ReadCR8	source/drivers/linux/amd64/cpu.asm	/^ReadCR8:$/;"	l
ReadCR8	source/drivers/win7/amd64/cpu.asm	/^ReadCR8 PROC$/;"	l
ReadIOPort	source/drivers/linux/chipsec_km.c	/^ReadIOPort($/;"	f
ReadIOPort	source/drivers/win7/driver.c	/^ReadIOPort($/;"	f
ReadPCIByte	source/drivers/linux/amd64/cpu.asm	/^ReadPCIByte:$/;"	l
ReadPCIByte	source/drivers/linux/i386/cpu.asm	/^ ReadPCIByte:$/;"	l
ReadPCIByte	source/drivers/win7/amd64/cpu.asm	/^ReadPCIByte PROC$/;"	l
ReadPCIByte	tools/edk2/PythonEFI/cpu.asm	/^ReadPCIByte PROC$/;"	l
ReadPCIByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPCIByte PROC$/;"	l
ReadPCIByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPCIByte:$/;"	l
ReadPCICfg	source/drivers/linux/chipsec_km.c	/^ReadPCICfg($/;"	f
ReadPCICfg	source/drivers/win7/driver.c	/^ReadPCICfg($/;"	f
ReadPCICfg	tools/edk2/PythonEFI/edk2module.c	/^unsigned int ReadPCICfg($/;"	f
ReadPCIDword	source/drivers/linux/amd64/cpu.asm	/^ReadPCIDword:$/;"	l
ReadPCIDword	source/drivers/linux/i386/cpu.asm	/^ ReadPCIDword:$/;"	l
ReadPCIDword	source/drivers/win7/amd64/cpu.asm	/^ReadPCIDword PROC$/;"	l
ReadPCIDword	tools/edk2/PythonEFI/cpu.asm	/^ReadPCIDword PROC$/;"	l
ReadPCIDword	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPCIDword PROC$/;"	l
ReadPCIDword	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPCIDword:$/;"	l
ReadPCIWord	source/drivers/linux/amd64/cpu.asm	/^ReadPCIWord: $/;"	l
ReadPCIWord	source/drivers/linux/i386/cpu.asm	/^ ReadPCIWord:$/;"	l
ReadPCIWord	source/drivers/win7/amd64/cpu.asm	/^ReadPCIWord PROC$/;"	l
ReadPCIWord	tools/edk2/PythonEFI/cpu.asm	/^ReadPCIWord PROC$/;"	l
ReadPCIWord	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPCIWord PROC$/;"	l
ReadPCIWord	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPCIWord:$/;"	l
ReadPortByte	source/drivers/linux/amd64/cpu.asm	/^ReadPortByte:$/;"	l
ReadPortByte	source/drivers/linux/i386/cpu.asm	/^ ReadPortByte:$/;"	l
ReadPortByte	source/drivers/win7/amd64/cpu.asm	/^ReadPortByte PROC$/;"	l
ReadPortByte	tools/edk2/PythonEFI/cpu.asm	/^ReadPortByte PROC$/;"	l
ReadPortByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPortByte PROC$/;"	l
ReadPortByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPortByte:$/;"	l
ReadPortDword	source/drivers/linux/amd64/cpu.asm	/^ReadPortDword: $/;"	l
ReadPortDword	source/drivers/linux/i386/cpu.asm	/^ ReadPortDword:$/;"	l
ReadPortDword	source/drivers/win7/amd64/cpu.asm	/^ReadPortDword PROC$/;"	l
ReadPortDword	tools/edk2/PythonEFI/cpu.asm	/^ReadPortDword PROC$/;"	l
ReadPortDword	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPortDword PROC$/;"	l
ReadPortDword	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPortDword:$/;"	l
ReadPortWord	source/drivers/linux/amd64/cpu.asm	/^ReadPortWord: $/;"	l
ReadPortWord	source/drivers/linux/i386/cpu.asm	/^ ReadPortWord:$/;"	l
ReadPortWord	source/drivers/win7/amd64/cpu.asm	/^ReadPortWord PROC$/;"	l
ReadPortWord	tools/edk2/PythonEFI/cpu.asm	/^ReadPortWord PROC$/;"	l
ReadPortWord	tools/edk2/PythonEFI/cpu_ia32.asm	/^ReadPortWord PROC$/;"	l
ReadPortWord	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^ReadPortWord:$/;"	l
RegisterNotFoundError	source/tool/chipsec/chipset.py	/^class RegisterNotFoundError (RuntimeError):$/;"	c
RegisterType	source/tool/chipsec/chipset.py	/^class RegisterType:$/;"	c
S3BOOTSCRIPT_ENTRY	source/tool/chipsec/hal/uefi_common.py	/^class S3BOOTSCRIPT_ENTRY():$/;"	c
S3BootScriptOpcode	source/tool/chipsec/hal/uefi_common.py	/^class S3BootScriptOpcode:$/;"	c
S3BootScriptSmbusOperation	source/tool/chipsec/hal/uefi_common.py	/^class S3BootScriptSmbusOperation:$/;"	c
S3BootScriptType	source/tool/chipsec/hal/uefi_platform.py	/^class S3BootScriptType:$/;"	c
S3BootScriptWidth	source/tool/chipsec/hal/uefi_common.py	/^class S3BootScriptWidth:$/;"	c
S3_BOOTSCRIPT_VARIABLES	source/tool/chipsec/hal/uefi_common.py	/^S3_BOOTSCRIPT_VARIABLES          = [ 'AcpiGlobalVariable' ]$/;"	v
SECTION_NAMES	source/tool/chipsec/hal/uefi_common.py	/^SECTION_NAMES = {0x00: 'S_ALL', 0x01: 'S_COMPRESSION', 0x02: 'S_GUID_DEFINED', 0x10: 'S_PE32', 0x11: 'S_PIC', 0x12: 'S_TE', 0x13: 'S_DXE_DEPEX', 0x14: 'S_VERSION', 0x15: 'S_USER_INTERFACE', 0x16: 'S_COMPATIBILITY16', 0x17: 'S_FV_IMAGE', 0x18: 'S_FREEFORM_SUBTYPE_GUID', 0x19: 'S_RAW', 0x1B: 'S_PEI_DEPEX', 0x1C: 'S_SMM_DEPEX'}$/;"	v
SECURE_BOOT_KEY_VARIABLES	source/tool/chipsec/hal/uefi.py	/^SECURE_BOOT_KEY_VARIABLES  = (EFI_VAR_NAME_PK, EFI_VAR_NAME_KEK, EFI_VAR_NAME_db, EFI_VAR_NAME_dbx)$/;"	v
SECURE_BOOT_VARIABLES	source/tool/chipsec/hal/uefi.py	/^SECURE_BOOT_VARIABLES      = (EFI_VAR_NAME_SecureBoot, EFI_VAR_NAME_SetupMode) + SECURE_BOOT_KEY_VARIABLES$/;"	v
SECURE_BOOT_VARIABLES_ALL	source/tool/chipsec/hal/uefi.py	/^SECURE_BOOT_VARIABLES_ALL  = (EFI_VAR_NAME_CustomMode, EFI_VAR_NAME_SignatureSupport) + SECURE_BOOT_VARIABLES$/;"	v
SEND_BYTE	source/tool/chipsec/hal/uefi_common.py	/^  SEND_BYTE         = 0x03$/;"	v	class:S3BootScriptSmbusOperation
SERVICE_NAME	source/tool/chipsec/helper/win/win32helper.py	/^SERVICE_NAME     = "chipsec"$/;"	v
SET_INT	tools/edk2/PythonEFI/edk2module.c	4416;"	d	file:
SET_INT	tools/edk2/PythonEFI/edk2module.c	4432;"	d	file:
SIGNATURE_LIST	source/tool/chipsec/hal/uefi_common.py	/^SIGNATURE_LIST = "<IHH8sIII"$/;"	v
SIGNATURE_LIST_size	source/tool/chipsec/hal/uefi_common.py	/^SIGNATURE_LIST_size = struct.calcsize(SIGNATURE_LIST)$/;"	v
SKIPPED	source/tool/chipsec/module_common.py	/^    SKIPPED = 3$/;"	v	class:ModuleResult
SKIPPED	source/tool/chipsec/xmlout.py	/^    SKIPPED = 3$/;"	v	class:testCaseType
SKIPPED	source/tool/chipsec_main.py	/^    SKIPPED    = 1$/;"	v	class:ExitCode
SMB_HCFG_REG	source/tool/chipsec/cfg/common.py	/^    class SMB_HCFG_REG( namedtuple('SMB_HCFG_REG', 'value SPD_WD SSRESET I2C_EN SMB_SMI_EN HST_EN') ):$/;"	c	class:Cfg
SMBus	source/tool/chipsec/hal/smbus.py	/^class SMBus:$/;"	c
SMI_APMC_PORT	source/tool/chipsec/hal/interrupts.py	/^SMI_APMC_PORT = 0xB2$/;"	v
SMI_CONTEXT	source/drivers/linux/chipsec_km.c	/^} SMI_CONTEXT, *SMI_PCONTEXT;$/;"	t	typeref:struct:tagSMI_CONTEXT	file:
SMI_CTX	source/drivers/linux/chipsec_km.c	/^typedef SMI_CONTEXT SMI_CTX, *PSMI_CTX; $/;"	t	file:
SMI_PCONTEXT	source/drivers/linux/chipsec_km.c	/^} SMI_CONTEXT, *SMI_PCONTEXT;$/;"	t	typeref:struct:tagSMI_CONTEXT	file:
SPD	source/tool/chipsec/hal/spd.py	/^class SPD:$/;"	c
SPD_DDR	source/tool/chipsec/hal/spd.py	/^class SPD_DDR( namedtuple('SPD_DDR', 'SPDBytes TotalBytes DeviceType RowAddressCount') ):$/;"	c
SPD_DDR2	source/tool/chipsec/hal/spd.py	/^class SPD_DDR2( namedtuple('SPD_DDR2', 'SPDBytes TotalBytes DeviceType RowAddressCount') ):$/;"	c
SPD_DDR3	source/tool/chipsec/hal/spd.py	/^class SPD_DDR3( namedtuple('SPD_DDR3', 'SPDBytes Revision DeviceType ModuleType ChipSize Addressing Voltages ModuleOrg BusWidthECC FTB MTBDivident MTBDivisor tCKMin RsvdD CASLo CASHi') ):$/;"	c
SPD_DDR4	source/tool/chipsec/hal/spd.py	/^class SPD_DDR4( namedtuple('SPD_DDR4', 'SPDBytes Revision DeviceType ModuleType Density Addressing PackageType OptFeatures ThernalRefresh OptFeatures1 ReservedA VDD ModuleOrg BusWidthECC ThermSensor ModuleTypeExt') ):$/;"	c
SPD_DIMMS	source/tool/chipsec/hal/spd.py	/^SPD_DIMMS = {}$/;"	v
SPD_DIMM_ADDRESSES	source/tool/chipsec/hal/spd.py	/^SPD_DIMM_ADDRESSES = {}$/;"	v
SPD_OFFSET_DDR3_CAS_LATENCY_HIGH	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_CAS_LATENCY_HIGH     = 15 # CAS Latencies Supported, MSB$/;"	v
SPD_OFFSET_DDR3_CAS_LATENCY_LOW	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_CAS_LATENCY_LOW      = 14 # CAS Latencies Supported, LSB$/;"	v
SPD_OFFSET_DDR3_FTB	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_FTB                  = 9  # Fine Time Base (FTB) Divident \/ Divisor$/;"	v
SPD_OFFSET_DDR3_MEMORY_BUS_WIDTH_ECC	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_MEMORY_BUS_WIDTH_ECC = 8  # Module Memory Bus Width$/;"	v
SPD_OFFSET_DDR3_MODULE_ORGANIZATION	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_MODULE_ORGANIZATION  = 7  # Module Organization$/;"	v
SPD_OFFSET_DDR3_MODULE_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_MODULE_TYPE          = 3  # Module Type$/;"	v
SPD_OFFSET_DDR3_MTB_DIVIDENT	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_MTB_DIVIDENT         = 10 # Medium Time Base (MTB) Divident$/;"	v
SPD_OFFSET_DDR3_MTB_DIVISOR	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_MTB_DIVISOR          = 11 # Medium Time Base (MTB) Divisor$/;"	v
SPD_OFFSET_DDR3_RESERVED13	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_RESERVED13           = 13 # Reserved$/;"	v
SPD_OFFSET_DDR3_SDRAM_ADDRESSING	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_SDRAM_ADDRESSING     = 5  # SDRAM Addressing$/;"	v
SPD_OFFSET_DDR3_SDRAM_DENSITY_BANKS	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_SDRAM_DENSITY_BANKS  = 4  # SDRAM Density and Banks$/;"	v
SPD_OFFSET_DDR3_SPD_BYTES	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_SPD_BYTES            = 0  # SPD Bytes Written, Device Size, CRC coverage\/range$/;"	v
SPD_OFFSET_DDR3_SPD_REVISION	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_SPD_REVISION         = 1  # SPD Revision$/;"	v
SPD_OFFSET_DDR3_VDD	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_VDD                  = 6  # Module Nominal Voltage, VDD $/;"	v
SPD_OFFSET_DDR3_tCK_MIN	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR3_tCK_MIN              = 12 # SDRAM Minimum Cycle Time (tCKmin)$/;"	v
SPD_OFFSET_DDR4_MEMORY_BUS_WIDTH_ECC	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_MEMORY_BUS_WIDTH_ECC = 13 # Module Memory Bus Width$/;"	v
SPD_OFFSET_DDR4_MODULE_ORGANIZATION	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_MODULE_ORGANIZATION  = 12 # Module Organization$/;"	v
SPD_OFFSET_DDR4_MODULE_THERMAL_SENSOR	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_MODULE_THERMAL_SENSOR= 14 # Module Thermal Sensor$/;"	v
SPD_OFFSET_DDR4_MODULE_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_MODULE_TYPE          = 3  # Module Type$/;"	v
SPD_OFFSET_DDR4_MODULE_TYPE_EXTENDED	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_MODULE_TYPE_EXTENDED = 15 # Extended Module Type$/;"	v
SPD_OFFSET_DDR4_OPTIONAL_FEATURES	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_OPTIONAL_FEATURES    = 7  # SDRAM Optional Features$/;"	v
SPD_OFFSET_DDR4_OPTIONAL_FEATURES_1	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_OPTIONAL_FEATURES_1  = 9  # Other Optional Features$/;"	v
SPD_OFFSET_DDR4_RESERVED10	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_RESERVED10           = 10 # Reserved (must be 0x00)$/;"	v
SPD_OFFSET_DDR4_SDRAM_ADDRESSING	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_SDRAM_ADDRESSING     = 5  # SDRAM Addresing$/;"	v
SPD_OFFSET_DDR4_SDRAM_DENSITY_BANKS	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_SDRAM_DENSITY_BANKS  = 4  # SDRAM Density and Banks$/;"	v
SPD_OFFSET_DDR4_SDRAM_PACKAGE_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_SDRAM_PACKAGE_TYPE   = 6  # SDRAM Package Type$/;"	v
SPD_OFFSET_DDR4_SPD_BYTES	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_SPD_BYTES            = 0  # SPD Bytes Written, Device Size, CRC coverage\/range$/;"	v
SPD_OFFSET_DDR4_SPD_REVISION	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_SPD_REVISION         = 1  # SPD Revision$/;"	v
SPD_OFFSET_DDR4_THERMAL_AND_REFRESH	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_THERMAL_AND_REFRESH  = 8  # SDRAM Thermal and Refresh Options$/;"	v
SPD_OFFSET_DDR4_VDD	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR4_VDD                  = 11 # Module Nominal Voltage, VDD$/;"	v
SPD_OFFSET_DDR_BANKDS_COUNT	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_BANKDS_COUNT            = 5$/;"	v
SPD_OFFSET_DDR_CLOCK_FREQUENCY	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_CLOCK_FREQUENCY         = 9$/;"	v
SPD_OFFSET_DDR_COL_ADDRESS_COUNT	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_COL_ADDRESS_COUNT       = 4$/;"	v
SPD_OFFSET_DDR_DIMM_CONFIGURATION_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_DIMM_CONFIGURATION_TYPE = 11$/;"	v
SPD_OFFSET_DDR_ECC_SDRAM_WIDTH	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_ECC_SDRAM_WIDTH         = 14$/;"	v
SPD_OFFSET_DDR_MODULE_WIDTH_HIGH	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_MODULE_WIDTH_HIGH       = 7$/;"	v
SPD_OFFSET_DDR_MODULE_WIDTH_LOW	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_MODULE_WIDTH_LOW        = 6$/;"	v
SPD_OFFSET_DDR_PRIMARY_SDRAM_WIDTH	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_PRIMARY_SDRAM_WIDTH     = 13$/;"	v
SPD_OFFSET_DDR_REFRESH_RATE_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_REFRESH_RATE_TYPE       = 12$/;"	v
SPD_OFFSET_DDR_ROW_ADDRESS_COUNT	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_ROW_ADDRESS_COUNT       = 3$/;"	v
SPD_OFFSET_DDR_SPD_BYTES	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_SPD_BYTES               = 0$/;"	v
SPD_OFFSET_DDR_SPD_SIZE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_SPD_SIZE                = 1 $/;"	v
SPD_OFFSET_DDR_VOLTAGE_IFACE_LEVEL	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_VOLTAGE_IFACE_LEVEL     = 8$/;"	v
SPD_OFFSET_DDR_tAC	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_tAC                     = 10$/;"	v
SPD_OFFSET_DDR_tCCD_MIN	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DDR_tCCD_MIN                = 15$/;"	v
SPD_OFFSET_DRAM_DEVICE_TYPE	source/tool/chipsec/hal/spd.py	/^SPD_OFFSET_DRAM_DEVICE_TYPE     = 2 # Fundamental Memory (DRAM) Type$/;"	v
SPD_REVISION	source/tool/chipsec/hal/spd.py	/^def SPD_REVISION(revision):$/;"	f
SPD_REVISION_0_0	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_0_0 = 0x00 $/;"	v
SPD_REVISION_0_7	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_0_7 = 0x07$/;"	v
SPD_REVISION_0_8	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_0_8 = 0x08$/;"	v
SPD_REVISION_0_9	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_0_9 = 0x09$/;"	v
SPD_REVISION_1_0	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_1_0 = 0x10$/;"	v
SPD_REVISION_1_1	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_1_1 = 0x11$/;"	v
SPD_REVISION_1_2	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_1_2 = 0x12$/;"	v
SPD_REVISION_1_3	source/tool/chipsec/hal/spd.py	/^SPD_REVISION_1_3 = 0x13$/;"	v
SPD_SMBUS_ADDRESS	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS = 0xA0 # A2, A4, A6, A8, AA, AC, AE$/;"	v
SPD_SMBUS_ADDRESS_DIMM0	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM0 = SPD_SMBUS_ADDRESS$/;"	v
SPD_SMBUS_ADDRESS_DIMM1	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM1 = SPD_SMBUS_ADDRESS + 0x2$/;"	v
SPD_SMBUS_ADDRESS_DIMM2	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM2 = SPD_SMBUS_ADDRESS + 0x4$/;"	v
SPD_SMBUS_ADDRESS_DIMM3	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM3 = SPD_SMBUS_ADDRESS + 0x6$/;"	v
SPD_SMBUS_ADDRESS_DIMM4	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM4 = SPD_SMBUS_ADDRESS + 0x8$/;"	v
SPD_SMBUS_ADDRESS_DIMM5	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM5 = SPD_SMBUS_ADDRESS + 0xA$/;"	v
SPD_SMBUS_ADDRESS_DIMM6	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM6 = SPD_SMBUS_ADDRESS + 0xC$/;"	v
SPD_SMBUS_ADDRESS_DIMM7	source/tool/chipsec/hal/spd.py	/^SPD_SMBUS_ADDRESS_DIMM7 = SPD_SMBUS_ADDRESS + 0xE$/;"	v
SPI	source/tool/chipsec/hal/spi.py	/^class SPI:$/;"	c
SPI_BASE_ADDR_SHIFT	source/tool/chipsec/cfg/common.py	/^    SPI_BASE_ADDR_SHIFT   = 14$/;"	v	class:Cfg
SPI_BIOS_CONTROL_OFFSET	source/tool/chipsec/cfg/common.py	/^    SPI_BIOS_CONTROL_OFFSET = 0xDC # BIOS Control Register$/;"	v	class:Cfg
SPI_FLASH_DESCRIPTOR_SIGNATURE	source/tool/chipsec/hal/spi_descriptor.py	/^SPI_FLASH_DESCRIPTOR_SIGNATURE = struct.pack('=I', 0x0FF0A55A )$/;"	v
SPI_FLASH_DESCRIPTOR_SIZE	source/tool/chipsec/hal/spi_descriptor.py	/^SPI_FLASH_DESCRIPTOR_SIZE      = 0x1000$/;"	v
SPI_HSFSTS_FDOPSS_MASK	source/tool/chipsec/hal/spi.py	/^SPI_HSFSTS_FDOPSS_MASK  = (1 << 13)$/;"	v
SPI_HSFSTS_FLOCKDN_MASK	source/tool/chipsec/hal/spi.py	/^SPI_HSFSTS_FLOCKDN_MASK = (1 << 15)$/;"	v
SPI_HSFSTS_OFFSET	source/tool/chipsec/hal/spi.py	/^SPI_HSFSTS_OFFSET = 0x04$/;"	v
SPI_MASTER_NAMES	source/tool/chipsec/hal/spi.py	/^SPI_MASTER_NAMES = {$/;"	v
SPI_MASTER_NUMBER_IN_FD	source/tool/chipsec/hal/spi.py	/^SPI_MASTER_NUMBER_IN_FD = 3$/;"	v
SPI_MMIO_BASE_OFFSET	source/tool/chipsec/cfg/common.py	/^    SPI_MMIO_BASE_OFFSET  = 0x3800  # Base address of the SPI host interface registers off of RCBA$/;"	v	class:Cfg
SPI_MMIO_BUS	source/tool/chipsec/cfg/common.py	/^    SPI_MMIO_BUS          = PCI_BUS0$/;"	v	class:Cfg
SPI_MMIO_DEV	source/tool/chipsec/cfg/common.py	/^    SPI_MMIO_DEV          = PCI_B0D31F0_LPC_DEV$/;"	v	class:Cfg
SPI_MMIO_FUN	source/tool/chipsec/cfg/common.py	/^    SPI_MMIO_FUN          = PCI_B0D31F0_LPC_FUN$/;"	v	class:Cfg
SPI_MMIO_REG_OFFSET	source/tool/chipsec/cfg/common.py	/^    SPI_MMIO_REG_OFFSET   = 0xF0$/;"	v	class:Cfg
SPI_READ_WRITE_DEF_DBC	source/tool/chipsec/hal/spi.py	/^SPI_READ_WRITE_DEF_DBC = 4$/;"	v
SPI_READ_WRITE_MAX_DBC	source/tool/chipsec/hal/spi.py	/^SPI_READ_WRITE_MAX_DBC = 64$/;"	v
SPI_REGION	source/tool/chipsec/hal/spi.py	/^SPI_REGION = {$/;"	v
SPI_REGION_NAMES	source/tool/chipsec/hal/spi.py	/^SPI_REGION_NAMES = {$/;"	v
SPI_REGION_NUMBER	source/tool/chipsec/hal/spi.py	/^SPI_REGION_NUMBER       = 7$/;"	v
SPI_REGION_NUMBER_IN_FD	source/tool/chipsec/hal/spi.py	/^SPI_REGION_NUMBER_IN_FD = 5$/;"	v
STAT	tools/edk2/PythonEFI/edk2module.c	189;"	d	file:
STAT	tools/edk2/PythonEFI/edk2module.c	192;"	d	file:
STATUS_PRIVILEGED_INSTRUCTION	source/tool/chipsec/helper/win/win32helper.py	/^STATUS_PRIVILEGED_INSTRUCTION = 0xC0000096$/;"	v
STRUCT_STAT	tools/edk2/PythonEFI/edk2module.c	191;"	d	file:
STRUCT_STAT	tools/edk2/PythonEFI/edk2module.c	194;"	d	file:
ST_BIRTHTIME_IDX	tools/edk2/PythonEFI/edk2module.c	406;"	d	file:
ST_BIRTHTIME_IDX	tools/edk2/PythonEFI/edk2module.c	408;"	d	file:
ST_BLKSIZE_IDX	tools/edk2/PythonEFI/edk2module.c	376;"	d	file:
ST_BLKSIZE_IDX	tools/edk2/PythonEFI/edk2module.c	378;"	d	file:
ST_BLOCKS_IDX	tools/edk2/PythonEFI/edk2module.c	382;"	d	file:
ST_BLOCKS_IDX	tools/edk2/PythonEFI/edk2module.c	384;"	d	file:
ST_FLAGS_IDX	tools/edk2/PythonEFI/edk2module.c	394;"	d	file:
ST_FLAGS_IDX	tools/edk2/PythonEFI/edk2module.c	396;"	d	file:
ST_GEN_IDX	tools/edk2/PythonEFI/edk2module.c	400;"	d	file:
ST_GEN_IDX	tools/edk2/PythonEFI/edk2module.c	402;"	d	file:
ST_RDEV_IDX	tools/edk2/PythonEFI/edk2module.c	388;"	d	file:
ST_RDEV_IDX	tools/edk2/PythonEFI/edk2module.c	390;"	d	file:
SendAPMSMI	source/drivers/linux/amd64/cpu.asm	/^SendAPMSMI:$/;"	l
SendAPMSMI	source/drivers/linux/i386/cpu.asm	/^ SendAPMSMI:$/;"	l
SendAPMSMI	source/drivers/win7/amd64/cpu.asm	/^SendAPMSMI PROC$/;"	l
SendAPMSMI	tools/edk2/PythonEFI/cpu.asm	/^SendAPMSMI PROC$/;"	l
SendAPMSMI	tools/edk2/PythonEFI/cpu_ia32.asm	/^SendAPMSMI PROC$/;"	l
SendAPMSMI	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^SendAPMSMI:$/;"	l
SpiAccessError	source/tool/chipsec/hal/spi.py	/^class SpiAccessError (RuntimeError):$/;"	c
SpiRuntimeError	source/tool/chipsec/hal/spi.py	/^class SpiRuntimeError (RuntimeError):$/;"	c
StatResultType	tools/edk2/PythonEFI/edk2module.c	/^static PyTypeObject StatResultType;$/;"	v	file:
StatVFSResultType	tools/edk2/PythonEFI/edk2module.c	/^static PyTypeObject StatVFSResultType;$/;"	v	file:
StatusCode	source/tool/chipsec/hal/uefi_common.py	/^class StatusCode:$/;"	c
TABLE_NULL	source/tool/chipsec/hal/acpi_tables.py	/^class TABLE_NULL():$/;"	c
TAGS	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^TAGS = [MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/bios_smi.py	/^TAGS = [chipsec.module_common.MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/bios_ts.py	/^TAGS = [chipsec.module_common.MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/bios_wp.py	/^TAGS = [MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/secureboot/variables.py	/^TAGS = [MTAG_SECUREBOOT]$/;"	v
TAGS	source/tool/chipsec/modules/common/smm.py	/^TAGS = [MTAG_BIOS,MTAG_SMM]$/;"	v
TAGS	source/tool/chipsec/modules/common/smrr.py	/^TAGS = [MTAG_BIOS,MTAG_SMM]$/;"	v
TAGS	source/tool/chipsec/modules/common/spi_desc.py	/^TAGS = [MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/spi_lock.py	/^TAGS = [MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^TAGS = [MTAG_BIOS]$/;"	v
TAGS	source/tool/chipsec/modules/remap.py	/^TAGS = [MTAG_SMM,MTAG_HWCONFIG]$/;"	v
TAGS	source/tool/chipsec/modules/smm_dma.py	/^TAGS = [MTAG_SMM,MTAG_HWCONFIG]$/;"	v
TCOBASE_ABASE_OFFSET	source/tool/chipsec/cfg/common.py	/^    TCOBASE_ABASE_OFFSET = 0x60$/;"	v	class:Cfg
TITLE	source/drivers/win7/amd64/cpu.asm	/^TITLE   cpu.asm: Assembly code for the x64 resources$/;"	l
TITLE	source/drivers/win7/i386/cpu.asm	/^TITLE   cpu.asm: Assembly code for the i386 resources$/;"	l
TITLE	tools/edk2/PythonEFI/cpu.asm	/^TITLE   cpu.asm: Assembly code for the x64 resources$/;"	l
TITLE	tools/edk2/PythonEFI/cpu_ia32.asm	/^TITLE   cpu.asm: Assembly code for the i386 resources$/;"	l
TLV_HEADER	source/tool/chipsec/hal/uefi_platform.py	/^TLV_HEADER = "<BBH"$/;"	v
TestSuite	source/tool/chipsec/xmlout.py	/^class TestSuite(object):$/;"	c
UCODE_HEADER_SIZE	source/tool/chipsec/hal/ucode.py	/^UCODE_HEADER_SIZE = 0x30$/;"	v
UEFI	source/tool/chipsec/hal/uefi.py	/^class UEFI:$/;"	c
UEFI23_1_AUTHENTICATED_VARIABLE_ATTRIBUTES	source/tool/chipsec/hal/uefi_common.py	/^UEFI23_1_AUTHENTICATED_VARIABLE_ATTRIBUTES         = (EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS)$/;"	v
UEFI_VARIABLE_HEADER	source/tool/chipsec/hal/uefi_platform.py	/^class UEFI_VARIABLE_HEADER( namedtuple('UEFI_VARIABLE_HEADER', 'StartId State Reserved Attributes NameSize DataSize VendorGuid0 VendorGuid1 VendorGuid2 VendorGuid3') ):$/;"	c
UEFI_VARIABLE_HEADER_SIZE	source/tool/chipsec/hal/uefi_platform.py	/^UEFI_VARIABLE_HEADER_SIZE = 28$/;"	v
UEFI_VARIABLE_STORE_HEADER	source/tool/chipsec/hal/uefi_platform.py	/^UEFI_VARIABLE_STORE_HEADER = "<IHH8sIBBHI"$/;"	v
UEFI_VARIABLE_STORE_HEADER_SIZE	source/tool/chipsec/hal/uefi_platform.py	/^UEFI_VARIABLE_STORE_HEADER_SIZE = struct.calcsize(UEFI_VARIABLE_STORE_HEADER)$/;"	v
UNDERLINE	source/tool/chipsec/logger.py	/^UNDERLINE =3$/;"	v
USE_CTERMID_R	tools/edk2/PythonEFI/edk2module.c	181;"	d	file:
USE_TMPNAM_R	tools/edk2/PythonEFI/edk2module.c	185;"	d	file:
UTIL_TRACE	source/tool/chipsec/logger.py	/^    UTIL_TRACE = False$/;"	v	class:Logger
UTIME_ARG	tools/edk2/PythonEFI/edk2module.c	1427;"	d	file:
Ucode	source/tool/chipsec/hal/ucode.py	/^class Ucode:$/;"	c
UcodeUpdateHeader	source/tool/chipsec/hal/ucode.py	/^class UcodeUpdateHeader( namedtuple('UcodeUpdateHeader', 'header_version update_revision date processor_signature checksum loader_revision processor_flags data_size total_size reserved1 reserved2 reserved3') ):$/;"	c
UnknownChipsetError	source/tool/chipsec/chipset.py	/^class UnknownChipsetError (RuntimeError):$/;"	c
VARIABLE_DATA	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_DATA            = 0x55aa$/;"	v
VARIABLE_DATA_SIGNATURE	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_DATA_SIGNATURE    = struct.pack('=H', 0x55AA )$/;"	v
VARIABLE_SIGNATURE_VSS	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_SIGNATURE_VSS = VARIABLE_DATA_SIGNATURE$/;"	v
VARIABLE_STORE_FORMATTED	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_STORE_FORMATTED = 0x5a$/;"	v
VARIABLE_STORE_FORMATTED	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_FORMATTED = 0x5a$/;"	v
VARIABLE_STORE_FV_GUID	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_FV_GUID = 'FFF12B8D-7696-4C8B-A985-2747075B4F50'$/;"	v
VARIABLE_STORE_HEADER	source/tool/chipsec/hal/uefi_common.py	/^class VARIABLE_STORE_HEADER( namedtuple('VARIABLE_STORE_HEADER', 'guid0 guid1 guid2 guid3 Size Format State Reserved Reserved1') ):$/;"	c
VARIABLE_STORE_HEADER_FMT	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_STORE_HEADER_FMT  = '<8sIBBHI'$/;"	v
VARIABLE_STORE_HEADER_SIZE	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_STORE_HEADER_SIZE = struct.calcsize( VARIABLE_STORE_HEADER_FMT )$/;"	v
VARIABLE_STORE_HEADER_VSS	source/tool/chipsec/hal/uefi_platform.py	/^class VARIABLE_STORE_HEADER_VSS( namedtuple('VARIABLE_STORE_HEADER_VSS', 'Signature Size Format State Reserved Reserved1') ):$/;"	c
VARIABLE_STORE_HEALTHY	source/tool/chipsec/hal/uefi_common.py	/^VARIABLE_STORE_HEALTHY   = 0xfe$/;"	v
VARIABLE_STORE_HEALTHY	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_HEALTHY   = 0xfe$/;"	v
VARIABLE_STORE_SIGNATURE_EVSA	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_SIGNATURE_EVSA = 'EVSA'$/;"	v
VARIABLE_STORE_SIGNATURE_VSS	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_SIGNATURE_VSS  = '$VSS'$/;"	v
VARIABLE_STORE_STATUS_INVALID	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_STATUS_INVALID = 2$/;"	v
VARIABLE_STORE_STATUS_RAW	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_STATUS_RAW     = 0$/;"	v
VARIABLE_STORE_STATUS_UNKNOWN	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_STATUS_UNKNOWN = 3$/;"	v
VARIABLE_STORE_STATUS_VALID	source/tool/chipsec/hal/uefi_platform.py	/^VARIABLE_STORE_STATUS_VALID   = 1$/;"	v
VARS_get_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def VARS_get_EFI_variable( self, name, guid ):$/;"	m	class:LinuxHelper
VARS_get_efivar_from_sys	source/tool/chipsec/helper/linux/helper.py	/^    def VARS_get_efivar_from_sys( self, filename ):$/;"	m	class:LinuxHelper
VARS_list_EFI_variables	source/tool/chipsec/helper/linux/helper.py	/^    def VARS_list_EFI_variables ( self, infcls=2 ):$/;"	m	class:LinuxHelper
VARS_set_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def VARS_set_EFI_variable(self,  name, guid, value ):$/;"	m	class:LinuxHelper
VAR_ADDED	source/tool/chipsec/hal/uefi_platform.py	/^VAR_ADDED                     = 0x7f  # Variable has been completely added$/;"	v
VAR_DELETED	source/tool/chipsec/hal/uefi_platform.py	/^VAR_DELETED                   = 0xfd  # Variable is obsolete$/;"	v
VAR_IN_DELETED_TRANSITION	source/tool/chipsec/hal/uefi_platform.py	/^VAR_IN_DELETED_TRANSITION     = 0xfe  # Variable is in obsolete transistion$/;"	v
VENDORS	source/tool/chipsec/hal/pcidb.py	/^VENDORS = {$/;"	v
VERBOSE	source/tool/chipsec/logger.py	/^    VERBOSE    = False$/;"	v	class:Logger
VERSION	source/drivers/linux/Makefile	/^VERSION=$/;"	m
VERSION_FILE	source/tool/setup.py	/^VERSION_FILE = os.path.join( os.path.dirname( __file__ ),'VERSION' )$/;"	v
VID_INTEL	source/tool/chipsec/chipset.py	/^VID_INTEL = 0x8086$/;"	v
VendorGuid	source/tool/chipsec/hal/uefi_common.py	/^    def VendorGuid(self):$/;"	m	class:EFI_VENDOR_TABLE
WAIT_STATUS_INT	tools/edk2/PythonEFI/edk2module.c	159;"	d	file:
WAIT_TYPE	tools/edk2/PythonEFI/edk2module.c	158;"	d	file:
WARNING	source/tool/chipsec/module_common.py	/^    WARNING = 2$/;"	v	class:ModuleResult
WARNING	source/tool/chipsec_main.py	/^    WARNING    = 2$/;"	v	class:ExitCode
WHITE	source/tool/chipsec/logger.py	/^WHITE     =7$/;"	v
WIN_DRIVER_INSTALL_PATH	source/tool/setup.py	/^WIN_DRIVER_INSTALL_PATH = "Lib\/site-packages\/chipsec\/helper\/win"$/;"	v
WRITE_BLOCK	source/tool/chipsec/hal/uefi_common.py	/^  WRITE_BLOCK       = 0x09$/;"	v	class:S3BootScriptSmbusOperation
WRITE_BYTE	source/tool/chipsec/hal/uefi_common.py	/^  WRITE_BYTE        = 0x05$/;"	v	class:S3BootScriptSmbusOperation
WRITE_IO_PORT	source/drivers/win7/include/chipsec.h	41;"	d
WRITE_PCI_CFG_REGISTER	source/drivers/win7/include/chipsec.h	21;"	d
WRITE_PCI_CFG_REGISTER	source/tool/chipsec/helper/win/win32helper.py	/^WRITE_PCI_CFG_REGISTER         = CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_BUFFERED, CHIPSEC_CTL_ACCESS)$/;"	v
WRITE_WORD	source/tool/chipsec/hal/uefi_common.py	/^  WRITE_WORD        = 0x07$/;"	v	class:S3BootScriptSmbusOperation
W_OK	tools/edk2/PythonEFI/edk2module.c	665;"	d	file:
Win32Helper	source/tool/chipsec/helper/win/win32helper.py	/^class Win32Helper:$/;"	c
WriteCR0	source/drivers/linux/amd64/cpu.asm	/^WriteCR0:$/;"	l
WriteCR0	source/drivers/linux/i386/cpu.asm	/^ WriteCR0:$/;"	l
WriteCR0	source/drivers/win7/amd64/cpu.asm	/^WriteCR0 PROC$/;"	l
WriteCR2	source/drivers/linux/amd64/cpu.asm	/^WriteCR2:$/;"	l
WriteCR2	source/drivers/linux/i386/cpu.asm	/^ WriteCR2:$/;"	l
WriteCR2	source/drivers/win7/amd64/cpu.asm	/^WriteCR2 PROC$/;"	l
WriteCR3	source/drivers/linux/amd64/cpu.asm	/^WriteCR3:$/;"	l
WriteCR3	source/drivers/linux/i386/cpu.asm	/^ WriteCR3:$/;"	l
WriteCR3	source/drivers/win7/amd64/cpu.asm	/^WriteCR3 PROC$/;"	l
WriteCR4	source/drivers/linux/amd64/cpu.asm	/^WriteCR4:$/;"	l
WriteCR4	source/drivers/linux/i386/cpu.asm	/^ WriteCR4:$/;"	l
WriteCR4	source/drivers/win7/amd64/cpu.asm	/^WriteCR4 PROC$/;"	l
WriteCR8	source/drivers/linux/amd64/cpu.asm	/^WriteCR8:$/;"	l
WriteCR8	source/drivers/win7/amd64/cpu.asm	/^WriteCR8 PROC$/;"	l
WriteHighCMOSByte	source/drivers/linux/amd64/cpu.asm	/^WriteHighCMOSByte:$/;"	l
WriteHighCMOSByte	source/drivers/linux/i386/cpu.asm	/^ WriteHighCMOSByte:$/;"	l
WriteHighCMOSByte	source/drivers/win7/amd64/cpu.asm	/^WriteHighCMOSByte PROC$/;"	l
WriteHighCMOSByte	tools/edk2/PythonEFI/cpu.asm	/^WriteHighCMOSByte PROC$/;"	l
WriteHighCMOSByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^WriteHighCMOSByte PROC$/;"	l
WriteHighCMOSByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WriteHighCMOSByte:$/;"	l
WriteIOPort	source/drivers/linux/chipsec_km.c	/^WriteIOPort($/;"	f
WriteIOPort	source/drivers/win7/driver.c	/^WriteIOPort($/;"	f
WriteLowCMOSByte	source/drivers/linux/amd64/cpu.asm	/^WriteLowCMOSByte:$/;"	l
WriteLowCMOSByte	source/drivers/linux/i386/cpu.asm	/^ WriteLowCMOSByte:$/;"	l
WriteLowCMOSByte	source/drivers/win7/amd64/cpu.asm	/^WriteLowCMOSByte PROC$/;"	l
WriteLowCMOSByte	tools/edk2/PythonEFI/cpu.asm	/^WriteLowCMOSByte PROC$/;"	l
WriteLowCMOSByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^WriteLowCMOSByte PROC$/;"	l
WriteLowCMOSByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WriteLowCMOSByte:$/;"	l
WritePCIByte	source/drivers/linux/amd64/cpu.asm	/^WritePCIByte:$/;"	l
WritePCIByte	source/drivers/linux/i386/cpu.asm	/^ WritePCIByte:$/;"	l
WritePCIByte	source/drivers/win7/amd64/cpu.asm	/^WritePCIByte PROC$/;"	l
WritePCIByte	tools/edk2/PythonEFI/cpu.asm	/^WritePCIByte PROC$/;"	l
WritePCIByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePCIByte PROC$/;"	l
WritePCIByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePCIByte:$/;"	l
WritePCICfg	source/drivers/linux/chipsec_km.c	/^WritePCICfg($/;"	f
WritePCICfg	source/drivers/win7/driver.c	/^WritePCICfg($/;"	f
WritePCICfg	tools/edk2/PythonEFI/edk2module.c	/^void WritePCICfg($/;"	f
WritePCIDword	source/drivers/linux/amd64/cpu.asm	/^WritePCIDword: $/;"	l
WritePCIDword	source/drivers/linux/i386/cpu.asm	/^ WritePCIDword:$/;"	l
WritePCIDword	source/drivers/win7/amd64/cpu.asm	/^WritePCIDword PROC$/;"	l
WritePCIDword	tools/edk2/PythonEFI/cpu.asm	/^WritePCIDword PROC$/;"	l
WritePCIDword	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePCIDword PROC$/;"	l
WritePCIDword	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePCIDword:$/;"	l
WritePCIWord	source/drivers/linux/amd64/cpu.asm	/^WritePCIWord:$/;"	l
WritePCIWord	source/drivers/linux/i386/cpu.asm	/^ WritePCIWord:$/;"	l
WritePCIWord	source/drivers/win7/amd64/cpu.asm	/^WritePCIWord PROC$/;"	l
WritePCIWord	tools/edk2/PythonEFI/cpu.asm	/^WritePCIWord PROC$/;"	l
WritePCIWord	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePCIWord PROC$/;"	l
WritePCIWord	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePCIWord:$/;"	l
WritePortByte	source/drivers/linux/amd64/cpu.asm	/^WritePortByte:$/;"	l
WritePortByte	source/drivers/linux/i386/cpu.asm	/^ WritePortByte:$/;"	l
WritePortByte	source/drivers/win7/amd64/cpu.asm	/^WritePortByte PROC$/;"	l
WritePortByte	tools/edk2/PythonEFI/cpu.asm	/^WritePortByte PROC$/;"	l
WritePortByte	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePortByte PROC$/;"	l
WritePortByte	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePortByte:$/;"	l
WritePortDword	source/drivers/linux/amd64/cpu.asm	/^WritePortDword: $/;"	l
WritePortDword	source/drivers/linux/i386/cpu.asm	/^ WritePortDword:$/;"	l
WritePortDword	source/drivers/win7/amd64/cpu.asm	/^WritePortDword PROC$/;"	l
WritePortDword	tools/edk2/PythonEFI/cpu.asm	/^WritePortDword PROC$/;"	l
WritePortDword	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePortDword PROC$/;"	l
WritePortDword	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePortDword:$/;"	l
WritePortWord	source/drivers/linux/amd64/cpu.asm	/^WritePortWord: $/;"	l
WritePortWord	source/drivers/linux/i386/cpu.asm	/^ WritePortWord:$/;"	l
WritePortWord	source/drivers/win7/amd64/cpu.asm	/^WritePortWord PROC$/;"	l
WritePortWord	tools/edk2/PythonEFI/cpu.asm	/^WritePortWord PROC$/;"	l
WritePortWord	tools/edk2/PythonEFI/cpu_ia32.asm	/^WritePortWord PROC$/;"	l
WritePortWord	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^WritePortWord:$/;"	l
XSDT	source/tool/chipsec/hal/acpi_tables.py	/^class XSDT():$/;"	c
X_OK	tools/edk2/PythonEFI/edk2module.c	668;"	d	file:
YELLOW	source/tool/chipsec/logger.py	/^YELLOW    =3$/;"	v
ZIP_HELPER_RE	source/tool/chipsec/helper/oshelper.py	/^ZIP_HELPER_RE = re.compile("^chipsec\\\/helper\\\/\\w+\\\/\\w+\\.pyc$", re.IGNORECASE)$/;"	v
_DEBUG_H	source/drivers/linux/debug.h	7;"	d
_DEFAULT_GPRS	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_DEFAULT_GPRS     = {'rax' : _FILL_VALUE_QWORD, 'rbx' : _FILL_VALUE_QWORD, 'rcx' : _FILL_VALUE_QWORD, 'rdx' : _FILL_VALUE_QWORD, 'rsi' : _FILL_VALUE_QWORD, 'rdi' : _FILL_VALUE_QWORD}$/;"	v
_DESCRIPTOR_TABLE_RECORD	source/drivers/linux/include/chipsec.h	/^typedef struct _DESCRIPTOR_TABLE_RECORD {$/;"	s
_DESCRIPTOR_TABLE_RECORD	source/drivers/win7/include/cpu.h	/^typedef struct _DESCRIPTOR_TABLE_RECORD {$/;"	s
_FILL_VALUE_BYTE	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_FILL_VALUE_BYTE  = 0x5A$/;"	v
_FILL_VALUE_QWORD	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_FILL_VALUE_QWORD = 0x5A5A5A5A5A5A5A5A$/;"	v
_GNU_SOURCE	source/drivers/linux/chipsec_km.c	36;"	d	file:
_GNU_SOURCE	source/tool/chipsec/helper/linux/cores.c	1;"	d	file:
_IOCTL_BASE	source/tool/chipsec/helper/linux/helper.py	/^_IOCTL_BASE = 0$/;"	v
_MAX_ALLOC_PA	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_MAX_ALLOC_PA     = 0xFFFFFFFF$/;"	v
_MEM_FILL_SIZE	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_MEM_FILL_SIZE    = 0x500$/;"	v
_MEM_FILL_VALUE	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_MEM_FILL_VALUE   = chr(0x11)$/;"	v
_MODULE_NAME	source/tool/chipsec/modules/common/secureboot/variables.py	/^_MODULE_NAME = 'variables'$/;"	v
_MODULE_NAME	source/tool/chipsec/modules/module_template.py	/^_MODULE_NAME = 'module_template'$/;"	v
_MODULE_NAME	source/tool/chipsec/modules/remap.py	/^_MODULE_NAME = 'remap'$/;"	v
_MODULE_NAME	source/tool/chipsec/modules/smm_dma.py	/^_MODULE_NAME = 'smm_dma'$/;"	v
_Platform	source/tool/chipsec_util.py	/^_Platform = None$/;"	v
_PyPclose	tools/edk2/PythonEFI/edk2module.c	/^static int _PyPclose(FILE *file)$/;"	f	file:
_PyPopen	tools/edk2/PythonEFI/edk2module.c	/^_PyPopen(char *cmdstring, int mode, int n)$/;"	f	file:
_PyPopen	tools/edk2/PythonEFI/edk2module.c	/^_PyPopen(char *cmdstring, int mode, int n, int bufsize)$/;"	f	file:
_PyPopenCreateProcess	tools/edk2/PythonEFI/edk2module.c	/^_PyPopenCreateProcess(char *cmdstring,$/;"	f	file:
_PyPopenProcs	tools/edk2/PythonEFI/edk2module.c	/^static PyObject *_PyPopenProcs = NULL;$/;"	v	file:
_PyVerify_fd_dup2	tools/edk2/PythonEFI/edk2module.c	197;"	d	file:
_REMAP_ADDR_MASK	source/tool/chipsec/modules/remap.py	/^_REMAP_ADDR_MASK = 0x7FFFF00000$/;"	v
_SMI_CODE_DATA	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_SMI_CODE_DATA    = 0x0$/;"	v
_SVID3	tools/edk2/PythonEFI/edk2module.c	5584;"	d	file:
_TEXT	source/drivers/win7/i386/cpu.asm	/^_TEXT    SEGMENT DWORD PUBLIC 'CODE'$/;"	l
_TOLUD_MASK	source/tool/chipsec/modules/remap.py	/^_TOLUD_MASK      = 0xFFFFF000$/;"	v
__all__	source/tool/chipsec/helper/efi/__init__.py	/^    __all__ = [ "efihelper" ]$/;"	v
__all__	source/tool/chipsec/helper/efi/__init__.py	/^    __all__ = [ ]$/;"	v
__all__	source/tool/chipsec/helper/linux/__init__.py	/^    __all__ = [ "helper" ]$/;"	v
__all__	source/tool/chipsec/helper/linux/__init__.py	/^    __all__ = [ ]$/;"	v
__all__	source/tool/chipsec/helper/win/__init__.py	/^    __all__ = [ "win32helper" ]$/;"	v
__all__	source/tool/chipsec/helper/win/__init__.py	/^    __all__ = []$/;"	v
__cpuid__	source/drivers/linux/amd64/cpu.asm	/^__cpuid__:$/;"	l
__cpuid__	source/drivers/linux/i386/cpu.asm	/^__cpuid__:$/;"	l
__del__	source/tool/chipsec/helper/efi/efihelper.py	/^    def __del__(self):$/;"	m	class:EfiHelper	file:
__del__	source/tool/chipsec/helper/linux/helper.py	/^    def __del__(self):$/;"	m	class:LinuxHelper	file:
__del__	source/tool/chipsec/helper/oshelper.py	/^    def __del__(self):$/;"	m	class:OsHelper	file:
__del__	source/tool/chipsec/helper/win/win32helper.py	/^    def __del__(self):$/;"	m	class:Win32Helper	file:
__del__	source/tool/chipsec/logger.py	/^    def __del__(self):$/;"	m	class:Logger	file:
__init	source/tool/chipsec/hal/acpi_tables.py	/^    def __init(self, table_content):$/;"	m	class:TABLE_NULL	file:
__init__	source/tool/chipsec/cfg/common.py	/^    def __init__(self):$/;"	m	class:Cfg
__init__	source/tool/chipsec/chipset.py	/^    def __init__(self, helper=None):$/;"	m	class:Chipset
__init__	source/tool/chipsec/hal/acpi.py	/^    def __init__( self, cs ):$/;"	m	class:ACPI
__init__	source/tool/chipsec/hal/acpi_tables.py	/^    def __init__( self, table_content ):$/;"	m	class:RSDT
__init__	source/tool/chipsec/hal/acpi_tables.py	/^    def __init__( self, table_content ):$/;"	m	class:XSDT
__init__	source/tool/chipsec/hal/acpi_tables.py	/^    def __init__(self , table_content):$/;"	m	class:APIC
__init__	source/tool/chipsec/hal/acpi_tables.py	/^    def __init__(self, table_content):$/;"	m	class:RSDP
__init__	source/tool/chipsec/hal/acpi_tables.py	/^    def __init__(self,table_content):$/;"	m	class:DMAR
__init__	source/tool/chipsec/hal/cpuid.py	/^    def __init__( self, cs ):$/;"	m	class:CpuID
__init__	source/tool/chipsec/hal/cr.py	/^    def __init__( self, cs ):$/;"	m	class:CrRegs
__init__	source/tool/chipsec/hal/hal_base.py	/^    def __init__(self):$/;"	m	class:HALBase
__init__	source/tool/chipsec/hal/interrupts.py	/^    def __init__( self, cs ):$/;"	m	class:Interrupts
__init__	source/tool/chipsec/hal/io.py	/^    def __init__( self, cs ):$/;"	m	class:PortIO
__init__	source/tool/chipsec/hal/iobar.py	/^    def __init__( self, cs ):$/;"	m	class:iobar
__init__	source/tool/chipsec/hal/msr.py	/^    def __init__( self, cs ):$/;"	m	class:Msr
__init__	source/tool/chipsec/hal/pci.py	/^    def __init__( self, cs ):$/;"	m	class:Pci
__init__	source/tool/chipsec/hal/physmem.py	/^    def __init__( self, cs ):$/;"	m	class:Memory
__init__	source/tool/chipsec/hal/smbus.py	/^    def __init__( self, cs ):$/;"	m	class:SMBus
__init__	source/tool/chipsec/hal/spd.py	/^    def __init__( self, smbus ):$/;"	m	class:SPD
__init__	source/tool/chipsec/hal/spi.py	/^    def __init__( self, cs ):$/;"	m	class:SPI
__init__	source/tool/chipsec/hal/ucode.py	/^    def __init__( self, cs ):$/;"	m	class:Ucode
__init__	source/tool/chipsec/hal/uefi.py	/^    def __init__( self, cs ):$/;"	m	class:UEFI
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__( self ):$/;"	m	class:EFI_CONFIGURATION_TABLE
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__( self, script_type, index, offset_in_script, length, data=None ):$/;"	m	class:S3BOOTSCRIPT_ENTRY
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size):$/;"	m	class:op_terminate
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size):$/;"	m	class:op_unknown
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size, duration):$/;"	m	class:op_stall
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size, entrypoint):$/;"	m	class:op_dispatch
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size, slave_address, command, operation, peccheck):$/;"	m	class:op_smbus_execute
__init__	source/tool/chipsec/hal/uefi_common.py	/^    def __init__(self, opcode, size, width, address, count, buffer, value=None, mask=None):$/;"	m	class:op_io_pci_mem
__init__	source/tool/chipsec/helper/efi/efihelper.py	/^    def __init__(self):$/;"	m	class:EfiHelper
__init__	source/tool/chipsec/helper/linux/helper.py	/^    def __init__(self):$/;"	m	class:LinuxHelper
__init__	source/tool/chipsec/helper/oshelper.py	/^    def __init__(self):$/;"	m	class:OsHelper
__init__	source/tool/chipsec/helper/oshelper.py	/^    def __init__(self,msg,errorcode):$/;"	m	class:OsHelperError
__init__	source/tool/chipsec/helper/win/win32helper.py	/^    def __init__(self):$/;"	m	class:Win32Helper
__init__	source/tool/chipsec/logger.py	/^    def __init__( self ):$/;"	m	class:Logger
__init__	source/tool/chipsec/module.py	/^    def __init__(self,name):$/;"	m	class:Module
__init__	source/tool/chipsec/module_common.py	/^    def __init__(self):$/;"	m	class:BaseModule
__init__	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^    def __init__(self):$/;"	m	class:bios_kbrd_buffer
__init__	source/tool/chipsec/modules/common/bios_smi.py	/^    def __init__(self):$/;"	m	class:bios_smi
__init__	source/tool/chipsec/modules/common/bios_ts.py	/^    def __init__(self):$/;"	m	class:bios_ts
__init__	source/tool/chipsec/modules/common/bios_wp.py	/^    def __init__(self):$/;"	m	class:bios_wp
__init__	source/tool/chipsec/modules/common/secureboot/variables.py	/^    def __init__(self):$/;"	m	class:variables
__init__	source/tool/chipsec/modules/common/smm.py	/^    def __init__(self):$/;"	m	class:smm
__init__	source/tool/chipsec/modules/common/smrr.py	/^    def __init__(self):$/;"	m	class:smrr
__init__	source/tool/chipsec/modules/common/spi_desc.py	/^    def __init__(self):$/;"	m	class:spi_desc
__init__	source/tool/chipsec/modules/common/spi_lock.py	/^    def __init__(self):$/;"	m	class:spi_lock
__init__	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def __init__(self):$/;"	m	class:access_uefispec
__init__	source/tool/chipsec/modules/remap.py	/^    def __init__(self):$/;"	m	class:remap
__init__	source/tool/chipsec/modules/smm_dma.py	/^    def __init__(self):$/;"	m	class:smm_dma
__init__	source/tool/chipsec/modules/tools/secureboot/te.py	/^    def __init__(self):$/;"	m	class:te
__init__	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def __init__(self):$/;"	m	class:smi_desc
__init__	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def __init__(self):$/;"	m	class:smm_ptr
__init__	source/tool/chipsec/xmlout.py	/^    def __init__(self):$/;"	m	class:xmlAux
__init__	source/tool/chipsec/xmlout.py	/^    def __init__(self, name, classname, pTime=None, stdout=None, stderr=None, tcType=None, message=None, output=None):$/;"	m	class:xmlTestCase
__init__	source/tool/chipsec/xmlout.py	/^    def __init__(self, name, test_cases, hostname, ts_id, package, timestamp, properties):$/;"	m	class:TestSuite
__init__	source/tool/chipsec/xmlout.py	/^    def __init__(self, name, test_cases=None, hostname=None, ts_id=None, package=None, timestamp=None, properties=None):$/;"	m	class:xmlTestSuite
__init__	source/tool/chipsec/xmlout.py	/^    def __init__(self, name, value):$/;"	m	class:ts_property
__init__	source/tool/chipsec_main.py	/^    def __init__(self):$/;"	m	class:ExitCode
__init__	source/tool/chipsec_main.py	/^    def __init__(self, argv):$/;"	m	class:ChipsecMain
__init__	source/tool/chipsec_util.py	/^    def __init__(self):$/;"	m	class:ChipsecUtil
__mem_block	source/tool/chipsec/helper/linux/helper.py	/^    def __mem_block(self, sz, newval = None):$/;"	m	class:LinuxHelper	file:
__slots__	source/tool/chipsec/cfg/common.py	/^        __slots__ = ()$/;"	v	class:Cfg.LPC_BC_REG
__slots__	source/tool/chipsec/cfg/common.py	/^        __slots__ = ()$/;"	v	class:Cfg.SMB_HCFG_REG
__slots__	source/tool/chipsec/hal/acpi.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_HEADER
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_GICC_CPU
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_GIC_DISTRIBUTOR
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_GIC_MSI
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_GIC_REDISTRIBUTOR
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_INTERRUPT_SOURSE_OVERRIDE
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_IOAPIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_IOSAPIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_LAPIC_ADDRESS_OVERRIDE
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_LAPIC_NMI
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_Lx2APIC_NMI
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_NMI_SOURCE
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_PLATFORM_INTERRUPT_SOURCES
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_PROCESSOR_LAPIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_PROCESSOR_LSAPIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_APIC_PROCESSOR_Lx2APIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_ANDD
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_ATSR
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_DRHD
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_DeviceScope
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_RHSA
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:ACPI_TABLE_DMAR_RMRR
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:APIC
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:DMAR
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:RSDP
__slots__	source/tool/chipsec/hal/acpi_tables.py	/^    __slots__ = ()$/;"	v	class:TABLE_NULL
__slots__	source/tool/chipsec/hal/spd.py	/^    __slots__ = ()$/;"	v	class:SPD_DDR
__slots__	source/tool/chipsec/hal/spd.py	/^    __slots__ = ()$/;"	v	class:SPD_DDR2
__slots__	source/tool/chipsec/hal/spd.py	/^    __slots__ = ()$/;"	v	class:SPD_DDR3
__slots__	source/tool/chipsec/hal/spd.py	/^    __slots__ = ()$/;"	v	class:SPD_DDR4
__slots__	source/tool/chipsec/hal/ucode.py	/^    __slots__ = ()$/;"	v	class:UcodeUpdateHeader
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_BOOT_SERVICES_TABLE
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_DXE_SERVICES_TABLE
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_RUNTIME_SERVICES_TABLE
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_SYSTEM_TABLE
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_TABLE_HEADER
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:EFI_VENDOR_TABLE
__slots__	source/tool/chipsec/hal/uefi_common.py	/^    __slots__ = ()$/;"	v	class:VARIABLE_STORE_HEADER
__slots__	source/tool/chipsec/hal/uefi_platform.py	/^    __slots__ = ()$/;"	v	class:EFI_HDR_NVAR1
__slots__	source/tool/chipsec/hal/uefi_platform.py	/^    __slots__ = ()$/;"	v	class:EFI_HDR_VSS
__slots__	source/tool/chipsec/hal/uefi_platform.py	/^    __slots__ = ()$/;"	v	class:EFI_HDR_VSS_NEW
__slots__	source/tool/chipsec/hal/uefi_platform.py	/^    __slots__ = ()$/;"	v	class:UEFI_VARIABLE_HEADER
__slots__	source/tool/chipsec/hal/uefi_platform.py	/^    __slots__ = ()$/;"	v	class:VARIABLE_STORE_HEADER_VSS
__slots__	source/tool/chipsec/helper/win/win32helper.py	/^    __slots__ = ()$/;"	v	class:EFI_HDR_WIN
__str__	source/tool/chipsec/cfg/common.py	/^        def __str__(self):$/;"	m	class:Cfg.LPC_BC_REG	file:
__str__	source/tool/chipsec/cfg/common.py	/^        def __str__(self):$/;"	m	class:Cfg.SMB_HCFG_REG	file:
__str__	source/tool/chipsec/hal/acpi.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_HEADER	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_GICC_CPU	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_GIC_DISTRIBUTOR	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_GIC_MSI	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_GIC_REDISTRIBUTOR	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_INTERRUPT_SOURSE_OVERRIDE	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_IOAPIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_IOSAPIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_LAPIC_ADDRESS_OVERRIDE	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_LAPIC_NMI	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_Lx2APIC_NMI	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_NMI_SOURCE	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_PLATFORM_INTERRUPT_SOURCES	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_PROCESSOR_LAPIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_PROCESSOR_LSAPIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_APIC_PROCESSOR_Lx2APIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_ANDD	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_ATSR	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_DRHD	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_DeviceScope	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_RHSA	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:ACPI_TABLE_DMAR_RMRR	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:APIC	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:DMAR	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:RSDP	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:RSDT	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:TABLE_NULL	file:
__str__	source/tool/chipsec/hal/acpi_tables.py	/^    def __str__(self):$/;"	m	class:XSDT	file:
__str__	source/tool/chipsec/hal/spd.py	/^    def __str__(self):$/;"	m	class:SPD_DDR	file:
__str__	source/tool/chipsec/hal/spd.py	/^    def __str__(self):$/;"	m	class:SPD_DDR2	file:
__str__	source/tool/chipsec/hal/spd.py	/^    def __str__(self):$/;"	m	class:SPD_DDR3	file:
__str__	source/tool/chipsec/hal/spd.py	/^    def __str__(self):$/;"	m	class:SPD_DDR4	file:
__str__	source/tool/chipsec/hal/ucode.py	/^    def __str__(self):$/;"	m	class:UcodeUpdateHeader	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_BOOT_SERVICES_TABLE	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_CONFIGURATION_TABLE	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_DXE_SERVICES_TABLE	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_RUNTIME_SERVICES_TABLE	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_SYSTEM_TABLE	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:EFI_TABLE_HEADER	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:S3BOOTSCRIPT_ENTRY	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:VARIABLE_STORE_HEADER	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_dispatch	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_io_pci_mem	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_smbus_execute	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_stall	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_terminate	file:
__str__	source/tool/chipsec/hal/uefi_common.py	/^    def __str__(self):$/;"	m	class:op_unknown	file:
__str__	source/tool/chipsec/hal/uefi_platform.py	/^    def __str__(self):$/;"	m	class:EFI_HDR_NVAR1	file:
__str__	source/tool/chipsec/hal/uefi_platform.py	/^    def __str__(self):$/;"	m	class:EFI_HDR_VSS	file:
__str__	source/tool/chipsec/hal/uefi_platform.py	/^    def __str__(self):$/;"	m	class:EFI_HDR_VSS_NEW	file:
__str__	source/tool/chipsec/hal/uefi_platform.py	/^    def __str__(self):$/;"	m	class:UEFI_VARIABLE_HEADER	file:
__str__	source/tool/chipsec/hal/uefi_platform.py	/^    def __str__(self):$/;"	m	class:VARIABLE_STORE_HEADER_VSS	file:
__str__	source/tool/chipsec/helper/win/win32helper.py	/^    def __str__(self):$/;"	m	class:EFI_HDR_WIN	file:
__str__	source/tool/chipsec/module.py	/^    def __str__(self):$/;"	m	class:Module	file:
__str__	source/tool/chipsec_main.py	/^    def __str__(self):$/;"	m	class:ExitCode	file:
__swsmi__	source/drivers/linux/amd64/cpu.asm	/^__swsmi__:$/;"	l
__swsmi__	source/drivers/linux/i386/cpu.asm	/^__swsmi__:$/;"	l
__version__	source/tool/chipsec/cfg/common.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/chipset.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/file.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/acpi.py	/^__version__ = '0.1'$/;"	v
__version__	source/tool/chipsec/hal/acpi_tables.py	/^__version__ = '0.1'$/;"	v
__version__	source/tool/chipsec/hal/cmos.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/cpuid.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/cr.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/interrupts.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/io.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/iobar.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/mmio.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/msr.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/pci.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/physmem.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/spi.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/spi_descriptor.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/spi_uefi.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/ucode.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/uefi.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/uefi_common.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/hal/uefi_platform.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/helper/efi/efihelper.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/helper/linux/helper.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/helper/win/win32helper.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/acpi_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/chipset_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/cmos_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/cpuid_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/cr_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/decode_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/desc_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/interrupts_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/io_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/mem_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/mmcfg_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/mmio_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/msr_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/pci_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/smbus_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/spd_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/spi_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/spidesc_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/ucode_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec/utilcmd/uefi_cmd.py	/^__version__ = '1.0'$/;"	v
__version__	source/tool/chipsec_main.py	/^__version__ = '1.2.1'$/;"	v
__version__	source/tool/chipsec_util.py	/^__version__ = '1.2.1'$/;"	v
_check_testCase_exist	source/tool/chipsec/xmlout.py	/^    def _check_testCase_exist(self):$/;"	m	class:xmlAux
_chipset	source/tool/chipsec/chipset.py	/^_chipset = None$/;"	v
_cs	source/tool/chipsec_util.py	/^_cs = cs()$/;"	v
_dump_buffer	source/drivers/win7/driver.c	/^void _dump_buffer( unsigned char * b, unsigned int len )$/;"	f
_eflags	source/drivers/linux/i386/cpu.asm	/^ _eflags:$/;"	l
_end_test	source/tool/chipsec/xmlout.py	/^    def _end_test(self):$/;"	m	class:xmlAux
_fields_	source/tool/chipsec/helper/win/win32helper.py	/^    _fields_ = [("BUS",  c_ushort, 16),  # Bus$/;"	v	class:PCI_BDF
_getEFIvariables_VSS	source/tool/chipsec/hal/uefi_platform.py	/^def _getEFIvariables_VSS( nvram_buf, _fwtype ):$/;"	f
_get_DMAR_structure_ANDD	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_DMAR_structure_ANDD(self, structure ):  $/;"	f
_get_DMAR_structure_ATSR	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_DMAR_structure_ATSR(self, structure ):  $/;"	f
_get_DMAR_structure_DRHD	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_DMAR_structure_DRHD(self, structure ):  $/;"	f
_get_DMAR_structure_RHSA	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_DMAR_structure_RHSA(self, structure ):  $/;"	f
_get_DMAR_structure_RMRR	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_DMAR_structure_RMRR(self, structure ):  $/;"	f
_get_structure_DMAR	source/tool/chipsec/hal/acpi_tables.py	/^    def _get_structure_DMAR(self, _type, DataStructure ):$/;"	f
_helper	source/tool/chipsec/helper/oshelper.py	/^_helper = None$/;"	v
_importlib	source/tool/chipsec/helper/oshelper.py	/^    _importlib = False$/;"	v
_importlib	source/tool/chipsec/helper/oshelper.py	/^_importlib = True$/;"	v
_importlib	source/tool/chipsec/module.py	/^    _importlib = False$/;"	v
_importlib	source/tool/chipsec/module.py	/^_importlib = True$/;"	v
_importlib	source/tool/chipsec_main.py	/^    _importlib = False$/;"	v
_importlib	source/tool/chipsec_main.py	/^_importlib = True$/;"	v
_ioctl	source/tool/chipsec/helper/win/win32helper.py	/^    def _ioctl( self, ioctl_code, in_buf, out_length ):$/;"	m	class:Win32Helper
_load_gdt	source/drivers/linux/amd64/cpu.asm	/^_load_gdt: $/;"	l
_load_gdt	source/drivers/win7/amd64/cpu.asm	/^_load_gdt PROC$/;"	l
_load_gdt	tools/edk2/PythonEFI/cpu.asm	/^_load_gdt PROC$/;"	l
_load_gdtr	source/drivers/linux/amd64/cpu.asm	/^_load_gdtr: $/;"	l
_load_gdtr	source/drivers/win7/amd64/cpu.asm	/^_load_gdtr PROC$/;"	l
_load_gdtr	tools/edk2/PythonEFI/cpu.asm	/^_load_gdtr PROC$/;"	l
_load_idtr	source/drivers/linux/amd64/cpu.asm	/^_load_idtr:$/;"	l
_load_idtr	source/drivers/linux/i386/cpu.asm	/^ _load_idtr:$/;"	l
_load_idtr	source/drivers/win7/amd64/cpu.asm	/^_load_idtr PROC$/;"	l
_load_idtr	tools/edk2/PythonEFI/cpu.asm	/^_load_idtr PROC$/;"	l
_load_idtr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_load_idtr PROC$/;"	l
_load_ldtr	source/drivers/linux/amd64/cpu.asm	/^_load_ldtr: $/;"	l
_load_ldtr	source/drivers/win7/amd64/cpu.asm	/^_load_ldtr PROC$/;"	l
_load_ldtr	tools/edk2/PythonEFI/cpu.asm	/^_load_ldtr PROC$/;"	l
_log	source/tool/chipsec/logger.py	/^    def _log(self, text, color, isStatus):$/;"	m	class:Logger
_logger	source/tool/chipsec/logger.py	/^_logger  = Logger()$/;"	v
_parse_table	source/tool/chipsec/hal/acpi.py	/^    def _parse_table( self, name, table_header_blob, table_blob ):$/;"	m	class:ACPI
_parse_table_contents	source/tool/chipsec/hal/acpi.py	/^    def _parse_table_contents( self, signature, contents ):$/;"	m	class:ACPI
_parse_table_header	source/tool/chipsec/hal/acpi.py	/^    def _parse_table_header( self, header ):$/;"	m	class:ACPI
_pth	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^_pth = 'smm_ptr'$/;"	v
_pystat_fromstructstat	tools/edk2/PythonEFI/edk2module.c	/^_pystat_fromstructstat(STRUCT_STAT *st)$/;"	f	file:
_pystatvfs_fromstructstatvfs	tools/edk2/PythonEFI/edk2module.c	/^_pystatvfs_fromstructstatvfs(struct statvfs st) {$/;"	f	file:
_rdmsr	source/drivers/linux/amd64/cpu.asm	/^_rdmsr: $/;"	l
_rdmsr	source/drivers/linux/i386/cpu.asm	/^ _rdmsr:$/;"	l
_rdmsr	source/drivers/win7/amd64/cpu.asm	/^_rdmsr PROC$/;"	l
_rdmsr	tools/edk2/PythonEFI/cpu.asm	/^_rdmsr PROC$/;"	l
_rdmsr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_rdmsr PROC$/;"	l
_rdmsr	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^_rdmsr:$/;"	l
_read_byte	source/tool/chipsec/hal/smbus.py	/^    def _read_byte( self, smbus_io_base, target_address, offset ):$/;"	m	class:SMBus
_read_phys_mem	source/drivers/win7/driver.c	/^NTSTATUS _read_phys_mem( PHYSICAL_ADDRESS pa, unsigned int len, void * pData )$/;"	f
_read_phys_mem	source/tool/chipsec/helper/efi/efihelper.py	/^    def _read_phys_mem( self, phys_address, length ):$/;"	m	class:EfiHelper
_read_port	source/tool/chipsec/hal/io.py	/^    def _read_port(self, io_port, size ):$/;"	m	class:PortIO
_register_fields_str	source/tool/chipsec/chipset.py	/^def _register_fields_str( reg_def, reg_val ):$/;"	f
_rflags	source/drivers/linux/amd64/cpu.asm	/^_rflags:$/;"	l
_rflags	source/drivers/win7/amd64/cpu.asm	/^_rflags PROC$/;"	l
_rflags	tools/edk2/PythonEFI/cpu.asm	/^_rflags PROC$/;"	l
_save_to_log_file	source/tool/chipsec/logger.py	/^    def _save_to_log_file(self, text):$/;"	m	class:Logger
_save_to_status_log_file	source/tool/chipsec/logger.py	/^    def _save_to_status_log_file(self, text):$/;"	m	class:Logger
_send_spi_cycle	source/tool/chipsec/hal/spi.py	/^    def _send_spi_cycle(self, hsfctl_spi_cycle_cmd, dbc, spi_fla ):$/;"	m	class:SPI
_stat_float_times	tools/edk2/PythonEFI/edk2module.c	/^  static int _stat_float_times = 0;$/;"	v	file:
_stat_float_times	tools/edk2/PythonEFI/edk2module.c	/^  static int _stat_float_times = 1;$/;"	v	file:
_store_gdtr	source/drivers/linux/amd64/cpu.asm	/^_store_gdtr: $/;"	l
_store_gdtr	source/drivers/linux/i386/cpu.asm	/^ _store_gdtr:$/;"	l
_store_gdtr	source/drivers/win7/amd64/cpu.asm	/^_store_gdtr PROC$/;"	l
_store_gdtr	tools/edk2/PythonEFI/cpu.asm	/^_store_gdtr PROC$/;"	l
_store_gdtr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_store_gdtr PROC$/;"	l
_store_idtr	source/drivers/linux/amd64/cpu.asm	/^_store_idtr:$/;"	l
_store_idtr	source/drivers/linux/i386/cpu.asm	/^ _store_idtr:$/;"	l
_store_idtr	source/drivers/win7/amd64/cpu.asm	/^_store_idtr PROC$/;"	l
_store_idtr	tools/edk2/PythonEFI/cpu.asm	/^_store_idtr PROC$/;"	l
_store_idtr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_store_idtr PROC$/;"	l
_store_ldtr	source/drivers/linux/amd64/cpu.asm	/^_store_ldtr:$/;"	l
_store_ldtr	source/drivers/linux/i386/cpu.asm	/^ _store_ldtr:$/;"	l
_store_ldtr	source/drivers/win7/amd64/cpu.asm	/^_store_ldtr PROC$/;"	l
_store_ldtr	tools/edk2/PythonEFI/cpu.asm	/^_store_ldtr PROC$/;"	l
_store_ldtr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_store_ldtr PROC$/;"	l
_store_ldtr	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^_store_ldtr:$/;"	l
_swsmi	source/drivers/win7/amd64/cpu.asm	/^_swsmi PROC$/;"	l
_swsmi	tools/edk2/PythonEFI/cpu.asm	/^_swsmi PROC$/;"	l
_swsmi	tools/edk2/PythonEFI/cpu_ia32.asm	/^_swsmi PROC$/;"	l
_swsmi	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^_swsmi:$/;"	l
_uefi	source/tool/chipsec/utilcmd/decode_cmd.py	/^_uefi = uefi.UEFI( chipsec_util._cs )$/;"	v
_uefi	source/tool/chipsec/utilcmd/uefi_cmd.py	/^_uefi = UEFI( chipsec_util._cs )$/;"	v
_wait_SPI_flash_cycle_done	source/tool/chipsec/hal/spi.py	/^    def _wait_SPI_flash_cycle_done(self):$/;"	m	class:SPI
_wait_for_cycle	source/tool/chipsec/hal/smbus.py	/^    def _wait_for_cycle( self, smbus_io_base ):$/;"	m	class:SMBus
_write_byte	source/tool/chipsec/hal/smbus.py	/^    def _write_byte( self, smbus_io_base, target_address, offset, value ):$/;"	m	class:SMBus
_write_log	source/tool/chipsec/logger.py	/^    def _write_log( self, text, filename ):$/;"	m	class:Logger
_write_phys_mem	source/drivers/win7/driver.c	/^NTSTATUS _write_phys_mem( PHYSICAL_ADDRESS pa, unsigned int len, void * pData )$/;"	f
_write_phys_mem	source/tool/chipsec/helper/efi/efihelper.py	/^    def _write_phys_mem( self, phys_address, length, buf ):$/;"	m	class:EfiHelper
_write_port	source/tool/chipsec/hal/io.py	/^    def _write_port(self, io_port, value, size ):$/;"	m	class:PortIO
_wrmsr	source/drivers/linux/amd64/cpu.asm	/^_wrmsr: $/;"	l
_wrmsr	source/drivers/linux/i386/cpu.asm	/^ _wrmsr:$/;"	l
_wrmsr	source/drivers/win7/amd64/cpu.asm	/^_wrmsr PROC$/;"	l
_wrmsr	tools/edk2/PythonEFI/cpu.asm	/^_wrmsr PROC$/;"	l
_wrmsr	tools/edk2/PythonEFI/cpu_ia32.asm	/^_wrmsr PROC$/;"	l
_wrmsr	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^_wrmsr:$/;"	l
a	source/drivers/linux/chipsec_km.c	/^   unsigned int a;   \/\/ rax - 0x00; eax - 0x0$/;"	m	struct:tagCONTEXT	file:
a1	source/drivers/linux/chipsec_km.c	/^unsigned long a1=0;$/;"	v
a2	source/drivers/linux/chipsec_km.c	/^unsigned long a2=0;$/;"	v
a3	source/drivers/linux/chipsec_km.c	/^unsigned long a3=0;$/;"	v
access_uefispec	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^class access_uefispec(BaseModule):$/;"	c
acpi	source/tool/chipsec/utilcmd/acpi_cmd.py	/^def acpi(argv):$/;"	f
add_error_info	source/tool/chipsec/xmlout.py	/^    def add_error_info(self, message=None, output=None):$/;"	m	class:xmlTestCase
add_failure_info	source/tool/chipsec/xmlout.py	/^    def add_failure_info(self, message=None, output=None):$/;"	m	class:xmlTestCase
add_skipped_info	source/tool/chipsec/xmlout.py	/^    def add_skipped_info(self, message=None, output=None):$/;"	m	class:xmlTestCase
add_stderr_info	source/tool/chipsec/xmlout.py	/^    def add_stderr_info(self, text):$/;"	m	class:xmlTestCase
add_stdout_info	source/tool/chipsec/xmlout.py	/^    def add_stdout_info(self, text):$/;"	m	class:xmlTestCase
add_test_suite_property	source/tool/chipsec/xmlout.py	/^    def add_test_suite_property(self, name, value):$/;"	m	class:xmlAux
align	source/tool/chipsec/hal/uefi_common.py	/^def align(of, size):$/;"	f
all_ins	tools/edk2/PythonEFI/edk2module.c	/^all_ins(PyObject *d)$/;"	f	file:
alloc_phys_mem	source/tool/chipsec/helper/efi/efihelper.py	/^    def alloc_phys_mem( length, max_pa ):$/;"	m	class:EfiHelper
alloc_phys_mem	source/tool/chipsec/helper/linux/helper.py	/^    def alloc_phys_mem(self, num_bytes, max_addr):$/;"	m	class:LinuxHelper
alloc_phys_mem	source/tool/chipsec/helper/oshelper.py	/^    def alloc_phys_mem( self, length, max_pa_hi, max_pa_lo ):$/;"	m	class:OsHelper
alloc_phys_mem	source/tool/chipsec/helper/win/win32helper.py	/^    def alloc_phys_mem( self, length, max_pa ):$/;"	m	class:Win32Helper
alloc_physical_mem	source/tool/chipsec/hal/physmem.py	/^    def alloc_physical_mem( self, length, max_phys_address=0xFFFFFFFFFFFFFFFF ):$/;"	m	class:Memory
alloc_physical_mem	source/tool/chipsec/helper/oshelper.py	/^    def alloc_physical_mem( self, length, max_phys_address ):$/;"	m	class:OsHelper
append_stdout	source/tool/chipsec/xmlout.py	/^    def append_stdout(self,msg):$/;"	m	class:xmlAux
argv	source/tool/chipsec_util.py	/^    argv = sys.argv$/;"	v
async_system	tools/edk2/PythonEFI/edk2module.c	/^async_system(const char *command)$/;"	f	file:
attributes	source/tool/chipsec/helper/win/win32helper.py	/^attributes = {$/;"	v
author	source/tool/setup.py	/^        author          = 'chipsec developers',$/;"	v
author_email	source/tool/setup.py	/^        author_email    = '',$/;"	v
b	source/drivers/linux/chipsec_km.c	/^   unsigned int b;   \/\/ rbx - 0x08; ebx - 0x4$/;"	m	struct:tagCONTEXT	file:
base	source/drivers/linux/include/chipsec.h	/^  physaddr_t base;$/;"	m	struct:_DESCRIPTOR_TABLE_RECORD
base	source/drivers/win7/include/cpu.h	/^  ULONG_PTR base;$/;"	m	struct:_DESCRIPTOR_TABLE_RECORD
bios_kbrd_buffer	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^class bios_kbrd_buffer(BaseModule):$/;"	c
bios_smi	source/tool/chipsec/modules/common/bios_smi.py	/^class bios_smi(BaseModule):$/;"	c
bios_ts	source/tool/chipsec/modules/common/bios_ts.py	/^class bios_ts(chipsec.module_common.BaseModule):$/;"	c
bios_wp	source/tool/chipsec/modules/common/bios_wp.py	/^class bios_wp(BaseModule):$/;"	c
bit_set	source/tool/chipsec/hal/uefi_common.py	/^def bit_set(value, mask, polarity = False):$/;"	f
build_dir	source/tool/setup.py	/^build_dir = os.path.join(tool_dir, "build")$/;"	v
build_xml	source/tool/chipsec/xmlout.py	/^    def build_xml(self):$/;"	m	class:TestSuite
c	source/drivers/linux/chipsec_km.c	/^   unsigned int c;     \/\/ rcx - 0x00;$/;"	m	struct:tagSMI_CONTEXT	file:
c	source/drivers/linux/chipsec_km.c	/^   unsigned int c;   \/\/ rcx - 0x10; ecx - 0x8$/;"	m	struct:tagCONTEXT	file:
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadCR0$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadCR2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadCR3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadCR4$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPCIByte, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPCIDword, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPCIWord, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPortByte, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPortDword, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _ReadPortWord, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _SendAPMSMI, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteCR0, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteCR2, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteCR3, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteCR4, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteHighCMOSByte, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WriteLowCMOSByte, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePCIByte, 3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePCIDword, 3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePCIWord, 3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePortByte, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePortDword, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _WritePortWord, 2$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __load_idtr, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __rdmsr, 3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __store_gdtr, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __store_idtr, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __store_ldtr, 1$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __swsmi, 7$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc __wrmsr, 3$/;"	l
cPublicProc	source/drivers/win7/i386/cpu.asm	/^cPublicProc _eflags$/;"	l
can_modify	source/tool/chipsec/modules/common/secureboot/variables.py	/^    def can_modify( self, name, guid, data, attrs ):$/;"	m	class:variables
can_modify	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def can_modify(self, name, guid, data):$/;"	m	class:access_uefispec
check_BIOS_keyboard_buffer	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^    def check_BIOS_keyboard_buffer(self):$/;"	m	class:bios_kbrd_buffer
check_BIOS_write_protection	source/tool/chipsec/modules/common/bios_wp.py	/^    def check_BIOS_write_protection(self):$/;"	m	class:bios_wp
check_SMI_locks	source/tool/chipsec/modules/common/bios_smi.py	/^    def check_SMI_locks(self):$/;"	m	class:bios_smi
check_SMRAMC	source/tool/chipsec/modules/common/smm.py	/^    def check_SMRAMC(self):$/;"	m	class:smm
check_SMRR	source/tool/chipsec/modules/common/smrr.py	/^    def check_SMRR(self, do_modify):$/;"	m	class:smrr
check_SMRR_supported	source/tool/chipsec/modules/common/smrr.py	/^    def check_SMRR_supported(self):$/;"	m	class:smrr
check_SPI_protected_ranges	source/tool/chipsec/modules/common/bios_wp.py	/^    def check_SPI_protected_ranges(self):$/;"	m	class:bios_wp
check_driver_handle	source/tool/chipsec/helper/win/win32helper.py	/^    def check_driver_handle( self ):$/;"	m	class:Win32Helper
check_flash_access_permissions	source/tool/chipsec/modules/common/spi_desc.py	/^    def check_flash_access_permissions(self):$/;"	m	class:spi_desc
check_memory	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def check_memory( self, _addr, _smi_desc, fn, restore_contents=False ):$/;"	m	class:smm_ptr
check_remap_config	source/tool/chipsec/modules/remap.py	/^    def check_remap_config(self):$/;"	m	class:remap
check_secureboot_variable_attributes	source/tool/chipsec/modules/common/secureboot/variables.py	/^    def check_secureboot_variable_attributes( self, do_modify ):$/;"	m	class:variables
check_something	source/tool/chipsec/modules/module_template.py	/^    def check_something( self ):$/;"	m	class:module_template
check_spi_lock	source/tool/chipsec/modules/common/spi_lock.py	/^    def check_spi_lock(self):$/;"	m	class:spi_lock
check_top_swap_mode	source/tool/chipsec/modules/common/bios_ts.py	/^    def check_top_swap_mode(self):$/;"	m	class:bios_ts
check_tseg_config	source/tool/chipsec/modules/smm_dma.py	/^    def check_tseg_config(self):$/;"	m	class:smm_dma
check_vars	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def check_vars(self, do_modify):$/;"	m	class:access_uefispec
chipsecMain	source/tool/chipsec_main.py	/^    chipsecMain = ChipsecMain(sys.argv[1:])$/;"	v	class:ChipsecMain
chipsecUtil	source/tool/chipsec_util.py	/^    chipsecUtil = ChipsecUtil()$/;"	v
chipsec_mem_major	source/drivers/linux/chipsec_km.c	/^int chipsec_mem_major = -1;$/;"	v
chipsec_util_help	source/tool/chipsec_util.py	/^    def chipsec_util_help(self, argv):$/;"	m	class:ChipsecUtil
chr_dev_init	source/drivers/linux/chipsec_km.c	/^static int __init chr_dev_init(void)$/;"	f	file:
cleanup_module	source/drivers/linux/chipsec_km.c	/^cleanup_module (void)$/;"	f
clear_loaded_modules	source/tool/chipsec_main.py	/^    def clear_loaded_modules(self):$/;"	m	class:ChipsecMain
close	source/tool/chipsec/helper/linux/helper.py	/^    def close():$/;"	m	class:LinuxHelper
close	source/tool/chipsec/logger.py	/^    def close( self ):$/;"	m	class:Logger
cmos	source/tool/chipsec/utilcmd/cmos_cmd.py	/^def cmos(argv):$/;"	f
cmp_constdefs	tools/edk2/PythonEFI/edk2module.c	/^cmp_constdefs(const void *v1,  const void *v2)$/;"	f	file:
commands	source/tool/chipsec_util.py	/^commands = {}$/;"	v
confirm	source/tool/chipsec/modules/tools/secureboot/te.py	/^def confirm():$/;"	f
constdef	tools/edk2/PythonEFI/edk2module.c	/^struct constdef {$/;"	s	file:
conv_confname	tools/edk2/PythonEFI/edk2module.c	/^conv_confname(PyObject *arg, int *valuep, struct constdef *table,$/;"	f	file:
conv_confstr_confname	tools/edk2/PythonEFI/edk2module.c	/^conv_confstr_confname(PyObject *arg, int *valuep)$/;"	f	file:
conv_path_confname	tools/edk2/PythonEFI/edk2module.c	/^conv_path_confname(PyObject *arg, int *valuep)$/;"	f	file:
conv_sysconf_confname	tools/edk2/PythonEFI/edk2module.c	/^conv_sysconf_confname(PyObject *arg, int *valuep)$/;"	f	file:
convertenviron	tools/edk2/PythonEFI/edk2module.c	/^convertenviron(void)$/;"	f	file:
cpuid	source/tool/chipsec/hal/cpuid.py	/^    def cpuid(self, eax, ecx ):$/;"	m	class:CpuID
cpuid	source/tool/chipsec/helper/efi/efihelper.py	/^    def cpuid(self, eax, ecx):$/;"	m	class:EfiHelper
cpuid	source/tool/chipsec/helper/linux/helper.py	/^    def cpuid(self, eax, ecx):$/;"	m	class:LinuxHelper
cpuid	source/tool/chipsec/helper/oshelper.py	/^    def cpuid( self, eax, ecx ):$/;"	m	class:OsHelper
cpuid	source/tool/chipsec/helper/win/win32helper.py	/^    def cpuid( self, eax, ecx ):$/;"	m	class:Win32Helper
cpuid	source/tool/chipsec/utilcmd/cpuid_cmd.py	/^def cpuid(argv):$/;"	f
create	source/tool/chipsec/helper/efi/efihelper.py	/^    def create( self ):$/;"	m	class:EfiHelper
create	source/tool/chipsec/helper/linux/helper.py	/^    def create( self ):$/;"	m	class:LinuxHelper
create	source/tool/chipsec/helper/win/win32helper.py	/^    def create( self ):$/;"	m	class:Win32Helper
crx	source/tool/chipsec/utilcmd/cr_cmd.py	/^def crx(argv):$/;"	f
cs	source/tool/chipsec/chipset.py	/^def cs():$/;"	f
d	source/drivers/linux/chipsec_km.c	/^   unsigned int d;     \/\/ rdx - 0x08;$/;"	m	struct:tagSMI_CONTEXT	file:
d	source/drivers/linux/chipsec_km.c	/^   unsigned int d;   \/\/ rdx - 0x18; edx - 0xc$/;"	m	struct:tagCONTEXT	file:
d_ioctl	source/drivers/linux/chipsec_km.c	/^static long d_ioctl(struct file *file, unsigned int ioctl_num, unsigned long ioctl_param)$/;"	f	file:
data_files	source/tool/setup.py	/^        data_files      = data_files,$/;"	v
data_files	source/tool/setup.py	/^data_files = [$/;"	v
dbgprint	source/drivers/linux/debug.h	15;"	d
dbgprint	source/drivers/linux/debug.h	20;"	d
dbgprint	source/drivers/linux/include/chipsec.h	31;"	d
dbgprint	source/drivers/linux/include/chipsec.h	36;"	d
decode	source/tool/chipsec/hal/spd.py	/^    def decode( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
decode	source/tool/chipsec/utilcmd/decode_cmd.py	/^def decode(argv):$/;"	f
decode_EFI_variables	source/tool/chipsec/hal/uefi.py	/^def decode_EFI_variables( efi_vars, nvram_pth ):$/;"	f
decode_s3bs_opcode	source/tool/chipsec/hal/uefi_platform.py	/^def decode_s3bs_opcode( data ):$/;"	f
decode_s3bs_opcode_AA	source/tool/chipsec/hal/uefi_platform.py	/^def decode_s3bs_opcode_AA( data ):$/;"	f
decode_uefi_region	source/tool/chipsec/hal/spi_uefi.py	/^def decode_uefi_region(_uefi, pth, fname, fwtype):$/;"	f
decompress_EFI_binary	source/tool/chipsec/hal/uefi.py	/^    def decompress_EFI_binary( self, compressed_name, uncompressed_name, compression_type ):$/;"	m	class:UEFI
decompress_file	source/tool/chipsec/helper/oshelper.py	/^    def decompress_file( self, CompressedFileName, OutputFileName, CompressionType ):$/;"	m	class:OsHelper
decompress_section_data	source/tool/chipsec/hal/spi_uefi.py	/^def decompress_section_data( _uefi, section_dir_path, sec_fs_name, compressed_data, compression_type ):$/;"	f
delete	source/tool/chipsec/helper/efi/efihelper.py	/^    def delete( self ):$/;"	m	class:EfiHelper
delete	source/tool/chipsec/helper/linux/helper.py	/^    def delete( self ):$/;"	m	class:LinuxHelper
delete	source/tool/chipsec/helper/win/win32helper.py	/^    def delete( self ):$/;"	m	class:Win32Helper
delete_EFI_variable	source/tool/chipsec/hal/uefi.py	/^    def delete_EFI_variable( self, name, guid, attrs=None ):$/;"	m	class:UEFI
delete_EFI_variable	source/tool/chipsec/helper/efi/efihelper.py	/^    def delete_EFI_variable(self, name, guid):$/;"	m	class:EfiHelper
delete_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def delete_EFI_variable(self, name, guid):$/;"	m	class:LinuxHelper
deprecated	source/tool/chipsec_main.py	/^    def deprecated(self):  self._deprecated = True$/;"	m	class:ExitCode
description	source/tool/setup.py	/^        description     = 'CHIPSEC: Platform Security Assessment Framework',$/;"	v
destroy	source/tool/chipsec/chipset.py	/^    def destroy( self, start_svc ):$/;"	m	class:Chipset
destroy	source/tool/chipsec/helper/efi/efihelper.py	/^    def destroy( self ):$/;"	m	class:EfiHelper
destroy	source/tool/chipsec/helper/linux/helper.py	/^    def destroy( self ):$/;"	m	class:LinuxHelper
destroy	source/tool/chipsec/helper/oshelper.py	/^    def destroy( self ):$/;"	m	class:OsHelper
destroy	source/tool/chipsec/helper/win/win32helper.py	/^    def destroy( self ):$/;"	m	class:Win32Helper
detect	source/tool/chipsec/hal/spd.py	/^    def detect( self ):$/;"	m	class:SPD
devlist	source/drivers/linux/chipsec_km.c	/^} devlist[] = { \/* list of minor devices *\/$/;"	v	typeref:struct:__anon1	file:
diff_var	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def diff_var( self, data1, data2):$/;"	m	class:access_uefispec
dirent	tools/edk2/PythonEFI/edk2module.c	137;"	d	file:
disable	source/tool/chipsec/logger.py	/^    def disable( self ):$/;"	m	class:Logger
disable_BIOS_write_protection	source/tool/chipsec/hal/spi.py	/^    def disable_BIOS_write_protection( self ):$/;"	m	class:SPI
display_BIOS_region	source/tool/chipsec/hal/spi.py	/^    def display_BIOS_region( self ):$/;"	m	class:SPI
display_BIOS_write_protection	source/tool/chipsec/hal/spi.py	/^    def display_BIOS_write_protection( self ):$/;"	m	class:SPI
display_SMBus_info	source/tool/chipsec/hal/smbus.py	/^    def display_SMBus_info( self ):$/;"	m	class:SMBus
display_SPI_Flash_Descriptor	source/tool/chipsec/hal/spi.py	/^    def display_SPI_Flash_Descriptor( self ):$/;"	m	class:SPI
display_SPI_Flash_Regions	source/tool/chipsec/hal/spi.py	/^    def display_SPI_Flash_Regions( self ):$/;"	m	class:SPI
display_SPI_Protected_Ranges	source/tool/chipsec/hal/spi.py	/^    def display_SPI_Protected_Ranges( self ):$/;"	m	class:SPI
display_SPI_Ranges_Access_Permissions	source/tool/chipsec/hal/spi.py	/^    def display_SPI_Ranges_Access_Permissions( self ):$/;"	m	class:SPI
display_SPI_map	source/tool/chipsec/hal/spi.py	/^    def display_SPI_map( self ):$/;"	m	class:SPI
display_SPI_opcode_info	source/tool/chipsec/hal/spi.py	/^    def display_SPI_opcode_info( self ):$/;"	m	class:SPI
do_hypercall	source/tool/chipsec/helper/linux/helper.py	/^    def do_hypercall(self, vector, arg1, arg2, arg3, arg4, arg5, use_peach):$/;"	m	class:LinuxHelper
do_hypercall	source/tool/chipsec/helper/oshelper.py	/^    def do_hypercall( self, vector, arg1=0, arg2=0, arg3=0, arg4=0, arg5=0, use_peach=0 ):$/;"	m	class:OsHelper
do_import	source/tool/chipsec/module.py	/^    def do_import(self):$/;"	m	class:Module
doubletime	tools/edk2/PythonEFI/edk2module.c	4409;"	d	file:
dram_device_type_name	source/tool/chipsec/hal/spd.py	/^def dram_device_type_name( dram_type ):$/;"	f
drv_hndl_error_msg	source/tool/chipsec/helper/win/win32helper.py	/^drv_hndl_error_msg = "Cannot open chipsec driver handle. Make sure chipsec driver is installed and started if you are using option -e (see README)"$/;"	v
dump	source/tool/chipsec/hal/cmos.py	/^    def dump( self ):$/;"	m	class:CMOS
dump	source/tool/chipsec/hal/spd.py	/^    def dump( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
dump_ACPI_table	source/tool/chipsec/hal/acpi.py	/^    def dump_ACPI_table( self, name, isfile = False ):$/;"	m	class:ACPI
dump_Descriptor_Table	source/tool/chipsec/hal/msr.py	/^    def dump_Descriptor_Table( self, cpu_thread_id, code, num_entries=None ):$/;"	m	class:Msr
dump_EFI_tables	source/tool/chipsec/hal/uefi.py	/^    def dump_EFI_tables( self ):$/;"	m	class:UEFI
dump_EFI_variables_from_SPI	source/tool/chipsec/hal/uefi.py	/^    def dump_EFI_variables_from_SPI( self ):$/;"	m	class:UEFI
dump_IO_BAR	source/tool/chipsec/hal/iobar.py	/^    def dump_IO_BAR( self, bar_name ):$/;"	m	class:iobar
dump_MMIO	source/tool/chipsec/hal/mmio.py	/^def dump_MMIO( cs, bar_base, size ):$/;"	f
dump_MMIO_BAR	source/tool/chipsec/hal/mmio.py	/^def dump_MMIO_BAR( cs, bar_name ):$/;"	f
dump_buffer	source/tool/chipsec/logger.py	/^def dump_buffer( arr, length = 8 ):$/;"	f
dump_high	source/tool/chipsec/hal/cmos.py	/^    def dump_high( self ):$/;"	m	class:CMOS
dump_low	source/tool/chipsec/hal/cmos.py	/^    def dump_low( self ):$/;"	m	class:CMOS
dump_ucode_update_header	source/tool/chipsec/hal/ucode.py	/^def dump_ucode_update_header( pdb_ucode_buffer ):$/;"	f
dumpstr	source/tool/chipsec/modules/tools/secureboot/te.py	/^def dumpstr(s):$/;"	f
ec	source/tool/chipsec_main.py	/^    ec = chipsecMain.main()$/;"	v	class:ChipsecMain
ec	source/tool/chipsec_util.py	/^    ec = chipsecUtil.main(argv)$/;"	v
eflags	tools/edk2/PythonEFI/cpu_ia32.asm	/^eflags PROC$/;"	l
eflags	tools/edk2/PythonEFI/cpu_ia32_gcc.s	/^eflags:$/;"	l
enable_SMBus_host_controller	source/tool/chipsec/hal/smbus.py	/^    def enable_SMBus_host_controller( self ):$/;"	m	class:SMBus
encode_s3bootscript_entry	source/tool/chipsec/hal/uefi_platform.py	/^def encode_s3bootscript_entry( entry ):$/;"	f
encode_s3bs_opcode	source/tool/chipsec/hal/uefi_platform.py	/^def encode_s3bs_opcode( op ):$/;"	f
encode_s3bs_opcode_AA	source/tool/chipsec/hal/uefi_platform.py	/^def encode_s3bs_opcode_AA( op ):$/;"	f
end_module	source/tool/chipsec/logger.py	/^    def end_module( self, module_name ):$/;"	m	class:Logger
end_module	source/tool/chipsec/xmlout.py	/^    def end_module( self, module_name ):$/;"	m	class:xmlAux
enumerate_devices	source/tool/chipsec/hal/pci.py	/^    def enumerate_devices( self ):$/;"	m	class:Pci
erase_spi_block	source/tool/chipsec/hal/spi.py	/^    def erase_spi_block(self, spi_fla ):$/;"	m	class:SPI
error	source/tool/chipsec/logger.py	/^    def error( self, text ):$/;"	m	class:Logger
error	source/tool/chipsec_main.py	/^    def error(self):       self._error = True$/;"	m	class:ExitCode
error_check	source/tool/chipsec/xmlout.py	/^    def error_check(self, text):$/;"	m	class:xmlAux
exception	source/tool/chipsec_main.py	/^    def exception(self):   self._exception = True$/;"	m	class:ExitCode
extract_time	tools/edk2/PythonEFI/edk2module.c	/^extract_time(PyObject *t, time_t* sec, long* usec)$/;"	f	file:
f_mod	source/tool/chipsec_main.py	/^    def f_mod(self,x):$/;"	m	class:ChipsecMain
f_mod	source/tool/chipsec_util.py	/^    def f_mod(self, x):$/;"	m	class:ChipsecUtil
f_mod_zip	source/tool/chipsec/helper/oshelper.py	/^def f_mod_zip(x):$/;"	f
f_mod_zip	source/tool/chipsec_util.py	/^    def f_mod_zip(self, x):$/;"	m	class:ChipsecUtil
f_xml	source/tool/chipsec/chipset.py	/^def f_xml(self, x):$/;"	f
fail	source/tool/chipsec_main.py	/^    def fail(self):        self._fail = True$/;"	m	class:ExitCode
failed_check	source/tool/chipsec/xmlout.py	/^    def failed_check(self, text):$/;"	m	class:xmlAux
file_ref	tools/edk2/PythonEFI/edk2module.c	/^struct file_ref$/;"	s	file:
fill_memory	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def fill_memory( self, _addr, is_ptr_in_buffer, _ptr, _ptr_offset, _sig, _sig_offset ):$/;"	m	class:smm_ptr
fill_time	tools/edk2/PythonEFI/edk2module.c	/^fill_time(PyObject *v, int index, time_t sec, unsigned long nsec)$/;"	f	file:
find_EFI_BootServices_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_BootServices_Table( self ):$/;"	m	class:UEFI
find_EFI_Configuration_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_Configuration_Table( self ):$/;"	m	class:UEFI
find_EFI_DXEServices_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_DXEServices_Table( self ):$/;"	m	class:UEFI
find_EFI_RuntimeServices_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_RuntimeServices_Table( self ):$/;"	m	class:UEFI
find_EFI_System_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_System_Table( self ):$/;"	m	class:UEFI
find_EFI_Table	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_Table( self, table_sig ):$/;"	m	class:UEFI
find_EFI_variable_store	source/tool/chipsec/hal/uefi.py	/^    def find_EFI_variable_store( self, rom_buffer ):$/;"	m	class:UEFI
find_RSDP	source/tool/chipsec/hal/acpi.py	/^    def find_RSDP( self ):$/;"	m	class:ACPI
find_s3_bootscript	source/tool/chipsec/hal/uefi.py	/^    def find_s3_bootscript( self ):$/;"	m	class:UEFI
find_symbols	source/drivers/linux/chipsec_km.c	/^int find_symbols(void) $/;"	f
flags	tools/edk2/PythonEFI/edk2module.c	/^    int flags;$/;"	m	struct:file_ref	file:
flush	source/tool/chipsec/logger.py	/^    def flush(self):$/;"	m	class:Logger
fops	source/drivers/linux/chipsec_km.c	/^	const struct file_operations	*fops;$/;"	m	struct:__anon1	typeref:struct:__anon1::file_operations	file:
free_string_array	tools/edk2/PythonEFI/edk2module.c	/^free_string_array(char **array, Py_ssize_t count)$/;"	f	file:
full_lseek	source/drivers/linux/chipsec_km.c	1450;"	d	file:
fw_types	source/tool/chipsec/hal/uefi_platform.py	/^fw_types = []$/;"	v
gdt	source/tool/chipsec/utilcmd/desc_cmd.py	/^def gdt(argv):$/;"	f
getDRAMDeviceType	source/tool/chipsec/hal/spd.py	/^    def getDRAMDeviceType( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
getEFIvariables_NVAR	source/tool/chipsec/hal/uefi_platform.py	/^def getEFIvariables_NVAR( nvram_buf ):$/;"	f
getEFIvariables_NVAR_simple	source/tool/chipsec/hal/uefi_platform.py	/^def getEFIvariables_NVAR_simple( nvram_buf ):$/;"	f
getEFIvariables_NtEnumerateSystemEnvironmentValuesEx2	source/tool/chipsec/helper/win/win32helper.py	/^def getEFIvariables_NtEnumerateSystemEnvironmentValuesEx2( nvram_buf ):$/;"	f
getEFIvariables_UEFI	source/tool/chipsec/hal/uefi_platform.py	/^def getEFIvariables_UEFI( nvram_buf ):$/;"	f
getEFIvariables_VSS	source/tool/chipsec/hal/uefi_platform.py	/^def getEFIvariables_VSS( nvram_buf ):$/;"	f
getEFIvariables_VSS_NEW	source/tool/chipsec/hal/uefi_platform.py	/^def getEFIvariables_VSS_NEW( nvram_buf ):$/;"	f
getModuleType	source/tool/chipsec/hal/spd.py	/^    def getModuleType( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
getNVstore_EFI	source/tool/chipsec/hal/uefi_platform.py	/^def getNVstore_EFI( nvram_buf ):$/;"	f
getNVstore_EVSA	source/tool/chipsec/hal/uefi_platform.py	/^def getNVstore_EVSA( nvram_buf ):$/;"	f
getNVstore_NVAR	source/tool/chipsec/hal/uefi_platform.py	/^def getNVstore_NVAR( nvram_buf ):$/;"	f
getNVstore_NVAR_simple	source/tool/chipsec/hal/uefi_platform.py	/^def getNVstore_NVAR_simple( nvram_buf ):$/;"	f
getNVstore_VSS	source/tool/chipsec/hal/uefi_platform.py	/^def getNVstore_VSS( nvram_buf ):$/;"	f
get_3b_size	source/tool/chipsec/hal/uefi_common.py	/^def get_3b_size(s):$/;"	f
get_ACPI_SDT	source/tool/chipsec/helper/efi/efihelper.py	/^    def get_ACPI_SDT( self ):$/;"	m	class:EfiHelper
get_ACPI_SDT	source/tool/chipsec/helper/linux/helper.py	/^    def get_ACPI_SDT( self ):$/;"	m	class:LinuxHelper
get_ACPI_SDT	source/tool/chipsec/helper/oshelper.py	/^    def get_ACPI_SDT(self):$/;"	m	class:OsHelper
get_ACPI_SDT	source/tool/chipsec/helper/win/win32helper.py	/^    def get_ACPI_SDT( self ):$/;"	m	class:Win32Helper
get_ACPI_table	source/tool/chipsec/hal/acpi.py	/^    def get_ACPI_table( self, name, isfile = False ):$/;"	m	class:ACPI
get_ACPI_table_list	source/tool/chipsec/hal/acpi.py	/^    def get_ACPI_table_list( self ):$/;"	m	class:ACPI
get_ACPI_table_list	source/tool/chipsec/helper/oshelper.py	/^    def get_ACPI_table_list(self):$/;"	m	class:OsHelper
get_DIDVID	source/tool/chipsec/hal/pci.py	/^    def get_DIDVID( self, bus, dev, fun ):$/;"	m	class:Pci
get_DMIBAR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_DMIBAR_base_address(cs):$/;"	f
get_Desc_Table_Register	source/tool/chipsec/hal/msr.py	/^    def get_Desc_Table_Register( self, cpu_thread_id, code ):$/;"	m	class:Msr
get_DeviceVendorID	source/tool/chipsec/chipset.py	/^    def get_DeviceVendorID( self, device_name ):$/;"	m	class:Chipset
get_EFI_variable	source/tool/chipsec/hal/uefi.py	/^    def get_EFI_variable( self, name, guid, filename=None ):$/;"	m	class:UEFI
get_EFI_variable	source/tool/chipsec/helper/efi/efihelper.py	/^    def get_EFI_variable(self, name, guidstr):$/;"	m	class:EfiHelper
get_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def get_EFI_variable(self, name, guid, attrs=None):$/;"	m	class:LinuxHelper
get_EFI_variable	source/tool/chipsec/helper/oshelper.py	/^    def get_EFI_variable( self, name, guid ):$/;"	m	class:OsHelper
get_EFI_variable	source/tool/chipsec/helper/win/win32helper.py	/^    def get_EFI_variable( self, name, guid, attrs=None ):$/;"	m	class:Win32Helper
get_EFI_variable_full	source/tool/chipsec/helper/efi/efihelper.py	/^    def get_EFI_variable_full(self, name, guidstr):$/;"	m	class:EfiHelper
get_EFI_variable_full	source/tool/chipsec/helper/win/win32helper.py	/^    def get_EFI_variable_full( self, name, guid, attrs=None ):$/;"	m	class:Win32Helper
get_GDTR	source/tool/chipsec/hal/msr.py	/^    def get_GDTR( self, cpu_thread_id ):$/;"	m	class:Msr
get_GFx_base_address	source/tool/chipsec/hal/mmio.py	/^def get_GFx_base_address(cs, dev2_offset):$/;"	f
get_GMADR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_GMADR_base_address( cs ):$/;"	f
get_GTTMMADR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_GTTMMADR_base_address( cs ):$/;"	f
get_HDAudioBAR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_HDAudioBAR_base_address(cs):$/;"	f
get_IDTR	source/tool/chipsec/hal/msr.py	/^    def get_IDTR( self, cpu_thread_id ):$/;"	m	class:Msr
get_IO_BAR_base_address	source/tool/chipsec/hal/iobar.py	/^    def get_IO_BAR_base_address( self, bar_name ):$/;"	m	class:iobar
get_LDTR	source/tool/chipsec/hal/msr.py	/^    def get_LDTR( self, cpu_thread_id ):$/;"	m	class:Msr
get_LPC_RCBA_base_address	source/tool/chipsec/hal/mmio.py	/^def get_LPC_RCBA_base_address(cs):$/;"	f
get_MCHBAR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_MCHBAR_base_address(cs):$/;"	f
get_MMCFG_base_address	source/tool/chipsec/hal/mmio.py	/^def get_MMCFG_base_address(cs):$/;"	f
get_MMIO_BAR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_MMIO_BAR_base_address( cs, bar_name ):$/;"	f
get_MMIO_base_address	source/tool/chipsec/hal/mmio.py	/^def get_MMIO_base_address( cs, bar_id ):$/;"	f
get_PCIEXBAR_base_address	source/tool/chipsec/hal/mmio.py	/^def get_PCIEXBAR_base_address(cs):$/;"	f
get_PMBASE	source/tool/chipsec/hal/interrupts.py	/^    def get_PMBASE(self):$/;"	m	class:Interrupts
get_SDT	source/tool/chipsec/hal/acpi.py	/^    def get_SDT( self, search_rsdp=True ):$/;"	m	class:ACPI
get_SMBus_Base_Address	source/tool/chipsec/hal/smbus.py	/^    def get_SMBus_Base_Address( self ):$/;"	m	class:SMBus
get_SMBus_HCFG	source/tool/chipsec/hal/smbus.py	/^    def get_SMBus_HCFG( self ):$/;"	m	class:SMBus
get_SMRAM	source/tool/chipsec/hal/uefi.py	/^    def get_SMRAM( self ):$/;"	m	class:UEFI
get_SMRAM	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def get_SMRAM( self ):$/;"	m	class:smm_ptr
get_SMRAM_base	source/tool/chipsec/hal/uefi.py	/^    def get_SMRAM_base( self ):$/;"	m	class:UEFI
get_SPI_MMIO_base	source/tool/chipsec/hal/spi.py	/^def get_SPI_MMIO_base( cs ):$/;"	f
get_SPI_MMIO_base_fallback	source/tool/chipsec/hal/spi.py	/^def get_SPI_MMIO_base_fallback( cs ):$/;"	f
get_SPI_Protected_Range	source/tool/chipsec/hal/spi.py	/^    def get_SPI_Protected_Range( self, pr_num ):$/;"	m	class:SPI
get_SPI_master	source/tool/chipsec/hal/spi_descriptor.py	/^def get_SPI_master( flmstr ):$/;"	f
get_SPI_region	source/tool/chipsec/hal/spi.py	/^    def get_SPI_region( self, spi_region_id ):$/;"	m	class:SPI
get_SPI_region	source/tool/chipsec/hal/spi.py	/^def get_SPI_region( flreg ):$/;"	f
get_SPI_regions	source/tool/chipsec/hal/spi.py	/^    def get_SPI_regions( self, all_regions ):$/;"	m	class:SPI
get_TCOBASE	source/tool/chipsec/hal/interrupts.py	/^    def get_TCOBASE(self):$/;"	m	class:Interrupts
get_affinity	source/tool/chipsec/helper/linux/helper.py	/^    def get_affinity(self):$/;"	m	class:LinuxHelper
get_attr_string	source/tool/chipsec/hal/uefi.py	/^def get_attr_string( attr ):$/;"	f
get_auth_attr_string	source/tool/chipsec/hal/uefi.py	/^def get_auth_attr_string( attr ):$/;"	f
get_bootloader_paths	source/tool/chipsec/modules/tools/secureboot/te.py	/^def get_bootloader_paths( cfg_file ):$/;"	f
get_chipsec_version	source/tool/chipsec_main.py	/^    def get_chipsec_version(self):$/;"	m	class:ChipsecMain
get_chipset_code	source/tool/chipsec/chipset.py	/^    def get_chipset_code(self):$/;"	m	class:Chipset
get_chipset_id	source/tool/chipsec/chipset.py	/^    def get_chipset_id(self):$/;"	m	class:Chipset
get_chipset_name	source/tool/chipsec/chipset.py	/^    def get_chipset_name(self, id ):$/;"	m	class:Chipset
get_code	source/tool/chipsec_main.py	/^    def get_code(self):$/;"	m	class:ExitCode
get_compression_tool_path	source/tool/chipsec/helper/linux/helper.py	/^    def get_compression_tool_path( self, compression_type ):$/;"	m	class:LinuxHelper
get_compression_tool_path	source/tool/chipsec/helper/win/win32helper.py	/^    def get_compression_tool_path( self, compression_type ):$/;"	m	class:Win32Helper
get_control	source/tool/chipsec/chipset.py	/^def get_control( _cs, control_name, cpu_thread=0 ):$/;"	f
get_cpu_core_count	source/tool/chipsec/hal/msr.py	/^    def get_cpu_core_count( self ):$/;"	m	class:Msr
get_cpu_thread_count	source/tool/chipsec/hal/msr.py	/^    def get_cpu_thread_count( self ):$/;"	m	class:Msr
get_cpu_thread_count	source/tool/chipsec/hal/ucode.py	/^    def get_cpu_thread_count( self ):$/;"	m	class:Ucode
get_descriptor_table	source/tool/chipsec/helper/efi/efihelper.py	/^    def get_descriptor_table( cpu_thread_id, desc_table_code ):$/;"	m	class:EfiHelper
get_descriptor_table	source/tool/chipsec/helper/linux/helper.py	/^    def get_descriptor_table(self, cpu_thread_id, desc_table_code  ):$/;"	m	class:LinuxHelper
get_descriptor_table	source/tool/chipsec/helper/oshelper.py	/^    def get_descriptor_table( self, cpu_thread_id, desc_table_code ):$/;"	m	class:OsHelper
get_descriptor_table	source/tool/chipsec/helper/win/win32helper.py	/^    def get_descriptor_table( self, cpu_thread_id, desc_table_code  ):$/;"	m	class:Win32Helper
get_device_BDF	source/tool/chipsec/chipset.py	/^    def get_device_BDF( self, device_name ):$/;"	m	class:Chipset
get_device_bars	source/tool/chipsec/hal/pci.py	/^    def get_device_bars( self, bus, dev, fun ):$/;"	m	class:Pci
get_device_name_by_didvid	source/tool/chipsec/hal/pci.py	/^def get_device_name_by_didvid( vid, did ):$/;"	f
get_driver_handle	source/tool/chipsec/helper/win/win32helper.py	/^    def get_driver_handle( self ):$/;"	m	class:Win32Helper
get_efi_mount	source/tool/chipsec/modules/tools/secureboot/te.py	/^def get_efi_mount():$/;"	f
get_helper	source/tool/chipsec/helper/efi/efihelper.py	/^def get_helper():$/;"	f
get_helper	source/tool/chipsec/helper/linux/helper.py	/^def get_helper():$/;"	f
get_helper	source/tool/chipsec/helper/win/win32helper.py	/^def get_helper():$/;"	f
get_location	source/tool/chipsec/module.py	/^    def get_location(self):$/;"	m	class:Module
get_main_dir	source/tool/chipsec/file.py	/^def get_main_dir():$/;"	f
get_module_name	source/tool/chipsec_main.py	/^    def get_module_name( self, full_path):$/;"	m	class:ChipsecMain
get_module_object	source/tool/chipsec/module.py	/^    def get_module_object(self):$/;"	m	class:Module
get_name	source/tool/chipsec/module.py	/^    def get_name(self):$/;"	m	class:Module
get_nvar_name	source/tool/chipsec/hal/uefi_common.py	/^def get_nvar_name(nvram, name_offset, isAscii):$/;"	f
get_option_width	source/tool/chipsec_util.py	/^def get_option_width( width_op ):$/;"	f
get_parse_ACPI_table	source/tool/chipsec/hal/acpi.py	/^    def get_parse_ACPI_table( self, name, isfile = False ):$/;"	m	class:ACPI
get_register_def	source/tool/chipsec/chipset.py	/^def get_register_def( _cs, reg_name ):$/;"	f
get_register_field	source/tool/chipsec/chipset.py	/^def get_register_field( _cs, reg_name, reg_value, field_name, preserve_field_position=False ):$/;"	f
get_s3_bootscript	source/tool/chipsec/hal/uefi.py	/^    def get_s3_bootscript( self, log_script=False ):$/;"	m	class:UEFI
get_spi_flash_descriptor	source/tool/chipsec/hal/spi_descriptor.py	/^def get_spi_flash_descriptor( rom ):$/;"	f
get_spi_regions	source/tool/chipsec/hal/spi_descriptor.py	/^def get_spi_regions( fd ):$/;"	f
get_structure_APIC	source/tool/chipsec/hal/acpi_tables.py	/^    def get_structure_APIC(self, value, DataStructure ):$/;"	f
get_tags	source/tool/chipsec/module.py	/^    def get_tags(self):$/;"	m	class:Module
get_threads_count	source/tool/chipsec/helper/efi/efihelper.py	/^    def get_threads_count ( self ):$/;"	m	class:EfiHelper
get_threads_count	source/tool/chipsec/helper/linux/helper.py	/^    def get_threads_count ( self ):$/;"	m	class:LinuxHelper
get_threads_count	source/tool/chipsec/helper/oshelper.py	/^    def get_threads_count( self ):$/;"	m	class:OsHelper
get_threads_count	source/tool/chipsec/helper/win/win32helper.py	/^    def get_threads_count ( self ):$/;"	m	class:Win32Helper
get_tools_path	source/tool/chipsec/helper/linux/helper.py	/^    def get_tools_path( self ):$/;"	m	class:LinuxHelper
get_tools_path	source/tool/chipsec/helper/win/win32helper.py	/^    def get_tools_path( self ):$/;"	m	class:Win32Helper
get_unmapped_area_mem	source/drivers/linux/chipsec_km.c	/^static unsigned long get_unmapped_area_mem(struct file *file,$/;"	f	file:
get_unmapped_area_mem	source/drivers/linux/chipsec_km.c	511;"	d	file:
get_vendor_name_by_vid	source/tool/chipsec/hal/pci.py	/^def get_vendor_name_by_vid( vid ):$/;"	f
getaffinity	source/tool/chipsec/helper/linux/cores.c	/^unsigned int getaffinity(unsigned long int NumCPUS, unsigned long int* maskArray[], int *errno_var){$/;"	f
getcwd	source/tool/chipsec/helper/efi/efihelper.py	/^    def getcwd( self ):$/;"	m	class:EfiHelper
getcwd	source/tool/chipsec/helper/linux/helper.py	/^    def getcwd( self ):$/;"	m	class:LinuxHelper
getcwd	source/tool/chipsec/helper/oshelper.py	/^    def getcwd( self ):$/;"	m	class:OsHelper
getcwd	source/tool/chipsec/helper/win/win32helper.py	/^    def getcwd( self ):$/;"	m	class:Win32Helper
guess_page_is_ram	source/drivers/linux/chipsec_km.c	/^int (*guess_page_is_ram)(unsigned long pagenr);$/;"	v
guess_raw_pci_read	source/drivers/linux/chipsec_km.c	/^int (*guess_raw_pci_read)(unsigned int domain, unsigned int bus, unsigned int devfn, int reg, int len, uint32_t *val);$/;"	v
guess_raw_pci_write	source/drivers/linux/chipsec_km.c	/^int (*guess_raw_pci_write)(unsigned int domain, unsigned int bus, unsigned int devfn, int reg, int len, uint32_t val);$/;"	v
guid_size	source/tool/chipsec/hal/uefi_common.py	/^guid_size = struct.calcsize(GUID)$/;"	v
guid_str	source/tool/chipsec/hal/uefi_common.py	/^def guid_str(guid0, guid1, guid2, guid3):$/;"	f
guid_str	source/tool/chipsec/helper/win/win32helper.py	/^def guid_str(guid0, guid1, guid2, guid3):$/;"	f
handle	tools/edk2/PythonEFI/edk2module.c	/^    int handle;$/;"	m	struct:file_ref	file:
helper	source/tool/chipsec/helper/oshelper.py	/^def helper():$/;"	f
high	source/drivers/linux/include/chipsec.h	/^       int32_t high;$/;"	m	struct:__anon3::__anon4
id_s3bootscript_type	source/tool/chipsec/hal/uefi_platform.py	/^def id_s3bootscript_type( script, log_script=False ):$/;"	f
idt	source/tool/chipsec/utilcmd/desc_cmd.py	/^def idt(argv):$/;"	f
importModule	source/tool/chipsec/helper/oshelper.py	/^    def importModule(self, mod_fullname):$/;"	m	class:OsHelper
import_module	source/tool/chipsec_main.py	/^    def import_module(self,module_path):$/;"	m	class:ChipsecMain
include	source/drivers/win7/i386/cpu.asm	/^include callconv.inc$/;"	l
init	source/tool/chipsec/chipset.py	/^    def init( self, platform_code, start_svc ):$/;"	m	class:Chipset
init	source/tool/chipsec/helper/linux/helper.py	/^    def init( self ):$/;"	m	class:LinuxHelper
init_cfg	source/tool/chipsec/chipset.py	/^    def init_cfg(self):$/;"	m	class:Chipset
init_cfg_xml	source/tool/chipsec/chipset.py	/^    def init_cfg_xml(self, fxml, code):$/;"	m	class:Chipset
init_module	source/drivers/linux/chipsec_km.c	/^init_module (void)$/;"	f
init_xml_configuration	source/tool/chipsec/chipset.py	/^    def init_xml_configuration( self ):$/;"	m	class:Chipset
initialized	tools/edk2/PythonEFI/edk2module.c	/^static int initialized;$/;"	v	file:
ins	tools/edk2/PythonEFI/edk2module.c	/^ins(PyObject *module, char *symbol, long value)$/;"	f	file:
iobar	source/tool/chipsec/hal/iobar.py	/^class iobar:$/;"	c
isECC	source/tool/chipsec/hal/spd.py	/^    def isECC( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
isSPDPresent	source/tool/chipsec/hal/spd.py	/^    def isSPDPresent( self, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
is_ACPI_table_present	source/tool/chipsec/hal/acpi.py	/^    def is_ACPI_table_present( self, name ):$/;"	m	class:ACPI
is_IO_BAR_defined	source/tool/chipsec/hal/iobar.py	/^    def is_IO_BAR_defined( self, bar_name ):$/;"	m	class:iobar
is_MMIO_BAR_defined	source/tool/chipsec/hal/mmio.py	/^def is_MMIO_BAR_defined( cs, bar_name ):$/;"	f
is_MMIO_BAR_enabled	source/tool/chipsec/hal/mmio.py	/^def is_MMIO_BAR_enabled( cs, bar_name ):$/;"	f
is_MMIO_BAR_programmed	source/tool/chipsec/hal/mmio.py	/^def is_MMIO_BAR_programmed( cs, bar_name ):$/;"	f
is_RSDP_valid	source/tool/chipsec/hal/acpi_tables.py	/^    def is_RSDP_valid(self ):$/;"	f
is_SMBus_enabled	source/tool/chipsec/hal/smbus.py	/^    def is_SMBus_enabled( self ):$/;"	m	class:SMBus
is_SMBus_host_controller_enabled	source/tool/chipsec/hal/smbus.py	/^    def is_SMBus_host_controller_enabled( self ):$/;"	m	class:SMBus
is_SMBus_supported	source/tool/chipsec/hal/smbus.py	/^    def is_SMBus_supported( self ):$/;"	m	class:SMBus
is_deprecated	source/tool/chipsec_main.py	/^    def is_deprecated(self):  return self._deprecated$/;"	m	class:ExitCode
is_device_enabled	source/tool/chipsec/chipset.py	/^    def is_device_enabled( self, device_name ):$/;"	m	class:Chipset
is_enabled	source/tool/chipsec/hal/pci.py	/^    def is_enabled( self, bus, dev, fun ):$/;"	m	class:Pci
is_error	source/tool/chipsec/xmlout.py	/^    def is_error(self):$/;"	m	class:xmlTestCase
is_error	source/tool/chipsec_main.py	/^    def is_error(self):       return self._error$/;"	m	class:ExitCode
is_exception	source/tool/chipsec_main.py	/^    def is_exception(self):   return self._exception$/;"	m	class:ExitCode
is_fail	source/tool/chipsec_main.py	/^    def is_fail(self):        return self._fail$/;"	m	class:ExitCode
is_failure	source/tool/chipsec/xmlout.py	/^    def is_failure(self):$/;"	m	class:xmlTestCase
is_linux	source/tool/chipsec/helper/oshelper.py	/^    def is_linux( self ):$/;"	m	class:OsHelper
is_option_valid_width	source/tool/chipsec_util.py	/^def is_option_valid_width( width_op ):$/;"	f
is_pass	source/tool/chipsec/xmlout.py	/^    def is_pass(self):$/;"	m	class:xmlTestCase
is_register_defined	source/tool/chipsec/chipset.py	/^def is_register_defined( _cs, reg_name ):$/;"	f
is_skipped	source/tool/chipsec/xmlout.py	/^    def is_skipped(self):$/;"	m	class:xmlTestCase
is_skipped	source/tool/chipsec_main.py	/^    def is_skipped(self):     return self._skipped$/;"	m	class:ExitCode
is_supported	source/tool/chipsec/module_common.py	/^    def is_supported(self):$/;"	m	class:BaseModule
is_supported	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^    def is_supported(self):$/;"	m	class:bios_kbrd_buffer
is_supported	source/tool/chipsec/modules/common/bios_smi.py	/^    def is_supported(self):$/;"	m	class:bios_smi
is_supported	source/tool/chipsec/modules/common/bios_ts.py	/^    def is_supported(self):$/;"	m	class:bios_ts
is_supported	source/tool/chipsec/modules/common/bios_wp.py	/^    def is_supported(self):$/;"	m	class:bios_wp
is_supported	source/tool/chipsec/modules/common/secureboot/variables.py	/^    def is_supported( self ):$/;"	m	class:variables
is_supported	source/tool/chipsec/modules/common/smm.py	/^    def is_supported(self):$/;"	m	class:smm
is_supported	source/tool/chipsec/modules/common/smrr.py	/^    def is_supported(self):$/;"	m	class:smrr
is_supported	source/tool/chipsec/modules/common/spi_desc.py	/^    def is_supported(self):$/;"	m	class:spi_desc
is_supported	source/tool/chipsec/modules/common/spi_lock.py	/^    def is_supported(self):$/;"	m	class:spi_lock
is_supported	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def is_supported(self):$/;"	m	class:access_uefispec
is_supported	source/tool/chipsec/modules/module_template.py	/^    def is_supported(self):$/;"	m	class:module_template
is_supported	source/tool/chipsec/modules/remap.py	/^    def is_supported(self):$/;"	m	class:remap
is_supported	source/tool/chipsec/modules/smm_dma.py	/^    def is_supported(self):$/;"	m	class:smm_dma
is_supported	source/tool/chipsec/modules/tools/secureboot/te.py	/^    def is_supported(self):$/;"	m	class:te
is_supported	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def is_supported(self):$/;"	m	class:smm_ptr
is_warning	source/tool/chipsec_main.py	/^    def is_warning(self):     return self._warning$/;"	m	class:ExitCode
is_win8_or_greater	source/tool/chipsec/helper/oshelper.py	/^    def is_win8_or_greater( self ):$/;"	m	class:OsHelper
is_windows	source/tool/chipsec/helper/oshelper.py	/^    def is_windows( self ):$/;"	m	class:OsHelper
kern_delete_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def kern_delete_EFI_variable(self, name, guid):$/;"	m	class:LinuxHelper
kern_get_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def kern_get_EFI_variable(self, name, guid):$/;"	m	class:LinuxHelper
kern_get_EFI_variable_full	source/tool/chipsec/helper/linux/helper.py	/^    def kern_get_EFI_variable_full(self, name, guid):$/;"	m	class:LinuxHelper
kern_list_EFI_variables	source/tool/chipsec/helper/linux/helper.py	/^    def kern_list_EFI_variables(self, infcls):$/;"	m	class:LinuxHelper
kern_set_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def kern_set_EFI_variable(self, name, guid, value, attr=0x7):$/;"	m	class:LinuxHelper
kernel32	source/tool/chipsec/helper/win/win32helper.py	/^kernel32 = windll.kernel32$/;"	v
ldt	source/tool/chipsec/utilcmd/desc_cmd.py	/^def ldt(argv):$/;"	f
limit	source/drivers/linux/include/chipsec.h	/^  uint16_t    limit;$/;"	m	struct:_DESCRIPTOR_TABLE_RECORD
limit	source/drivers/win7/include/cpu.h	/^  UINT16    limit;$/;"	m	struct:_DESCRIPTOR_TABLE_RECORD
list_EFI_variables	source/tool/chipsec/hal/uefi.py	/^    def list_EFI_variables( self ):$/;"	m	class:UEFI
list_EFI_variables	source/tool/chipsec/helper/efi/efihelper.py	/^    def list_EFI_variables(self):   $/;"	m	class:EfiHelper
list_EFI_variables	source/tool/chipsec/helper/linux/helper.py	/^    def list_EFI_variables (self, infcls=2):$/;"	m	class:LinuxHelper
list_EFI_variables	source/tool/chipsec/helper/oshelper.py	/^    def list_EFI_variables( self ):$/;"	m	class:OsHelper
list_EFI_variables	source/tool/chipsec/helper/win/win32helper.py	/^    def list_EFI_variables( self, infcls=2 ):$/;"	m	class:Win32Helper
list_MMIO_BARs	source/tool/chipsec/hal/mmio.py	/^def list_MMIO_BARs( cs ):$/;"	f
loadHelpers	source/tool/chipsec/helper/oshelper.py	/^    def loadHelpers(self):$/;"	m	class:OsHelper
loadHelpersFromEXE	source/tool/chipsec/helper/oshelper.py	/^    def loadHelpersFromEXE(self):$/;"	m	class:OsHelper
loadHelpersFromFileSystem	source/tool/chipsec/helper/oshelper.py	/^    def loadHelpersFromFileSystem(self):$/;"	m	class:OsHelper
load_module	source/tool/chipsec_main.py	/^    def load_module( self, module_path, module_argv ):$/;"	m	class:ChipsecMain
load_modules_from_path	source/tool/chipsec_main.py	/^    def load_modules_from_path( self, from_path, recursive = True ):$/;"	m	class:ChipsecMain
load_my_modules	source/tool/chipsec_main.py	/^    def load_my_modules(self):$/;"	m	class:ChipsecMain
load_ucode_update	source/tool/chipsec/hal/ucode.py	/^    def load_ucode_update(self, cpu_thread_id, ucode_buf ):$/;"	m	class:Ucode
load_ucode_update	source/tool/chipsec/helper/efi/efihelper.py	/^    def load_ucode_update( self, cpu_thread_id, ucode_update_buf ):$/;"	m	class:EfiHelper
load_ucode_update	source/tool/chipsec/helper/linux/helper.py	/^    def load_ucode_update( self, cpu_thread_id, ucode_update_buf):$/;"	m	class:LinuxHelper
load_ucode_update	source/tool/chipsec/helper/oshelper.py	/^    def load_ucode_update( self, cpu_thread_id, ucode_update_buf ):$/;"	m	class:OsHelper
load_ucode_update	source/tool/chipsec/helper/win/win32helper.py	/^    def load_ucode_update( self, cpu_thread_id, ucode_update_buf ):$/;"	m	class:Win32Helper
load_user_modules	source/tool/chipsec_main.py	/^    def load_user_modules(self):$/;"	m	class:ChipsecMain
log	source/tool/chipsec/logger.py	/^    def log( self, text):$/;"	m	class:Logger
log_bad	source/tool/chipsec/logger.py	/^    def log_bad( self, text ):$/;"	m	class:Logger
log_color	source/tool/chipsec/logger.py	/^        def log_color( fg_color, text ):$/;"	f
log_color	source/tool/chipsec/logger.py	/^    def log_color( fg_color, text ):$/;"	f
log_error_check	source/tool/chipsec/logger.py	/^    def log_error_check( self, text ):$/;"	m	class:Logger
log_failed	source/tool/chipsec/logger.py	/^    def log_failed( self, text ):$/;"	m	class:Logger
log_failed_check	source/tool/chipsec/logger.py	/^    def log_failed_check( self, text ):$/;"	m	class:Logger
log_good	source/tool/chipsec/logger.py	/^    def log_good( self, text ):$/;"	m	class:Logger
log_heading	source/tool/chipsec/logger.py	/^    def log_heading( self, text ):$/;"	m	class:Logger
log_important	source/tool/chipsec/logger.py	/^    def log_important( self, text ):$/;"	m	class:Logger
log_passed	source/tool/chipsec/logger.py	/^    def log_passed( self, text ):$/;"	m	class:Logger
log_passed_check	source/tool/chipsec/logger.py	/^    def log_passed_check( self, text ):$/;"	m	class:Logger
log_result	source/tool/chipsec/logger.py	/^    def log_result( self, text ):$/;"	m	class:Logger
log_skipped	source/tool/chipsec/logger.py	/^    def log_skipped( self, text ):$/;"	m	class:Logger
log_skipped_check	source/tool/chipsec/logger.py	/^    def log_skipped_check( self, text ):$/;"	m	class:Logger
log_unknown	source/tool/chipsec/logger.py	/^    def log_unknown( self, text ):$/;"	m	class:Logger
log_warn_check	source/tool/chipsec/logger.py	/^    def log_warn_check( self, text ):$/;"	m	class:Logger
log_warning	source/tool/chipsec/logger.py	/^    def log_warning( self, text ):$/;"	m	class:Logger
logger	source/tool/chipsec/logger.py	/^def logger():$/;"	f
logger	source/tool/chipsec/modules/tools/secureboot/te.py	/^logger  = chipsec.logger.logger()$/;"	v
low	source/drivers/linux/include/chipsec.h	/^       uint32_t low;$/;"	m	struct:__anon3::__anon4
main	source/tool/chipsec_main.py	/^    def main ( self ):$/;"	m	class:ChipsecMain
main	source/tool/chipsec_util.py	/^    def main(self, argv):$/;"	m	class:ChipsecUtil
main_is_frozen	source/tool/chipsec/file.py	/^def main_is_frozen():$/;"	f
map_modname	source/tool/chipsec_main.py	/^    def map_modname(self,x):$/;"	m	class:ChipsecMain
map_modname	source/tool/chipsec_util.py	/^    def map_modname(self, x):$/;"	m	class:ChipsecUtil
map_modname_zip	source/tool/chipsec/helper/oshelper.py	/^def map_modname_zip(x):$/;"	f
map_modname_zip	source/tool/chipsec_util.py	/^    def map_modname_zip(self, x):$/;"	m	class:ChipsecUtil
map_pass	source/tool/chipsec_main.py	/^    def map_pass(self,x):$/;"	m	class:ChipsecMain
map_xmlname	source/tool/chipsec/chipset.py	/^def map_xmlname(self, x):$/;"	f
mem	source/tool/chipsec/utilcmd/mem_cmd.py	/^def mem(argv):$/;"	f
mem_class	source/drivers/linux/chipsec_km.c	/^static struct class *mem_class;$/;"	v	typeref:struct:class	file:
mem_fops	source/drivers/linux/chipsec_km.c	/^static const struct file_operations mem_fops = {$/;"	v	typeref:struct:file_operations	file:
mem_read_block	source/tool/chipsec/helper/linux/helper.py	/^    def mem_read_block(self, addr, sz):$/;"	m	class:LinuxHelper
mem_write_block	source/tool/chipsec/helper/linux/helper.py	/^    def mem_write_block(self, addr, sz, newval):$/;"	m	class:LinuxHelper
memory_fops	source/drivers/linux/chipsec_km.c	/^static const struct file_operations memory_fops = {$/;"	v	typeref:struct:file_operations	file:
memory_lseek	source/drivers/linux/chipsec_km.c	/^static loff_t memory_lseek(struct file * file, loff_t offset, int orig)$/;"	f	file:
memory_open	source/drivers/linux/chipsec_km.c	/^static int memory_open(struct inode * inode, struct file * filp)$/;"	f	file:
minor	source/drivers/linux/chipsec_km.c	/^	unsigned int		minor;$/;"	m	struct:__anon1	file:
mmap_mem	source/drivers/linux/chipsec_km.c	/^static int mmap_mem(struct file * file, struct vm_area_struct * vma)$/;"	f	file:
mmcfg	source/tool/chipsec/utilcmd/mmcfg_cmd.py	/^def mmcfg(argv):$/;"	f
mmio	source/tool/chipsec/utilcmd/mmio_cmd.py	/^def mmio(argv):$/;"	f
mode	source/drivers/linux/chipsec_km.c	/^	umode_t			mode;$/;"	m	struct:__anon1	file:
module_template	source/tool/chipsec/modules/module_template.py	/^class module_template (BaseModule):$/;"	c
module_type_name	source/tool/chipsec/hal/spd.py	/^def module_type_name( module_type ):$/;"	f
msr	source/tool/chipsec/utilcmd/msr_cmd.py	/^def msr(argv):$/;"	f
my_unxlate_dev_mem_ptr	source/drivers/linux/chipsec_km.c	/^void my_unxlate_dev_mem_ptr(unsigned long phys,void *addr)$/;"	f
my_xlate_dev_mem_ptr	source/drivers/linux/chipsec_km.c	/^void *my_xlate_dev_mem_ptr(unsigned long phys)$/;"	f
mypackages	source/tool/setup.py	/^mypackages = ['.']$/;"	v
name	source/drivers/linux/chipsec_km.c	/^	char			*name;$/;"	m	struct:__anon1	file:
name	source/tool/setup.py	/^        name            = 'chipsec',$/;"	v
name	tools/edk2/PythonEFI/edk2module.c	/^    char *name;$/;"	m	struct:constdef	file:
newimp	source/tool/chipsec_main.py	/^def newimp(name, *x):$/;"	f
nmi	source/tool/chipsec/utilcmd/interrupts_cmd.py	/^def nmi(argv):$/;"	f
old_run_module	source/tool/chipsec_main.py	/^    def old_run_module( self, module_path, module_argv ):$/;"	m	class:ChipsecMain
op_dispatch	source/tool/chipsec/hal/uefi_common.py	/^class op_dispatch():$/;"	c
op_io_pci_mem	source/tool/chipsec/hal/uefi_common.py	/^class op_io_pci_mem():$/;"	c
op_smbus_execute	source/tool/chipsec/hal/uefi_common.py	/^class op_smbus_execute():$/;"	c
op_stall	source/tool/chipsec/hal/uefi_common.py	/^class op_stall():$/;"	c
op_terminate	source/tool/chipsec/hal/uefi_common.py	/^class op_terminate():$/;"	c
op_unknown	source/tool/chipsec/hal/uefi_common.py	/^class op_unknown():$/;"	c
open_fmem	source/drivers/linux/chipsec_km.c	1453;"	d	file:
open_mem	source/drivers/linux/chipsec_km.c	1452;"	d	file:
open_port	source/drivers/linux/chipsec_km.c	/^static int open_port(struct inode * inode, struct file * filp)$/;"	f	file:
os2emx_popen2	tools/edk2/PythonEFI/edk2module.c	/^os2emx_popen2(PyObject *self, PyObject  *args)$/;"	f	file:
os2emx_popen3	tools/edk2/PythonEFI/edk2module.c	/^os2emx_popen3(PyObject *self, PyObject *args)$/;"	f	file:
os2emx_popen4	tools/edk2/PythonEFI/edk2module.c	/^os2emx_popen4(PyObject *self, PyObject  *args)$/;"	f	file:
packages	source/tool/setup.py	/^        packages        = mypackages$/;"	v
packl_ctypes	source/tool/chipsec/helper/win/win32helper.py	/^def packl_ctypes( lnum, bitlength ):$/;"	f
parse	source/tool/chipsec_main.py	/^    def parse(self, code):$/;"	m	class:ExitCode
parse_EFI_variables	source/tool/chipsec/hal/uefi.py	/^    def parse_EFI_variables( self, fname, rom, authvars, _fw_type=None ):$/;"	m	class:UEFI
parse_args	source/tool/chipsec_main.py	/^    def parse_args(self):$/;"	m	class:ChipsecMain
parse_db	source/tool/chipsec/hal/uefi_common.py	/^def parse_db( db, decode_dir ):$/;"	f
parse_efivar_file	source/tool/chipsec/hal/uefi_common.py	/^def parse_efivar_file( fname, var=None ):$/;"	f
parse_pkcs7	source/tool/chipsec/hal/uefi_common.py	/^def parse_pkcs7(data):$/;"	f
parse_rsa2048	source/tool/chipsec/hal/uefi_common.py	/^def parse_rsa2048(data):$/;"	f
parse_rsa2048_sha1	source/tool/chipsec/hal/uefi_common.py	/^def parse_rsa2048_sha1(data):$/;"	f
parse_rsa2048_sha256	source/tool/chipsec/hal/uefi_common.py	/^def parse_rsa2048_sha256(data):$/;"	f
parse_s3bootscript_entry	source/tool/chipsec/hal/uefi_platform.py	/^def parse_s3bootscript_entry( s3bootscript_type, script, off, log_script=False ):$/;"	f
parse_script	source/tool/chipsec/hal/uefi.py	/^def parse_script( script, log_script=False ):$/;"	f
parse_sha1	source/tool/chipsec/hal/uefi_common.py	/^def parse_sha1(data):$/;"	f
parse_sha224	source/tool/chipsec/hal/uefi_common.py	/^def parse_sha224(data):$/;"	f
parse_sha256	source/tool/chipsec/hal/uefi_common.py	/^def parse_sha256(data):$/;"	f
parse_sha384	source/tool/chipsec/hal/uefi_common.py	/^def parse_sha384(data):$/;"	f
parse_sha512	source/tool/chipsec/hal/uefi_common.py	/^def parse_sha512(data):$/;"	f
parse_spi_flash_descriptor	source/tool/chipsec/hal/spi_descriptor.py	/^def parse_spi_flash_descriptor( rom ):$/;"	f
parse_uefi_region	source/tool/chipsec/hal/spi_uefi.py	/^def parse_uefi_region( _uefi, data, uefi_region_path ):$/;"	f
parse_uefi_region_from_file	source/tool/chipsec/hal/spi_uefi.py	/^def parse_uefi_region_from_file( _uefi, filename, outpath = None):$/;"	f
parse_uefi_section	source/tool/chipsec/hal/spi_uefi.py	/^def parse_uefi_section( _uefi, data, Size, offset, polarity, parent_offset, parent_path, decode_log_path ):$/;"	f
parse_x509	source/tool/chipsec/hal/uefi_common.py	/^def parse_x509(data):$/;"	f
passed_check	source/tool/chipsec/xmlout.py	/^    def passed_check(self):$/;"	m	class:xmlAux
patch_apply_ucode	source/drivers/linux/chipsec_km.c	/^void * patch_apply_ucode(void * ucode_buf)$/;"	f
patch_bios_sign	source/drivers/linux/chipsec_km.c	/^void * patch_bios_sign(void * ucode_buf)$/;"	f
patch_cpuid_0	source/drivers/linux/chipsec_km.c	/^void * patch_cpuid_0(void * CPUInfo)$/;"	f
patch_read_msr	source/drivers/linux/chipsec_km.c	/^void * patch_read_msr(void * CPUInfo)$/;"	f
pci	source/tool/chipsec/utilcmd/pci_cmd.py	/^def pci(argv):$/;"	f
pci_read_byte	source/drivers/win7/driver.c	/^BYTE pci_read_byte(WORD bus, WORD dev, WORD func, BYTE offset )$/;"	f
pci_read_dword	source/drivers/win7/driver.c	/^DWORD pci_read_dword(WORD bus, WORD dev, WORD func, BYTE offset )$/;"	f
pci_read_word	source/drivers/win7/driver.c	/^WORD pci_read_word(WORD bus, WORD dev, WORD func, BYTE offset )$/;"	f
physaddr_t	source/drivers/linux/include/chipsec.h	/^typedef __u32 physaddr_t;$/;"	t
physaddr_t	source/drivers/linux/include/chipsec.h	/^typedef u64 physaddr_t;$/;"	t
pipe_ref	tools/edk2/PythonEFI/edk2module.c	/^struct pipe_ref$/;"	s	file:
pkg	source/tool/setup.py	/^            pkg = current.replace(tool_dir+os.path.sep,"")$/;"	v
pkg	source/tool/setup.py	/^            pkg = pkg.replace(os.path.sep,'.')$/;"	v
platform	source/tool/chipsec/utilcmd/chipset_cmd.py	/^def platform(argv):$/;"	f
popen	tools/edk2/PythonEFI/edk2module.c	/^popen(const char *command, const char *mode, int pipesize, int *err)$/;"	f	file:
port_io	source/tool/chipsec/utilcmd/io_cmd.py	/^def port_io(argv):$/;"	f
posix_1str	tools/edk2/PythonEFI/edk2module.c	/^posix_1str(PyObject *args, char *format, int (*func)(const char*))$/;"	f	file:
posix_2str	tools/edk2/PythonEFI/edk2module.c	/^posix_2str(PyObject *args,$/;"	f	file:
posix_WCOREDUMP	tools/edk2/PythonEFI/edk2module.c	/^posix_WCOREDUMP(PyObject *self, PyObject *args)$/;"	f	file:
posix_WEXITSTATUS	tools/edk2/PythonEFI/edk2module.c	/^posix_WEXITSTATUS(PyObject *self, PyObject *args)$/;"	f	file:
posix_WIFCONTINUED	tools/edk2/PythonEFI/edk2module.c	/^posix_WIFCONTINUED(PyObject *self, PyObject *args)$/;"	f	file:
posix_WIFEXITED	tools/edk2/PythonEFI/edk2module.c	/^posix_WIFEXITED(PyObject *self, PyObject *args)$/;"	f	file:
posix_WIFSIGNALED	tools/edk2/PythonEFI/edk2module.c	/^posix_WIFSIGNALED(PyObject *self, PyObject *args)$/;"	f	file:
posix_WIFSTOPPED	tools/edk2/PythonEFI/edk2module.c	/^posix_WIFSTOPPED(PyObject *self, PyObject *args)$/;"	f	file:
posix_WSTOPSIG	tools/edk2/PythonEFI/edk2module.c	/^posix_WSTOPSIG(PyObject *self, PyObject *args)$/;"	f	file:
posix_WTERMSIG	tools/edk2/PythonEFI/edk2module.c	/^posix_WTERMSIG(PyObject *self, PyObject *args)$/;"	f	file:
posix__exit	tools/edk2/PythonEFI/edk2module.c	/^posix__exit(PyObject *self, PyObject *args)$/;"	f	file:
posix__getfullpathname	tools/edk2/PythonEFI/edk2module.c	/^posix__getfullpathname(PyObject *self, PyObject *args)$/;"	f	file:
posix_abort	tools/edk2/PythonEFI/edk2module.c	/^posix_abort(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_access	tools/edk2/PythonEFI/edk2module.c	/^posix_access(PyObject *self, PyObject *args)$/;"	f	file:
posix_chdir	tools/edk2/PythonEFI/edk2module.c	/^posix_chdir(PyObject *self, PyObject *args)$/;"	f	file:
posix_chflags	tools/edk2/PythonEFI/edk2module.c	/^posix_chflags(PyObject *self, PyObject *args)$/;"	f	file:
posix_chmod	tools/edk2/PythonEFI/edk2module.c	/^posix_chmod(PyObject *self, PyObject *args)$/;"	f	file:
posix_chown	tools/edk2/PythonEFI/edk2module.c	/^posix_chown(PyObject *self, PyObject *args)$/;"	f	file:
posix_chroot	tools/edk2/PythonEFI/edk2module.c	/^posix_chroot(PyObject *self, PyObject *args)$/;"	f	file:
posix_close	tools/edk2/PythonEFI/edk2module.c	/^posix_close(PyObject *self, PyObject *args)$/;"	f	file:
posix_closerange	tools/edk2/PythonEFI/edk2module.c	/^posix_closerange(PyObject *self, PyObject *args)$/;"	f	file:
posix_confstr	tools/edk2/PythonEFI/edk2module.c	/^posix_confstr(PyObject *self, PyObject *args)$/;"	f	file:
posix_constants_confstr	tools/edk2/PythonEFI/edk2module.c	/^static struct constdef posix_constants_confstr[] = {$/;"	v	typeref:struct:constdef	file:
posix_constants_pathconf	tools/edk2/PythonEFI/edk2module.c	/^static struct constdef  posix_constants_pathconf[] = {$/;"	v	typeref:struct:constdef	file:
posix_constants_sysconf	tools/edk2/PythonEFI/edk2module.c	/^static struct constdef posix_constants_sysconf[] = {$/;"	v	typeref:struct:constdef	file:
posix_cpuid	tools/edk2/PythonEFI/edk2module.c	/^posix_cpuid(PyObject *self, PyObject *args)$/;"	f	file:
posix_do_stat	tools/edk2/PythonEFI/edk2module.c	/^posix_do_stat(PyObject *self, PyObject *args,$/;"	f	file:
posix_dup	tools/edk2/PythonEFI/edk2module.c	/^posix_dup(PyObject *self, PyObject *args)$/;"	f	file:
posix_dup2	tools/edk2/PythonEFI/edk2module.c	/^posix_dup2(PyObject *self, PyObject *args)$/;"	f	file:
posix_error	tools/edk2/PythonEFI/edk2module.c	/^posix_error(void)$/;"	f	file:
posix_error_with_allocated_filename	tools/edk2/PythonEFI/edk2module.c	/^posix_error_with_allocated_filename(char* name)$/;"	f	file:
posix_error_with_filename	tools/edk2/PythonEFI/edk2module.c	/^posix_error_with_filename(char* name)$/;"	f	file:
posix_execv	tools/edk2/PythonEFI/edk2module.c	/^posix_execv(PyObject *self, PyObject *args)$/;"	f	file:
posix_execve	tools/edk2/PythonEFI/edk2module.c	/^posix_execve(PyObject *self, PyObject *args)$/;"	f	file:
posix_fchmod	tools/edk2/PythonEFI/edk2module.c	/^posix_fchmod(PyObject *self, PyObject *args)$/;"	f	file:
posix_fchown	tools/edk2/PythonEFI/edk2module.c	/^posix_fchown(PyObject *self, PyObject *args)$/;"	f	file:
posix_fdatasync	tools/edk2/PythonEFI/edk2module.c	/^posix_fdatasync(PyObject *self, PyObject *fdobj)$/;"	f	file:
posix_fdopen	tools/edk2/PythonEFI/edk2module.c	/^posix_fdopen(PyObject *self, PyObject *args)$/;"	f	file:
posix_fildes	tools/edk2/PythonEFI/edk2module.c	/^  posix_fildes(PyObject *fdobj, int (*func)(int))$/;"	f	file:
posix_fork	tools/edk2/PythonEFI/edk2module.c	/^posix_fork(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_fork1	tools/edk2/PythonEFI/edk2module.c	/^posix_fork1(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_forkpty	tools/edk2/PythonEFI/edk2module.c	/^posix_forkpty(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_fpathconf	tools/edk2/PythonEFI/edk2module.c	/^posix_fpathconf(PyObject *self, PyObject *args)$/;"	f	file:
posix_fstat	tools/edk2/PythonEFI/edk2module.c	/^posix_fstat(PyObject *self, PyObject *args)$/;"	f	file:
posix_fstatvfs	tools/edk2/PythonEFI/edk2module.c	/^posix_fstatvfs(PyObject *self, PyObject *args)$/;"	f	file:
posix_fsync	tools/edk2/PythonEFI/edk2module.c	/^posix_fsync(PyObject *self, PyObject *fdobj)$/;"	f	file:
posix_ftruncate	tools/edk2/PythonEFI/edk2module.c	/^posix_ftruncate(PyObject *self, PyObject *args)$/;"	f	file:
posix_getcwd	tools/edk2/PythonEFI/edk2module.c	/^posix_getcwd(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getcwdu	tools/edk2/PythonEFI/edk2module.c	/^posix_getcwdu(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getegid	tools/edk2/PythonEFI/edk2module.c	/^posix_getegid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_geteuid	tools/edk2/PythonEFI/edk2module.c	/^posix_geteuid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getgid	tools/edk2/PythonEFI/edk2module.c	/^posix_getgid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getgroups	tools/edk2/PythonEFI/edk2module.c	/^posix_getgroups(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getlogin	tools/edk2/PythonEFI/edk2module.c	/^posix_getlogin(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getpgid	tools/edk2/PythonEFI/edk2module.c	/^posix_getpgid(PyObject *self, PyObject *args)$/;"	f	file:
posix_getpgrp	tools/edk2/PythonEFI/edk2module.c	/^posix_getpgrp(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getpid	tools/edk2/PythonEFI/edk2module.c	/^posix_getpid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getppid	tools/edk2/PythonEFI/edk2module.c	/^posix_getppid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getresgid	tools/edk2/PythonEFI/edk2module.c	/^posix_getresgid (PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getresuid	tools/edk2/PythonEFI/edk2module.c	/^posix_getresuid (PyObject *self, PyObject *noargs)$/;"	f	file:
posix_getsid	tools/edk2/PythonEFI/edk2module.c	/^posix_getsid(PyObject *self, PyObject *args)$/;"	f	file:
posix_getuid	tools/edk2/PythonEFI/edk2module.c	/^posix_getuid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_initgroups	tools/edk2/PythonEFI/edk2module.c	/^posix_initgroups(PyObject *self, PyObject *args)$/;"	f	file:
posix_isatty	tools/edk2/PythonEFI/edk2module.c	/^posix_isatty(PyObject *self, PyObject *args)$/;"	f	file:
posix_kill	tools/edk2/PythonEFI/edk2module.c	/^posix_kill(PyObject *self, PyObject *args)$/;"	f	file:
posix_killpg	tools/edk2/PythonEFI/edk2module.c	/^posix_killpg(PyObject *self, PyObject *args)$/;"	f	file:
posix_lchflags	tools/edk2/PythonEFI/edk2module.c	/^posix_lchflags(PyObject *self, PyObject *args)$/;"	f	file:
posix_lchmod	tools/edk2/PythonEFI/edk2module.c	/^posix_lchmod(PyObject *self, PyObject *args)$/;"	f	file:
posix_lchown	tools/edk2/PythonEFI/edk2module.c	/^posix_lchown(PyObject *self, PyObject *args)$/;"	f	file:
posix_listdir	tools/edk2/PythonEFI/edk2module.c	/^posix_listdir(PyObject *self, PyObject *args)$/;"	f	file:
posix_lseek	tools/edk2/PythonEFI/edk2module.c	/^posix_lseek(PyObject *self, PyObject *args)$/;"	f	file:
posix_lstat	tools/edk2/PythonEFI/edk2module.c	/^posix_lstat(PyObject *self, PyObject *args)$/;"	f	file:
posix_major	tools/edk2/PythonEFI/edk2module.c	/^posix_major(PyObject *self, PyObject *args)$/;"	f	file:
posix_makedev	tools/edk2/PythonEFI/edk2module.c	/^posix_makedev(PyObject *self, PyObject *args)$/;"	f	file:
posix_methods	tools/edk2/PythonEFI/edk2module.c	/^static PyMethodDef posix_methods[] = {$/;"	v	file:
posix_minor	tools/edk2/PythonEFI/edk2module.c	/^posix_minor(PyObject *self, PyObject *args)$/;"	f	file:
posix_mkdir	tools/edk2/PythonEFI/edk2module.c	/^posix_mkdir(PyObject *self, PyObject *args)$/;"	f	file:
posix_mkfifo	tools/edk2/PythonEFI/edk2module.c	/^posix_mkfifo(PyObject *self, PyObject *args)$/;"	f	file:
posix_mknod	tools/edk2/PythonEFI/edk2module.c	/^posix_mknod(PyObject *self, PyObject *args)$/;"	f	file:
posix_nice	tools/edk2/PythonEFI/edk2module.c	/^posix_nice(PyObject *self, PyObject *args)$/;"	f	file:
posix_open	tools/edk2/PythonEFI/edk2module.c	/^posix_open(PyObject *self, PyObject *args)$/;"	f	file:
posix_openpty	tools/edk2/PythonEFI/edk2module.c	/^posix_openpty(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_pathconf	tools/edk2/PythonEFI/edk2module.c	/^posix_pathconf(PyObject *self, PyObject *args)$/;"	f	file:
posix_pipe	tools/edk2/PythonEFI/edk2module.c	/^posix_pipe(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_plock	tools/edk2/PythonEFI/edk2module.c	/^posix_plock(PyObject *self, PyObject *args)$/;"	f	file:
posix_popen	tools/edk2/PythonEFI/edk2module.c	/^posix_popen(PyObject *self, PyObject *args)$/;"	f	file:
posix_putenv	tools/edk2/PythonEFI/edk2module.c	/^posix_putenv(PyObject *self, PyObject *args)$/;"	f	file:
posix_putenv_garbage	tools/edk2/PythonEFI/edk2module.c	/^static PyObject *posix_putenv_garbage;$/;"	v	file:
posix_rdmsr	tools/edk2/PythonEFI/edk2module.c	/^posix_rdmsr(PyObject *self, PyObject *args)$/;"	f	file:
posix_read	tools/edk2/PythonEFI/edk2module.c	/^posix_read(PyObject *self, PyObject *args)$/;"	f	file:
posix_readio	tools/edk2/PythonEFI/edk2module.c	/^posix_readio(PyObject *self, PyObject *args)$/;"	f	file:
posix_readlink	tools/edk2/PythonEFI/edk2module.c	/^posix_readlink(PyObject *self, PyObject *args)$/;"	f	file:
posix_readmem	tools/edk2/PythonEFI/edk2module.c	/^posix_readmem(PyObject *self, PyObject *args)$/;"	f	file:
posix_readmem_dword	tools/edk2/PythonEFI/edk2module.c	/^posix_readmem_dword(PyObject *self, PyObject *args)$/;"	f	file:
posix_readpci	tools/edk2/PythonEFI/edk2module.c	/^posix_readpci(PyObject *self, PyObject *args)$/;"	f	file:
posix_rename	tools/edk2/PythonEFI/edk2module.c	/^posix_rename(PyObject *self, PyObject *args)$/;"	f	file:
posix_rmdir	tools/edk2/PythonEFI/edk2module.c	/^posix_rmdir(PyObject *self, PyObject *args)$/;"	f	file:
posix_setegid	tools/edk2/PythonEFI/edk2module.c	/^posix_setegid (PyObject *self, PyObject *args)$/;"	f	file:
posix_seteuid	tools/edk2/PythonEFI/edk2module.c	/^posix_seteuid (PyObject *self, PyObject *args)$/;"	f	file:
posix_setgid	tools/edk2/PythonEFI/edk2module.c	/^posix_setgid(PyObject *self, PyObject *args)$/;"	f	file:
posix_setgroups	tools/edk2/PythonEFI/edk2module.c	/^posix_setgroups(PyObject *self, PyObject *groups)$/;"	f	file:
posix_setpgid	tools/edk2/PythonEFI/edk2module.c	/^posix_setpgid(PyObject *self, PyObject *args)$/;"	f	file:
posix_setpgrp	tools/edk2/PythonEFI/edk2module.c	/^posix_setpgrp(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_setregid	tools/edk2/PythonEFI/edk2module.c	/^posix_setregid (PyObject *self, PyObject *args)$/;"	f	file:
posix_setresgid	tools/edk2/PythonEFI/edk2module.c	/^posix_setresgid (PyObject *self, PyObject *args)$/;"	f	file:
posix_setresuid	tools/edk2/PythonEFI/edk2module.c	/^posix_setresuid (PyObject *self, PyObject *args)$/;"	f	file:
posix_setreuid	tools/edk2/PythonEFI/edk2module.c	/^posix_setreuid (PyObject *self, PyObject *args)$/;"	f	file:
posix_setsid	tools/edk2/PythonEFI/edk2module.c	/^posix_setsid(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_setuid	tools/edk2/PythonEFI/edk2module.c	/^posix_setuid(PyObject *self, PyObject *args)$/;"	f	file:
posix_spawnv	tools/edk2/PythonEFI/edk2module.c	/^posix_spawnv(PyObject *self, PyObject *args)$/;"	f	file:
posix_spawnve	tools/edk2/PythonEFI/edk2module.c	/^posix_spawnve(PyObject *self, PyObject *args)$/;"	f	file:
posix_spawnvp	tools/edk2/PythonEFI/edk2module.c	/^posix_spawnvp(PyObject *self, PyObject *args)$/;"	f	file:
posix_spawnvpe	tools/edk2/PythonEFI/edk2module.c	/^posix_spawnvpe(PyObject *self, PyObject *args)$/;"	f	file:
posix_stat	tools/edk2/PythonEFI/edk2module.c	/^posix_stat(PyObject *self, PyObject *args)$/;"	f	file:
posix_statvfs	tools/edk2/PythonEFI/edk2module.c	/^posix_statvfs(PyObject *self, PyObject *args)$/;"	f	file:
posix_strerror	tools/edk2/PythonEFI/edk2module.c	/^posix_strerror(PyObject *self, PyObject *args)$/;"	f	file:
posix_swsmi	tools/edk2/PythonEFI/edk2module.c	/^posix_swsmi(PyObject *self, PyObject *args)$/;"	f	file:
posix_symlink	tools/edk2/PythonEFI/edk2module.c	/^posix_symlink(PyObject *self, PyObject *args)$/;"	f	file:
posix_sysconf	tools/edk2/PythonEFI/edk2module.c	/^posix_sysconf(PyObject *self, PyObject *args)$/;"	f	file:
posix_system	tools/edk2/PythonEFI/edk2module.c	/^posix_system(PyObject *self, PyObject *args)$/;"	f	file:
posix_tcgetpgrp	tools/edk2/PythonEFI/edk2module.c	/^posix_tcgetpgrp(PyObject *self, PyObject *args)$/;"	f	file:
posix_tcsetpgrp	tools/edk2/PythonEFI/edk2module.c	/^posix_tcsetpgrp(PyObject *self, PyObject *args)$/;"	f	file:
posix_tempnam	tools/edk2/PythonEFI/edk2module.c	/^posix_tempnam(PyObject *self, PyObject *args)$/;"	f	file:
posix_times	tools/edk2/PythonEFI/edk2module.c	/^posix_times(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_tmpfile	tools/edk2/PythonEFI/edk2module.c	/^posix_tmpfile(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_tmpnam	tools/edk2/PythonEFI/edk2module.c	/^posix_tmpnam(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_umask	tools/edk2/PythonEFI/edk2module.c	/^posix_umask(PyObject *self, PyObject *args)$/;"	f	file:
posix_unlink	tools/edk2/PythonEFI/edk2module.c	/^posix_unlink(PyObject *self, PyObject *args)$/;"	f	file:
posix_unsetenv	tools/edk2/PythonEFI/edk2module.c	/^posix_unsetenv(PyObject *self, PyObject *args)$/;"	f	file:
posix_utime	tools/edk2/PythonEFI/edk2module.c	/^posix_utime(PyObject *self, PyObject *args)$/;"	f	file:
posix_wait	tools/edk2/PythonEFI/edk2module.c	/^posix_wait(PyObject *self, PyObject *noargs)$/;"	f	file:
posix_wait3	tools/edk2/PythonEFI/edk2module.c	/^posix_wait3(PyObject *self, PyObject *args)$/;"	f	file:
posix_wait4	tools/edk2/PythonEFI/edk2module.c	/^posix_wait4(PyObject *self, PyObject *args)$/;"	f	file:
posix_waitpid	tools/edk2/PythonEFI/edk2module.c	/^posix_waitpid(PyObject *self, PyObject *args)$/;"	f	file:
posix_write	tools/edk2/PythonEFI/edk2module.c	/^posix_write(PyObject *self, PyObject *args)$/;"	f	file:
posix_writeio	tools/edk2/PythonEFI/edk2module.c	/^posix_writeio(PyObject *self, PyObject *args)$/;"	f	file:
posix_writemem	tools/edk2/PythonEFI/edk2module.c	/^posix_writemem(PyObject *self, PyObject *args)$/;"	f	file:
posix_writemem_dword	tools/edk2/PythonEFI/edk2module.c	/^posix_writemem_dword(PyObject *self, PyObject *args)$/;"	f	file:
posix_writepci	tools/edk2/PythonEFI/edk2module.c	/^posix_writepci(PyObject *self, PyObject *args)$/;"	f	file:
posix_wrmsr	tools/edk2/PythonEFI/edk2module.c	/^posix_wrmsr(PyObject *self, PyObject *args)$/;"	f	file:
print_ACPI_table_list	source/tool/chipsec/hal/acpi.py	/^    def print_ACPI_table_list(self):$/;"	m	class:ACPI
print_banner	source/tool/chipsec_main.py	/^    def print_banner(self):$/;"	m	class:ChipsecMain
print_banner	source/tool/chipsec_util.py	/^    def print_banner(self):$/;"	m	class:ChipsecUtil
print_buffer	source/tool/chipsec/logger.py	/^def print_buffer( arr, length = 16 ):$/;"	f
print_chipset	source/tool/chipsec/chipset.py	/^    def print_chipset(self):$/;"	m	class:Chipset
print_cpu_set_t	source/tool/chipsec/helper/linux/cores.c	/^ void print_cpu_set_t(cpu_set_t mask){$/;"	f
print_efi_variable	source/tool/chipsec/hal/uefi.py	/^def print_efi_variable( offset, efi_var_buf, EFI_var_header, efi_var_name, efi_var_data, efi_var_guid, efi_var_attributes ):$/;"	f
print_loaded_modules	source/tool/chipsec_main.py	/^    def print_loaded_modules(self):$/;"	m	class:ChipsecMain
print_pci_devices	source/tool/chipsec/hal/pci.py	/^def print_pci_devices( _devices ):$/;"	f
print_register	source/tool/chipsec/chipset.py	/^def print_register( _cs, reg_name, reg_val ):$/;"	f
print_sorted_EFI_variables	source/tool/chipsec/hal/uefi.py	/^def print_sorted_EFI_variables( variables ):$/;"	f
print_stat	source/drivers/linux/chipsec_km.c	/^void print_stat(efi_status_t stat)$/;"	f
print_supported_chipsets	source/tool/chipsec/chipset.py	/^def print_supported_chipsets():$/;"	f
private_mapping_ok	source/drivers/linux/chipsec_km.c	/^static inline int private_mapping_ok(struct vm_area_struct *vma)$/;"	f	file:
produce_te	source/tool/chipsec/modules/tools/secureboot/te.py	/^def produce_te(fname, outfname):$/;"	f
program_name	source/drivers/linux/chipsec_km.c	/^const char program_name[] = "chipsec";$/;"	v
quadpart	source/drivers/linux/include/chipsec.h	/^   physaddr_t quadpart;$/;"	m	union:__anon3
r10	source/drivers/linux/chipsec_km.c	/^   unsigned int r10;   \/\/ r10 - 0x20;$/;"	m	struct:tagSMI_CONTEXT	file:
r11	source/drivers/linux/chipsec_km.c	/^   unsigned int r11;   \/\/ r11 - 0x28;$/;"	m	struct:tagSMI_CONTEXT	file:
r12	source/drivers/linux/chipsec_km.c	/^   unsigned int r12;   \/\/ r12 - 0x30;$/;"	m	struct:tagSMI_CONTEXT	file:
r8	source/drivers/linux/chipsec_km.c	/^   unsigned int r8;     \/\/ r8 - 0x10;$/;"	m	struct:tagSMI_CONTEXT	file:
r9	source/drivers/linux/chipsec_km.c	/^   unsigned int r9;     \/\/ r9 - 0x18;$/;"	m	struct:tagSMI_CONTEXT	file:
rd	tools/edk2/PythonEFI/edk2module.c	/^    int rd;$/;"	m	struct:pipe_ref	file:
read_EFI_variables	source/tool/chipsec/hal/uefi.py	/^    def read_EFI_variables( self, efi_var_store, authvars ):$/;"	m	class:UEFI
read_EFI_variables_from_SPI	source/tool/chipsec/hal/uefi.py	/^    def read_EFI_variables_from_SPI( self, BIOS_region_base, BIOS_region_size ):$/;"	m	class:UEFI
read_EFI_variables_from_file	source/tool/chipsec/hal/uefi.py	/^    def read_EFI_variables_from_file( self, filename ):$/;"	m	class:UEFI
read_IO_BAR_reg	source/tool/chipsec/hal/iobar.py	/^    def read_IO_BAR_reg( self, bar_name, offset, size ):$/;"	m	class:iobar
read_MMIO	source/tool/chipsec/hal/mmio.py	/^def read_MMIO( cs, bar_base, size ):$/;"	f
read_MMIOBAR_reg	source/tool/chipsec/hal/mmio.py	/^def read_MMIOBAR_reg(cs, bar_id, offset ):$/;"	f
read_MMIO_BAR_reg	source/tool/chipsec/hal/mmio.py	/^def read_MMIO_BAR_reg(cs, bar_name, offset, size=4 ):$/;"	f
read_MMIO_reg	source/tool/chipsec/hal/mmio.py	/^def read_MMIO_reg(cs, bar_base, offset, size=4 ):$/;"	f
read_MMIO_reg_byte	source/tool/chipsec/hal/mmio.py	/^def read_MMIO_reg_byte(cs, bar_base, offset ):$/;"	f
read_MMIO_reg_dword	source/tool/chipsec/hal/mmio.py	/^def read_MMIO_reg_dword(cs, bar_base, offset ):$/;"	f
read_MMIO_reg_word	source/tool/chipsec/hal/mmio.py	/^def read_MMIO_reg_word(cs, bar_base, offset ):$/;"	f
read_byte	source/tool/chipsec/hal/pci.py	/^    def read_byte(self, bus, device, function, address ):$/;"	m	class:Pci
read_byte	source/tool/chipsec/hal/smbus.py	/^    def read_byte( self, target_address, offset ):$/;"	m	class:SMBus
read_byte	source/tool/chipsec/hal/spd.py	/^    def read_byte( self, offset, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
read_chunk	source/tool/chipsec/file.py	/^def read_chunk( f, size=1024 ):$/;"	f
read_cmos_high	source/tool/chipsec/hal/cmos.py	/^    def read_cmos_high( self, offset ):$/;"	m	class:CMOS
read_cmos_low	source/tool/chipsec/hal/cmos.py	/^    def read_cmos_low( self, offset ):$/;"	m	class:CMOS
read_cr	source/tool/chipsec/hal/cr.py	/^    def read_cr(self, cpu_thread_id, cr_number ):$/;"	m	class:CrRegs
read_cr	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_cr(self, cpu_thread_id, cr_number):$/;"	m	class:EfiHelper
read_cr	source/tool/chipsec/helper/linux/helper.py	/^    def read_cr(self, cpu_thread_id, cr_number):$/;"	m	class:LinuxHelper
read_cr	source/tool/chipsec/helper/oshelper.py	/^    def read_cr(self, cpu_thread_id, cr_number):$/;"	m	class:OsHelper
read_cr	source/tool/chipsec/helper/win/win32helper.py	/^    def read_cr(self, cpu_thread_id, cr_number):$/;"	m	class:Win32Helper
read_dword	source/tool/chipsec/hal/pci.py	/^    def read_dword(self, bus, device, function, address ):$/;"	m	class:Pci
read_file	source/tool/chipsec/file.py	/^def read_file( filename, size=0 ):$/;"	f
read_full	source/drivers/linux/chipsec_km.c	1451;"	d	file:
read_io_port	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_io_port( self, io_port, size ):$/;"	m	class:EfiHelper
read_io_port	source/tool/chipsec/helper/linux/helper.py	/^    def read_io_port(self, io_port, size):$/;"	m	class:LinuxHelper
read_io_port	source/tool/chipsec/helper/oshelper.py	/^    def read_io_port( self, io_port, size ):$/;"	m	class:OsHelper
read_io_port	source/tool/chipsec/helper/win/win32helper.py	/^    def read_io_port( self, io_port, size ):$/;"	m	class:Win32Helper
read_mem	source/drivers/linux/chipsec_km.c	/^static ssize_t read_mem(struct file * file, char __user * buf, size_t count, loff_t *ppos)$/;"	f	file:
read_mmcfg_reg	source/tool/chipsec/hal/mmio.py	/^def read_mmcfg_reg( cs, bus, dev, fun, off, size ):$/;"	f
read_mmio_reg	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_mmio_reg(self, phys_address, size):$/;"	m	class:EfiHelper
read_mmio_reg	source/tool/chipsec/helper/linux/helper.py	/^    def read_mmio_reg(self, phys_address, size):$/;"	m	class:LinuxHelper
read_mmio_reg	source/tool/chipsec/helper/oshelper.py	/^    def read_mmio_reg( self, phys_address, size ):$/;"	m	class:OsHelper
read_mmio_reg	source/tool/chipsec/helper/win/win32helper.py	/^    def read_mmio_reg( self, phys_address, size ):$/;"	m	class:Win32Helper
read_msr	source/tool/chipsec/hal/msr.py	/^    def read_msr( self, cpu_thread_id, msr_addr ):$/;"	m	class:Msr
read_msr	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_msr( self, cpu_thread_id, msr_addr ):$/;"	m	class:EfiHelper
read_msr	source/tool/chipsec/helper/linux/helper.py	/^    def read_msr(self, thread_id, msr_addr):$/;"	m	class:LinuxHelper
read_msr	source/tool/chipsec/helper/oshelper.py	/^    def read_msr( self, cpu_thread_id, msr_addr ):$/;"	m	class:OsHelper
read_msr	source/tool/chipsec/helper/win/win32helper.py	/^    def read_msr( self, cpu_thread_id, msr_addr ):$/;"	m	class:Win32Helper
read_pci	source/tool/chipsec/helper/linux/helper.py	/^    def read_pci( self, bus, device, function, address ):$/;"	m	class:LinuxHelper
read_pci_reg	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_pci_reg( self, bus, device, function, address, size ):$/;"	m	class:EfiHelper
read_pci_reg	source/tool/chipsec/helper/linux/helper.py	/^    def read_pci_reg( self, bus, device, function, offset, size = 4 ):$/;"	m	class:LinuxHelper
read_pci_reg	source/tool/chipsec/helper/oshelper.py	/^    def read_pci_reg( self, bus, device, function, address, size ):$/;"	m	class:OsHelper
read_pci_reg	source/tool/chipsec/helper/win/win32helper.py	/^    def read_pci_reg( self, bus, device, function, address, size ):$/;"	m	class:Win32Helper
read_phys_mem	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem(self, phys_address, length ):$/;"	m	class:Memory
read_phys_mem	source/tool/chipsec/helper/efi/efihelper.py	/^    def read_phys_mem( self, phys_address_hi, phys_address_lo, length ):$/;"	m	class:EfiHelper
read_phys_mem	source/tool/chipsec/helper/linux/helper.py	/^    def read_phys_mem(self, phys_address_hi, phys_address_lo, length):$/;"	m	class:LinuxHelper
read_phys_mem	source/tool/chipsec/helper/oshelper.py	/^    def read_phys_mem( self, phys_address_hi, phys_address_lo, length ):$/;"	m	class:OsHelper
read_phys_mem	source/tool/chipsec/helper/win/win32helper.py	/^    def read_phys_mem( self, phys_address_hi, phys_address_lo, length ):$/;"	m	class:Win32Helper
read_phys_mem_64	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_64( self, phys_address_hi, phys_address_lo, length ):$/;"	m	class:Memory
read_phys_mem_byte	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_byte(self, phys_address ):$/;"	m	class:Memory
read_phys_mem_byte_64	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_byte_64(self, phys_address_hi, phys_address_lo ):$/;"	m	class:Memory
read_phys_mem_dword	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_dword(self, phys_address ):$/;"	m	class:Memory
read_phys_mem_dword_64	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_dword_64(self, phys_address_hi, phys_address_lo ):$/;"	m	class:Memory
read_phys_mem_word	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_word(self, phys_address ):$/;"	m	class:Memory
read_phys_mem_word_64	source/tool/chipsec/hal/physmem.py	/^    def read_phys_mem_word_64(self, phys_address_hi, phys_address_lo ):$/;"	m	class:Memory
read_physical_mem	source/tool/chipsec/hal/physmem.py	/^    def read_physical_mem( self, phys_address, length ):$/;"	m	class:Memory
read_physical_mem	source/tool/chipsec/helper/oshelper.py	/^    def read_physical_mem( self, phys_address, length ):$/;"	m	class:OsHelper
read_physical_mem_byte	source/tool/chipsec/hal/physmem.py	/^    def read_physical_mem_byte( self, phys_address ):$/;"	m	class:Memory
read_physical_mem_dword	source/tool/chipsec/hal/physmem.py	/^    def read_physical_mem_dword( self, phys_address ):$/;"	m	class:Memory
read_physical_mem_word	source/tool/chipsec/hal/physmem.py	/^    def read_physical_mem_word( self, phys_address ):$/;"	m	class:Memory
read_port_byte	source/tool/chipsec/hal/io.py	/^    def read_port_byte(self, io_port ):$/;"	m	class:PortIO
read_port_dword	source/tool/chipsec/hal/io.py	/^    def read_port_dword(self, io_port ):$/;"	m	class:PortIO
read_port_word	source/tool/chipsec/hal/io.py	/^    def read_port_word(self, io_port ):$/;"	m	class:PortIO
read_range	source/tool/chipsec/hal/smbus.py	/^    def read_range( self, target_address, start_offset, size ):$/;"	m	class:SMBus
read_range	source/tool/chipsec/hal/spd.py	/^    def read_range( self, start_offset, size, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
read_register	source/tool/chipsec/chipset.py	/^def read_register( _cs, reg_name, cpu_thread=0 ):$/;"	f
read_register_dict	source/tool/chipsec/chipset.py	/^def read_register_dict( _cs, reg_name):$/;"	f
read_register_field	source/tool/chipsec/chipset.py	/^def read_register_field( _cs, reg_name, field_name, preserve_field_position=False ):$/;"	f
read_spi	source/tool/chipsec/hal/spi.py	/^    def read_spi(self, spi_fla, data_byte_count ):$/;"	m	class:SPI
read_spi_to_file	source/tool/chipsec/hal/spi.py	/^    def read_spi_to_file(self, spi_fla, data_byte_count, filename ):$/;"	m	class:SPI
read_ucode_file	source/tool/chipsec/hal/ucode.py	/^def read_ucode_file( ucode_filename ):$/;"	f
read_word	source/tool/chipsec/hal/pci.py	/^    def read_word(self, bus, device, function, address ):$/;"	m	class:Pci
register_has_field	source/tool/chipsec/chipset.py	/^def register_has_field( _cs, reg_name, field_name ):$/;"	f
remap	source/tool/chipsec/modules/remap.py	/^class remap(BaseModule):$/;"	c
replace_bootloader	source/tool/chipsec/modules/tools/secureboot/te.py	/^def replace_bootloader( bootloader_paths, new_bootloader_file, do_mount=True ):$/;"	f
replace_efi_binary	source/tool/chipsec/modules/tools/secureboot/te.py	/^def replace_efi_binary(orig_efi_binary, new_efi_binary):$/;"	f
replace_header	source/tool/chipsec/modules/tools/secureboot/te.py	/^def replace_header(data):$/;"	f
restore_bootloader	source/tool/chipsec/modules/tools/secureboot/te.py	/^def restore_bootloader( bootloader_paths, do_mount=True ):$/;"	f
restore_efi_binary	source/tool/chipsec/modules/tools/secureboot/te.py	/^def restore_efi_binary( orig_efi_binary ):$/;"	f
run	source/tool/chipsec/module.py	/^    def run( self, module_argv ):$/;"	m	class:Module
run	source/tool/chipsec/module_common.py	/^    def run( self, module_argv ):$/;"	m	class:BaseModule
run	source/tool/chipsec/modules/common/bios_kbrd_buffer.py	/^    def run( self, module_argv ):$/;"	m	class:bios_kbrd_buffer
run	source/tool/chipsec/modules/common/bios_smi.py	/^    def run( self, module_argv ):$/;"	m	class:bios_smi
run	source/tool/chipsec/modules/common/bios_ts.py	/^    def run(self, module_argv ):$/;"	m	class:bios_ts
run	source/tool/chipsec/modules/common/bios_wp.py	/^    def run(self, module_argv ):$/;"	m	class:bios_wp
run	source/tool/chipsec/modules/common/secureboot/variables.py	/^    def run( self,  module_argv ):$/;"	m	class:variables
run	source/tool/chipsec/modules/common/smm.py	/^    def run( self, module_argv ):$/;"	m	class:smm
run	source/tool/chipsec/modules/common/smrr.py	/^    def run( self, module_argv ):$/;"	m	class:smrr
run	source/tool/chipsec/modules/common/spi_desc.py	/^    def run( self, module_argv ):$/;"	m	class:spi_desc
run	source/tool/chipsec/modules/common/spi_lock.py	/^    def run( self, module_argv ):$/;"	m	class:spi_lock
run	source/tool/chipsec/modules/common/uefi/access_uefispec.py	/^    def run( self,  module_argv ):$/;"	m	class:access_uefispec
run	source/tool/chipsec/modules/module_template.py	/^    def run( self, module_argv ):$/;"	m	class:module_template
run	source/tool/chipsec/modules/remap.py	/^    def run( self, module_argv ):$/;"	m	class:remap
run	source/tool/chipsec/modules/smm_dma.py	/^    def run( self, module_argv ):$/;"	m	class:smm_dma
run	source/tool/chipsec/modules/tools/secureboot/te.py	/^    def run( self, module_argv ):$/;"	m	class:te
run	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def run( self, module_argv ):$/;"	m	class:smm_ptr
run_all_modules	source/tool/chipsec_main.py	/^    def run_all_modules(self):$/;"	m	class:ChipsecMain
run_loaded_modules	source/tool/chipsec_main.py	/^    def run_loaded_modules(self):$/;"	m	class:ChipsecMain
run_module	source/tool/chipsec_main.py	/^    def run_module( self, modx, module_argv ):$/;"	m	class:ChipsecMain
saveXML	source/tool/chipsec/logger.py	/^    def saveXML(self):$/;"	m	class:Logger
saveXML	source/tool/chipsec/xmlout.py	/^    def saveXML( self ):$/;"	m	class:xmlAux
save_file_info	source/tool/chipsec/hal/spi_uefi.py	/^def save_file_info( cur_offset, Name, Type, Attributes, State, Checksum, Size, file_path, fCalcSum ):$/;"	f
save_section_info	source/tool/chipsec/hal/spi_uefi.py	/^def save_section_info( cur_offset, Name, Type, file_path ):$/;"	f
save_vol_info	source/tool/chipsec/hal/spi_uefi.py	/^def save_vol_info( FvOffset, FsGuid, FvLength, FvAttributes, FvHeaderLength, FvChecksum, ExtHeaderOffset, file_path, CalcSum ):$/;"	f
savimp	source/tool/chipsec_main.py	/^savimp = __builtin__.__import__$/;"	v
scan_single_bit_mask	source/tool/chipsec/cfg/common.py	/^    def scan_single_bit_mask(self,mask):$/;"	m	class:Cfg
script_opcodes	source/tool/chipsec/hal/uefi_common.py	/^script_opcodes = {$/;"	v
script_width_formats	source/tool/chipsec/hal/uefi_common.py	/^script_width_formats = {$/;"	v
script_width_sizes	source/tool/chipsec/hal/uefi_common.py	/^script_width_sizes = {$/;"	v
send_NMI	source/tool/chipsec/hal/interrupts.py	/^    def send_NMI( self ):$/;"	m	class:Interrupts
send_SMI_APMC	source/tool/chipsec/hal/interrupts.py	/^    def send_SMI_APMC( self, SMI_code_port_value, SMI_data_port_value ):$/;"	m	class:Interrupts
send_SW_SMI	source/tool/chipsec/hal/interrupts.py	/^    def send_SW_SMI( self, thread_id, SMI_code_port_value, SMI_data_port_value, _rax, _rbx, _rcx, _rdx, _rsi, _rdi ):$/;"	m	class:Interrupts
send_smi	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def send_smi( self, thread_id, smi_code, smi_data, name, desc, rax, rbx, rcx, rdx, rsi, rdi ):$/;"	m	class:smm_ptr
send_sw_smi	source/tool/chipsec/helper/efi/efihelper.py	/^    def send_sw_smi( self, cpu_thread_id, SMI_code_data, _rax, _rbx, _rcx, _rdx, _rsi, _rdi ):$/;"	m	class:EfiHelper
send_sw_smi	source/tool/chipsec/helper/linux/helper.py	/^    def send_sw_smi( self, cpu_thread_id, SMI_code_data, _rax, _rbx, _rcx, _rdx, _rsi, _rdi ):$/;"	m	class:LinuxHelper
send_sw_smi	source/tool/chipsec/helper/oshelper.py	/^    def send_sw_smi( self, cpu_thread_id, SMI_code_data, _rax, _rbx, _rcx, _rdx, _rsi, _rdi ):$/;"	m	class:OsHelper
send_sw_smi	source/tool/chipsec/helper/win/win32helper.py	/^    def send_sw_smi( self, cpu_thread_id, SMI_code_data, _rax, _rbx, _rcx, _rdx, _rsi, _rdi ):$/;"	m	class:Win32Helper
set_EFI_variable	source/tool/chipsec/hal/uefi.py	/^    def set_EFI_variable( self, name, guid, var, attrs=None ):$/;"	m	class:UEFI
set_EFI_variable	source/tool/chipsec/helper/efi/efihelper.py	/^    def set_EFI_variable(self, name, guidstr, data, attrs=0x7):$/;"	m	class:EfiHelper
set_EFI_variable	source/tool/chipsec/helper/linux/helper.py	/^    def set_EFI_variable(self, name, guid, value, attrs=None):$/;"	m	class:LinuxHelper
set_EFI_variable	source/tool/chipsec/helper/oshelper.py	/^    def set_EFI_variable( self, name, guid, var, attrs=None ):$/;"	m	class:OsHelper
set_EFI_variable	source/tool/chipsec/helper/win/win32helper.py	/^    def set_EFI_variable( self, name, guid, var, attrs=None ):$/;"	m	class:Win32Helper
set_EFI_variable_from_file	source/tool/chipsec/hal/uefi.py	/^    def set_EFI_variable_from_file( self, name, guid, filename, attrs=None ):$/;"	m	class:UEFI
set_FWType	source/tool/chipsec/hal/uefi.py	/^    def set_FWType( self, efi_nvram_format ):$/;"	m	class:UEFI
set_affinity	source/tool/chipsec/helper/linux/helper.py	/^    def set_affinity(self, thread_id):$/;"	m	class:LinuxHelper
set_always_flush	source/tool/chipsec/logger.py	/^    def set_always_flush( self, val ):$/;"	m	class:Logger
set_control	source/tool/chipsec/chipset.py	/^def set_control( _cs, control_name, control_value, cpu_thread=0 ):$/;"	f
set_default_log_file	source/tool/chipsec/logger.py	/^    def set_default_log_file( self ):$/;"	m	class:Logger
set_log_file	source/tool/chipsec/logger.py	/^    def set_log_file( self, name=None ):$/;"	m	class:Logger
set_logfile	source/tool/chipsec_util.py	/^    def set_logfile(self, logfile):$/;"	m	class:ChipsecUtil
set_register_field	source/tool/chipsec/chipset.py	/^def set_register_field( _cs, reg_name, reg_value, field_name, field_value ):$/;"	f
set_status_log_file	source/tool/chipsec/logger.py	/^    def set_status_log_file( self ):$/;"	m	class:Logger
set_time	source/tool/chipsec/xmlout.py	/^    def set_time(self, pTime=None):$/;"	m	class:xmlTestCase
set_xml_file	source/tool/chipsec/logger.py	/^    def set_xml_file(self, name=None):$/;"	m	class:Logger
set_xml_file	source/tool/chipsec/xmlout.py	/^    def set_xml_file(self, name):$/;"	m	class:xmlAux
setaffinity	source/tool/chipsec/helper/linux/cores.c	/^int setaffinity(int thread_id, int *errno_var){	$/;"	f
setctx	source/drivers/linux/amd64/cpu.asm	/^setctx:$/;"	l
setctx_cpuid	source/drivers/linux/amd64/cpu.asm	/^setctx_cpuid:$/;"	l
setctx_cpuid	source/drivers/linux/i386/cpu.asm	/^setctx_cpuid:$/;"	l
setup_confname_table	tools/edk2/PythonEFI/edk2module.c	/^setup_confname_table(struct constdef *table, size_t tablesize,$/;"	f	file:
setup_confname_tables	tools/edk2/PythonEFI/edk2module.c	/^setup_confname_tables(PyObject *module)$/;"	f	file:
sig_types	source/tool/chipsec/hal/uefi_common.py	/^             "4AAFD29D-68DF-49EE-8AA9-347D375665A7": ("EFI_CERT_TYPE_PKCS7_GUID", parse_pkcs7, 0, "PKCS7") }$/;"	v
skipped	source/tool/chipsec_main.py	/^    def skipped(self):     self._skipped = True$/;"	m	class:ExitCode
skipped_check	source/tool/chipsec/xmlout.py	/^    def skipped_check(self, text):$/;"	m	class:xmlAux
smbus	source/tool/chipsec/utilcmd/smbus_cmd.py	/^def smbus(argv):$/;"	f
smi	source/tool/chipsec/utilcmd/interrupts_cmd.py	/^def smi(argv):$/;"	f
smi_desc	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^class smi_desc( object ):$/;"	c
smi_fuzz_iter	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def smi_fuzz_iter( self, thread_id, _addr, _smi_desc, fill_contents=True, restore_contents=False ):$/;"	m	class:smm_ptr
smm	source/tool/chipsec/modules/common/smm.py	/^class smm(BaseModule):$/;"	c
smm_dma	source/tool/chipsec/modules/smm_dma.py	/^class smm_dma(BaseModule):$/;"	c
smm_ptr	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^class smm_ptr(BaseModule):$/;"	c
smrr	source/tool/chipsec/modules/common/smrr.py	/^class smrr(BaseModule):$/;"	c
spd	source/tool/chipsec/utilcmd/spd_cmd.py	/^def spd(argv):$/;"	f
spi	source/tool/chipsec/utilcmd/spi_cmd.py	/^def spi(argv):$/;"	f
spi_desc	source/tool/chipsec/modules/common/spi_desc.py	/^class spi_desc(BaseModule):$/;"	c
spi_lock	source/tool/chipsec/modules/common/spi_lock.py	/^class spi_lock(BaseModule):$/;"	c
spi_reg_read	source/tool/chipsec/hal/spi.py	/^    def spi_reg_read( self, reg, size=4 ):$/;"	m	class:SPI
spi_reg_write	source/tool/chipsec/hal/spi.py	/^    def spi_reg_write( self, reg, value, size=4 ):$/;"	m	class:SPI
spidesc	source/tool/chipsec/utilcmd/spidesc_cmd.py	/^def spidesc(argv):$/;"	f
start	source/tool/chipsec/helper/efi/efihelper.py	/^    def start( self ):$/;"	m	class:EfiHelper
start	source/tool/chipsec/helper/linux/helper.py	/^    def start( self ):$/;"	m	class:LinuxHelper
start	source/tool/chipsec/helper/oshelper.py	/^    def start( self ):$/;"	m	class:OsHelper
start	source/tool/chipsec/helper/win/win32helper.py	/^    def start( self ):$/;"	m	class:Win32Helper
start_module	source/tool/chipsec/logger.py	/^    def start_module( self, module_name ):$/;"	m	class:Logger
start_module	source/tool/chipsec/xmlout.py	/^    def start_module( self, module_name ):$/;"	m	class:xmlAux
start_test	source/tool/chipsec/logger.py	/^    def start_test( self, test_name ):$/;"	m	class:Logger
start_test	source/tool/chipsec/xmlout.py	/^    def start_test(self, test_name):$/;"	m	class:xmlAux
stat_float_times	tools/edk2/PythonEFI/edk2module.c	/^stat_float_times(PyObject* self, PyObject *args)$/;"	f	file:
stat_result_desc	tools/edk2/PythonEFI/edk2module.c	/^static PyStructSequence_Desc stat_result_desc = {$/;"	v	file:
stat_result_fields	tools/edk2/PythonEFI/edk2module.c	/^static PyStructSequence_Field stat_result_fields[] = {$/;"	v	file:
statresult_new	tools/edk2/PythonEFI/edk2module.c	/^statresult_new(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:
status_dict	source/tool/chipsec/helper/efi/efihelper.py	/^status_dict = { 0:"EFI_SUCCESS", 1:"EFI_LOAD_ERROR", 2:"EFI_INVALID_PARAMETER", 3:"EFI_UNSUPPORTED", 4:"EFI_BAD_BUFFER_SIZE", 5:"EFI_BUFFER_TOO_SMALL", 6:"EFI_NOT_READY", 7:"EFI_DEVICE_ERROR", 8:"EFI_WRITE_PROTECTED", 9:"EFI_OUT_OF_RESOURCES", 14:"EFI_NOT_FOUND", 26:"EFI_SECURITY_VIOLATION" }$/;"	v
statvfs_result_desc	tools/edk2/PythonEFI/edk2module.c	/^static PyStructSequence_Desc statvfs_result_desc = {$/;"	v	file:
statvfs_result_fields	tools/edk2/PythonEFI/edk2module.c	/^static PyStructSequence_Field statvfs_result_fields[] = {$/;"	v	file:
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadCR0$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadCR2$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadCR3$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadCR4$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPCIByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPCIDword$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPCIWord$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPortByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPortDword$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _ReadPortWord$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _SendAPMSMI$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteCR0$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteCR2$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteCR3$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteCR4$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteHighCMOSByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WriteLowCMOSByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePCIByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePCIDword$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePCIWord$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePortByte$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePortDword$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _WritePortWord$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __load_idtr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __rdmsr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __store_gdtr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __store_idtr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __store_ldtr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __swsmi$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP __wrmsr$/;"	l
stdENDP	source/drivers/win7/i386/cpu.asm	/^stdENDP _eflags$/;"	l
stop	source/tool/chipsec/chipset.py	/^    def stop( self, start_svc ):$/;"	m	class:Chipset
stop	source/tool/chipsec/helper/efi/efihelper.py	/^    def stop( self ):$/;"	m	class:EfiHelper
stop	source/tool/chipsec/helper/linux/helper.py	/^    def stop( self ):$/;"	m	class:LinuxHelper
stop	source/tool/chipsec/helper/oshelper.py	/^    def stop( self ):$/;"	m	class:OsHelper
stop	source/tool/chipsec/helper/win/win32helper.py	/^    def stop( self ):$/;"	m	class:Win32Helper
structseq_new	tools/edk2/PythonEFI/edk2module.c	/^static newfunc structseq_new;$/;"	v	file:
system_uptime	tools/edk2/PythonEFI/edk2module.c	/^system_uptime(void)$/;"	f	file:
tagCONTEXT	source/drivers/linux/chipsec_km.c	/^typedef struct tagCONTEXT {$/;"	s	file:
tagSMI_CONTEXT	source/drivers/linux/chipsec_km.c	/^typedef struct tagSMI_CONTEXT {$/;"	s	file:
te	source/tool/chipsec/modules/tools/secureboot/te.py	/^class te(BaseModule):$/;"	c
testCaseType	source/tool/chipsec/xmlout.py	/^class testCaseType:$/;"	c
test_config	source/tool/chipsec/modules/tools/smm/smm_ptr.py	/^    def test_config( self, thread_id, _smi_config_fname, _addr, _addr1 ):$/;"	m	class:smm_ptr
ticks_per_second	tools/edk2/PythonEFI/edk2module.c	/^static long ticks_per_second = -1;$/;"	v	file:
tlv_h_size	source/tool/chipsec/hal/uefi_platform.py	/^tlv_h_size = struct.calcsize(TLV_HEADER)$/;"	v
to_file	source/tool/chipsec/xmlout.py	/^    def to_file(self, file_name):$/;"	m	class:xmlTestSuite
to_xml_string	source/tool/chipsec/xmlout.py	/^    def to_xml_string(self):$/;"	m	class:TestSuite
to_xml_string	source/tool/chipsec/xmlout.py	/^    def to_xml_string(self):$/;"	m	class:xmlTestSuite
tool_dir	source/tool/setup.py	/^tool_dir = os.path.dirname(os.path.abspath(__file__))$/;"	v
ts_property	source/tool/chipsec/xmlout.py	/^class ts_property(object):$/;"	c
u	source/drivers/linux/include/chipsec.h	/^   } u;$/;"	m	union:__anon3	typeref:struct:__anon3::__anon4
u64	source/tool/chipsec/helper/linux/cores.c	13;"	d	file:
ucode	source/tool/chipsec/utilcmd/ucode_cmd.py	/^def ucode(argv):$/;"	f
ucode_update_id	source/tool/chipsec/hal/ucode.py	/^    def ucode_update_id(self, cpu_thread_id):$/;"	m	class:Ucode
uefi	source/tool/chipsec/utilcmd/uefi_cmd.py	/^def uefi(argv):$/;"	f
umount	source/tool/chipsec/modules/tools/secureboot/te.py	/^def umount(drive):$/;"	f
uncached_access	source/drivers/linux/chipsec_km.c	/^static inline int uncached_access(struct file *file, unsigned long addr)$/;"	f	file:
unload_module	source/tool/chipsec_main.py	/^    def unload_module( self, module_path ):$/;"	m	class:ChipsecMain
update_ucode	source/tool/chipsec/hal/ucode.py	/^    def update_ucode(self, cpu_thread_id, ucode_file ):$/;"	m	class:Ucode
update_ucode_all_cpus	source/tool/chipsec/hal/ucode.py	/^    def update_ucode_all_cpus(self, ucode_file ):$/;"	m	class:Ucode
url	source/tool/setup.py	/^        url             = 'https:\/\/github.com\/chipsec\/chipsec',$/;"	v
usage	source/tool/chipsec/modules/tools/secureboot/te.py	/^def usage():$/;"	f
usage	source/tool/chipsec_main.py	/^    def usage(self):$/;"	m	class:ChipsecMain
use_efivars	source/tool/chipsec/helper/linux/helper.py	/^    def use_efivars(self):$/;"	m	class:LinuxHelper
use_kernvars	source/tool/chipsec/helper/linux/helper.py	/^    def use_kernvars(self):$/;"	m	class:LinuxHelper
va2pa	source/tool/chipsec/hal/physmem.py	/^    def va2pa( self, va ):$/;"	m	class:Memory
va2pa	source/tool/chipsec/helper/efi/efihelper.py	/^    def va2pa( self, va ):$/;"	m	class:EfiHelper
va2pa	source/tool/chipsec/helper/linux/helper.py	/^    def va2pa( self, va ):$/;"	m	class:LinuxHelper
va2pa	source/tool/chipsec/helper/oshelper.py	/^    def va2pa( self, va ):$/;"	m	class:OsHelper
va2pa	source/tool/chipsec/helper/win/win32helper.py	/^    def va2pa( self, va ):$/;"	m	class:Win32Helper
value	tools/edk2/PythonEFI/edk2module.c	/^    long value;$/;"	m	struct:constdef	file:
variables	source/tool/chipsec/modules/common/secureboot/variables.py	/^class variables(BaseModule):$/;"	c
verify_module_tags	source/tool/chipsec_main.py	/^    def verify_module_tags(self,module):$/;"	m	class:ChipsecMain
version	source/tool/setup.py	/^        version         = '1.2.1',$/;"	v
version	source/tool/setup.py	/^        version = "." + verFile.read()$/;"	v
version	source/tool/setup.py	/^version      = ""$/;"	v
wait_helper	tools/edk2/PythonEFI/edk2module.c	/^wait_helper(pid_t pid, int status, struct rusage *ru)$/;"	f	file:
warn	source/tool/chipsec/logger.py	/^    def warn( self, text ):$/;"	m	class:Logger
warning	source/tool/chipsec_main.py	/^    def warning(self):     self._warning = True$/;"	m	class:ExitCode
win32_popen2	tools/edk2/PythonEFI/edk2module.c	/^win32_popen2(PyObject *self, PyObject  *args)$/;"	f	file:
win32_popen3	tools/edk2/PythonEFI/edk2module.c	/^win32_popen3(PyObject *self, PyObject *args)$/;"	f	file:
win32_popen4	tools/edk2/PythonEFI/edk2module.c	/^win32_popen4(PyObject *self, PyObject  *args)$/;"	f	file:
wr	tools/edk2/PythonEFI/edk2module.c	/^    int wr;$/;"	m	struct:pipe_ref	file:
write_IO_BAR_reg	source/tool/chipsec/hal/iobar.py	/^    def write_IO_BAR_reg( self, bar_name, offset, size, value ):$/;"	m	class:iobar
write_MMIOBAR_reg	source/tool/chipsec/hal/mmio.py	/^def write_MMIOBAR_reg(cs, bar_id, offset, dword_value ):$/;"	f
write_MMIO_BAR_reg	source/tool/chipsec/hal/mmio.py	/^def write_MMIO_BAR_reg(cs, bar_name, offset, value, size=4 ):$/;"	f
write_MMIO_reg	source/tool/chipsec/hal/mmio.py	/^def write_MMIO_reg(cs, bar_base, offset, value, size=4 ):$/;"	f
write_MMIO_reg_byte	source/tool/chipsec/hal/mmio.py	/^def write_MMIO_reg_byte(cs, bar_base, offset, value ):$/;"	f
write_MMIO_reg_dword	source/tool/chipsec/hal/mmio.py	/^def write_MMIO_reg_dword(cs, bar_base, offset, value ):$/;"	f
write_MMIO_reg_word	source/tool/chipsec/hal/mmio.py	/^def write_MMIO_reg_word(cs, bar_base, offset, value ):$/;"	f
write_byte	source/tool/chipsec/hal/pci.py	/^    def write_byte(self, bus, device, function, address, byte_value ):$/;"	m	class:Pci
write_byte	source/tool/chipsec/hal/smbus.py	/^    def write_byte( self, target_address, offset, value ):$/;"	m	class:SMBus
write_byte	source/tool/chipsec/hal/spd.py	/^    def write_byte( self, offset, value, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
write_cmos_high	source/tool/chipsec/hal/cmos.py	/^    def write_cmos_high( self, offset, value ):$/;"	m	class:CMOS
write_cmos_low	source/tool/chipsec/hal/cmos.py	/^    def write_cmos_low( self, offset, value ):$/;"	m	class:CMOS
write_cr	source/tool/chipsec/hal/cr.py	/^    def write_cr(self, cpu_thread_id, cr_number, value ):$/;"	m	class:CrRegs
write_cr	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_cr(self, cpu_thread_id, cr_number, value):$/;"	m	class:EfiHelper
write_cr	source/tool/chipsec/helper/linux/helper.py	/^    def write_cr(self, cpu_thread_id, cr_number, value):$/;"	m	class:LinuxHelper
write_cr	source/tool/chipsec/helper/oshelper.py	/^    def write_cr(self, cpu_thread_id, cr_number, value):$/;"	m	class:OsHelper
write_cr	source/tool/chipsec/helper/win/win32helper.py	/^    def write_cr(self, cpu_thread_id, cr_number, value):$/;"	m	class:Win32Helper
write_dword	source/tool/chipsec/hal/pci.py	/^    def write_dword( self, bus, device, function, address, dword_value ):$/;"	m	class:Pci
write_file	source/tool/chipsec/file.py	/^def write_file( filename, buffer, append=False ):$/;"	f
write_io_port	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_io_port( self, io_port, value, size ):$/;"	m	class:EfiHelper
write_io_port	source/tool/chipsec/helper/linux/helper.py	/^    def write_io_port( self, io_port, value, size ):$/;"	m	class:LinuxHelper
write_io_port	source/tool/chipsec/helper/oshelper.py	/^    def write_io_port( self, io_port, value, size ):$/;"	m	class:OsHelper
write_io_port	source/tool/chipsec/helper/win/win32helper.py	/^    def write_io_port( self, io_port, value, size ):$/;"	m	class:Win32Helper
write_mem	source/drivers/linux/chipsec_km.c	/^static ssize_t write_mem(struct file * file, const char __user * buf, size_t count, loff_t *ppos)$/;"	f	file:
write_mmcfg_reg	source/tool/chipsec/hal/mmio.py	/^def write_mmcfg_reg( cs, bus, dev, fun, off, size, value ):$/;"	f
write_mmio_reg	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_mmio_reg(self, phys_address, size, value):$/;"	m	class:EfiHelper
write_mmio_reg	source/tool/chipsec/helper/linux/helper.py	/^    def write_mmio_reg(self, phys_address, size, value):$/;"	m	class:LinuxHelper
write_mmio_reg	source/tool/chipsec/helper/oshelper.py	/^    def write_mmio_reg( self, phys_address, size, value ):$/;"	m	class:OsHelper
write_mmio_reg	source/tool/chipsec/helper/win/win32helper.py	/^    def write_mmio_reg( self, phys_address, size, value ):$/;"	m	class:Win32Helper
write_msr	source/tool/chipsec/hal/msr.py	/^    def write_msr( self, cpu_thread_id, msr_addr, eax, edx ):$/;"	m	class:Msr
write_msr	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_msr( self, cpu_thread_id, msr_addr, eax, edx ):$/;"	m	class:EfiHelper
write_msr	source/tool/chipsec/helper/linux/helper.py	/^    def write_msr(self, thread_id, msr_addr, eax, edx):$/;"	m	class:LinuxHelper
write_msr	source/tool/chipsec/helper/oshelper.py	/^    def write_msr( self, cpu_thread_id, msr_addr, eax, edx ):$/;"	m	class:OsHelper
write_msr	source/tool/chipsec/helper/win/win32helper.py	/^    def write_msr( self, cpu_thread_id, msr_addr, eax, edx ):$/;"	m	class:Win32Helper
write_pci_reg	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_pci_reg( self, bus, device, function, address, value, size ):$/;"	m	class:EfiHelper
write_pci_reg	source/tool/chipsec/helper/linux/helper.py	/^    def write_pci_reg( self, bus, device, function, offset, value, size = 4 ):$/;"	m	class:LinuxHelper
write_pci_reg	source/tool/chipsec/helper/oshelper.py	/^    def write_pci_reg( self, bus, device, function, address, value, size ):$/;"	m	class:OsHelper
write_pci_reg	source/tool/chipsec/helper/win/win32helper.py	/^    def write_pci_reg( self, bus, device, function, address, value, size ):$/;"	m	class:Win32Helper
write_phys_mem	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem(self, phys_address, length, buf ):$/;"	m	class:Memory
write_phys_mem	source/tool/chipsec/helper/efi/efihelper.py	/^    def write_phys_mem( self, phys_address_hi, phys_address_lo, length, buf ):$/;"	m	class:EfiHelper
write_phys_mem	source/tool/chipsec/helper/linux/helper.py	/^    def write_phys_mem(self, phys_address_hi, phys_address_lo, sz, newval):$/;"	m	class:LinuxHelper
write_phys_mem	source/tool/chipsec/helper/oshelper.py	/^    def write_phys_mem( self, phys_address_hi, phys_address_lo, length, buf ):$/;"	m	class:OsHelper
write_phys_mem	source/tool/chipsec/helper/win/win32helper.py	/^    def write_phys_mem( self, phys_address_hi, phys_address_lo, length, buf ):$/;"	m	class:Win32Helper
write_phys_mem_64	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_64( self, phys_address_hi, phys_address_lo, length, buf ):$/;"	m	class:Memory
write_phys_mem_byte	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_byte( self, phys_address, byte_value ):$/;"	m	class:Memory
write_phys_mem_byte_64	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_byte_64( self, phys_address_hi, phys_address_lo, byte_value ):$/;"	m	class:Memory
write_phys_mem_dword	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_dword( self, phys_address, dword_value ):$/;"	m	class:Memory
write_phys_mem_dword_64	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_dword_64( self, phys_address_hi, phys_address_lo, dword_value ):$/;"	m	class:Memory
write_phys_mem_word	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_word( self, phys_address, word_value ):$/;"	m	class:Memory
write_phys_mem_word_64	source/tool/chipsec/hal/physmem.py	/^    def write_phys_mem_word_64( self, phys_address_hi, phys_address_lo, word_value ):$/;"	m	class:Memory
write_physical_mem	source/tool/chipsec/hal/physmem.py	/^    def write_physical_mem( self, phys_address, length, buf ):$/;"	m	class:Memory
write_physical_mem	source/tool/chipsec/helper/oshelper.py	/^    def write_physical_mem( self, phys_address, length, buf ):$/;"	m	class:OsHelper
write_physical_mem_byte	source/tool/chipsec/hal/physmem.py	/^    def write_physical_mem_byte( self, phys_address, byte_value ):$/;"	m	class:Memory
write_physical_mem_dword	source/tool/chipsec/hal/physmem.py	/^    def write_physical_mem_dword( self, phys_address, dword_value ):$/;"	m	class:Memory
write_physical_mem_word	source/tool/chipsec/hal/physmem.py	/^    def write_physical_mem_word( self, phys_address, word_value ):$/;"	m	class:Memory
write_port_byte	source/tool/chipsec/hal/io.py	/^    def write_port_byte(self, io_port, value ):$/;"	m	class:PortIO
write_port_dword	source/tool/chipsec/hal/io.py	/^    def write_port_dword(self, io_port, value ):$/;"	m	class:PortIO
write_port_word	source/tool/chipsec/hal/io.py	/^    def write_port_word(self, io_port, value ):$/;"	m	class:PortIO
write_range	source/tool/chipsec/hal/smbus.py	/^    def write_range( self, target_address, start_offset, buffer ):$/;"	m	class:SMBus
write_range	source/tool/chipsec/hal/spd.py	/^    def write_range( self, start_offset, buffer, device=SPD_SMBUS_ADDRESS ):$/;"	m	class:SPD
write_register	source/tool/chipsec/chipset.py	/^def write_register( _cs, reg_name, reg_value, cpu_thread=0 ):$/;"	f
write_register_field	source/tool/chipsec/chipset.py	/^def write_register_field( _cs, reg_name, field_name, field_value, cpu_thread=0 ):$/;"	f
write_spi	source/tool/chipsec/hal/spi.py	/^    def write_spi(self, spi_fla, buf ):$/;"	m	class:SPI
write_spi_from_file	source/tool/chipsec/hal/spi.py	/^    def write_spi_from_file(self, spi_fla, filename ):$/;"	m	class:SPI
write_word	source/tool/chipsec/hal/pci.py	/^    def write_word(self, bus, device, function, address, word_value ):$/;"	m	class:Pci
xmlAux	source/tool/chipsec/xmlout.py	/^class xmlAux:$/;"	c
xmlTestCase	source/tool/chipsec/xmlout.py	/^class xmlTestCase():$/;"	c
xmlTestSuite	source/tool/chipsec/xmlout.py	/^class xmlTestSuite(object):$/;"	c
